   Founded By:    |  _                        _______
 Guardian Of Time |  __      N.I.A.   _      ___   ___  Are you on any WAN? are
   Judge Dredd    |  ____     ___    ___    ___     ___ you on Bitnet, Internet
------------------+  _____    ___    ___    ___     ___  Compuserve, MCI Mail,
  \           /      ___ ___  ___    ___    ___________  Sprintmail, Applelink,
   +---------+       ___  ___ ___    ___    ___________    Easynet, MilNet,
   | 17DEC90 |       ___   ______    ___    ___     ___    FidoNet, et al.?
   | File 68 |       ___    _____    ___    ___     ___ If so please drop us a
   +---------+               ____     _     __      ___        line at
                              ___           _       ___ elisem@nuchat.sccsi.com
        Other World BBS        __
           Text Only            _    Network Information Access
                                       Ignorance, There's No Excuse.

Due to some complaints about our previous files being to SHORT, we have decided
to make some needed changes.  To tell you the truth, we never expeceted anyone
complaining about any of our files, so the mail we have been receiving has
opened our eyes up.  PEOPLE ARE READING NIA!

We looked over some of the different text file magazines out there, and decided
to follow this path. We will be printing less frequent files (unless our
Internet Address just starts overflowing w/ submissions), BUT they will be
larger!  This change, we hope, will make some of our readers happy.  So to kick
off the new file correctly,  NIA068 will be the first in a new line of better,
longer files.  I trust the change will please you.

NOTE when sending mail to us, if you want your name added to our mailing-list,
please state in the letter the address you want it sent to.  This will make
our life much easier and your request go smoother. (elisem@nuchat.sccsi.com)

                                                  NIA EDITORS


=============================================================================

Table_Of_Contents

1. DECnet [01]............................................Guardian Of Time
2. Unix: UUCP Files............................................Judge Dredd
3. VAX: Tekno DCS HELP [01]....................................Judge Dredd
4. HP: DBEDIT Manual.......................................Malefactor [OC]
5. *LONG* Surveilance Expo '90 Report................................Thalx
6. TIME-TRIP: 1985 MOG-UR CC Charges Against Tom Tcimpidis....Count Nibble
7. Department Of The Army Field Manual [01]...................Death Jester
8. Comments From The Editors......................................GOT & JD

==============================================================================

                          /                       /
                          /    File 1 / NIA068    /
                          /      DECnet [01]      /
                          /    Guardian Of Time   /
                          /                       /

$_Basic Overview Of DECnet-VAX Networking

All DEC Systems have a capability of Linking up and sharing system wide
resources and increasing the capability of that particular VAX/PDP System.  They
participate in what they call the DECnet Network, using its interface called
the DECnet-VAX.

I will try to go into detail about what the DECnet Network IS. This file will
be for the beginner and I hope that I do enough that you can figure out what
is going on.  I am new to networking so I figure that the best way to start is
to start with a basic overview then work my way up.

$_What Is A Network?

A Network is an entity of two or more computer systems that are connected by
physical links ( cable,microwave, and or satellites ).  The purpose of
Networking is for the exchange of Information, Programs, Ideas, etc...

Networking is the "Wave Of The Future".  Forget Phreaking it is basically
dead.  If you want to power or if you want to get a jump and leave others
behind in the dust, learn NETWORKING, there are 1000's of networks and they
are all out there, just waiting for someone to dial in and exploit them or
to learn from them or to use them.

If you plan on hacking into Networks please remember the Golden Rule about
Hacking:

NEVER ABUSE THE SYSTEM YOU ARE USING, SET UP AN ACCOUNT, LEARN WHY
YOU COULD SET UP THE ACCOUNT AND SEE IF IT WORKS ELSWHERE. NEVER SELL
SECRECTS, NEVER TRY TO RUIN SYSTEMS ( REMEMBER 414 AND THE HOSPITAL RECORDS
AND WHERE ARE THEY NOW? ).

$_What is DECnet?

DECnet is any of Digital Electronic Corporation's (DEC) operating systems,
linked up by modems, satellites, ethernets and such like things.

Listed below are a few of the different types of Operating Systems that DEC
uses:

VAX/VMS
VAX Station 2000
VAX 8500 Series
Vax 8600 Series
Vax 8800 Series
Microvax 2000
MicroVax 1 Running MicroVMS or VAXEL
PDP-11 Running RSX-11M, RSX-11S, RSX11M-PLUS, RSTS/3 or RT-11
DECsystem-20'S
DECsystem-10'S Both 20's and 10's Running TOPS-20 and TOPS-10
Professional 350 Personal Computers Running P/OS Operating systems

The above mentioned Operating Systems and machines, are completely able to
communicate with DECnet, with no special arrangement (as far as I can tell).

Those of you with NON DEC equipment must find out if the DECnet is
supporting X.25 PROTOCOL.  If it is, you can then dial with one Network,
into DECnet with no problem, just as long as they are implementing the X.25
Protocol.

DECnet considers all of their systems as equal, there is NO Coordinator, and
no worry about having to go through one central location.  You have complete
and free access from each system, with no hassels.

DECnet can vary in size, it can be very small or become an extensively large
network.  A small network might consist of two to four nodes.  A maximum of
1023 nodes is possible in an UNDIVIDED DECnet network.  Very large DECnet
networks can be divided into multiple Areas, up to 63 areas in fact, and
each area (also called a network), can consist of 1023 nodes each.

Below are some examples of what a DECnet Network could LOOK like.  Now, if
you are new to flow charts, I'd suggest you read up but basically its quite
easy to follow, the Boxes represent a location or a mainframe, the lines
that connect the boxes, mean that they are connected either by modems,or by
ETHERNETS.

ÚÄÄÄÄÄÄÄÄ¿  ÚÄÄÄÄÄÄÄÄ¿  ÚÄÄÄÄÄÄÄÄ¿
³TERMINAL³  ³TERMINAL³  ³TERMINAL³
ÀÄÄÄÄÂÄÄÄÙ  ÀÄÄÄÄÂÄÄÄÙ  ÀÄÄÄÄÂÄÄÄÙ
     ³    ÚÄÄÄÄÄÄÁÄ¿         ³               ÚÄÄÄÄÄÄÄ¿
     ÀÄÄÄÄ´TERMINALÃÄÄÄÄÄÄÄÄÄÙ               ³VAX 800³
          ³SERVER  ³                         ÀÄÄÂÄÄÄÄÙ
          ÀÄÄÄÂÄÄÄÄÙ                            ³     ETHERNET
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÂÄÄÄÄÄÄÄÄÄÄÂÙ
    ÚÄÄÄÄ¿   ÚÄÄÄÄ¿  ÚÄÄÄÄ¿                        ³          ³
    ³VAX ÃÄÄÄ´VAX ÃÄÄ´VAX ³                       ÚÁÄÄÄÄÄÄ¿   ³
    ³8600³   ³8800³  ³8850³                       ³VAX8800³   ³
    ÀÄÂÄÄÙ   ÀÄÄÂÄÙ  ÀÄÄÂÄÙ                       ÀÄÄÄÄÄÄÄÙ   ³
      ³         ³       ³                           ROUTER    ³
      ÀÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÙ                                     ³
            VAX CLUSTERS                                      ³
                                                              ³
           END NODES                                  ÚÄÄÄÄÄÄÄ´
 ÚÄÄÄÄÄÄ¿ ÚÄÄÄÄÄÄÄ¿ÚÄÄÄÄÄÄÄÄÄÄ¿                       ³LAN    ³
 ³MICRO ³ ³RAINBOW³³VAXSTATION³                       ³BRIDGE ³
 ³PDP-11³ ³100    ³³II/GPX    ³                       ³100    ³
 ÀÄÄÂÄÄÄÙ ÀÄÄÄÂÄÄÄÙÀÄÄÄÄÂÄÄÄÄÄÙ                       ÀÄÄÄÄÄÄÄ´
    ³      ÚÄÄÁÄÄ¿      ³                                     ³
    ÀÄÄÄÄÄÄ´DELNIÃÄÄÄÄÄÄÙ                                     ³
           ÀÄÄÂÄÄÙ                                 ETHERNET   ³³
ÚÄÄÄÄÄÄÄÂÄÄÄÄÄÁÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÙ
    ÚÄÄÄÁÄÄ¿       ÚÄÁÄ¿    ÚÄÄÄÄÄÁÄÄÄÄ¿
    ³PDP-11³       ³PRO³    ³MICROVAXIIÃÄÄÄÄÄ¿
    ÀÄÄÄÄÄÄÙ       ³350³    ÀÄÄÄÄÄÄÄÄÄÄÙ     ³
       END         ÀÄÄÄÙ        ROUTER     ÚÄÁÄÄÄ¿
       NODE         END                    ³MODEMÃÄÄ¿
                    NODE                   ÀÄÄÄÄÄÙ  ³
                                                    ³
                                             ÚÄÄÄÄÄÄÁÄÄÄÄÄ¿
                                             ³MICROVAX3500³
                                             ÀÄÄÄÄÄÄÄÄÄÄÄÄÙ
                                                 END NODE

The above is a Wide Area Network, and as you can tell you can have quite a
bit hooked up to a small network, and before sending over a modem or
satelite or whatever, you could be in one network, and have just one modem
hooked up to it.  So you get an idea of how a network can be wide or can be
as small as just a PDP-11 hooked up with a Microvax 3500, like below:

ÚÄÄÄÄÄÄ¿   ÚÄÄÄÄÄ¿     ÚÄÄÄÄÄÄÄÄÄÄÄÄ¿
³PDP-11ÃÄÄÄ´MODEMÃÄÄÄÄÄ´MICROVAX3500³
ÀÄÄÄÄÄÄÙ   ÀÄÄÄÄÄÙ     ÀÄÄÄÄÄÄÄÄÄÄÄÄÙ

Below is yet another typical network, this will show you access to a non-dec
network or how typical it is to be spread out around the world:

ÚÄÄÄÄÄÄÄ¿             ÚÄÄÄÄÄÄ¿          ÚÄÄÄÄÄÄ¿
³BOSTON ÃÂÄÄÄÄÄÄÄÄÄÄÄÄ´ PSDN ÃÄÄÄÄÄÄÄÄÄÄ´LONDON³
ÀÄÄÄÄÄÄÄÙ³            ÀÄÄÄÄÄÄÙ          ÀÄÄÄÄÄÄÙ
         ³
         ³
         ³
ÚÄÄÄÄÄÄÄÄ´
³NEW YORK³
ÀÄÄÄÂÄÄÄÄÙ
    ³
    ³   ETHERNET    ³
ÚÄÄÄÁÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÙ
³       ÚÄÄÄÄÁÄÄÄÄ¿
        ³ GATEWAY ÃÄÄÄÄÄÄ¿
        ÀÄÄÄÄÄÄÄÄÄÙ      ³
                   ÚÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ¿
                   ³IBM SNA NETWORK³
                   ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

The above example is sorta the same example that Mark Hess used to cross
over into the US during his stunt with Clifford Stroll.  Read The CooKoo's
Egg, then you'll get a real understanding of Networks and such.

A PSDN is short for PACKET SWITCHING DATA NETWORK or TYMNET or TELENET those
are PSDN's and with the right accounts you can cross the transatlantic
rather than just the US borders.

Wondering how the two Cities are connected together? They use a format
called DDCMP CONNECTIONS, these are dedicated phone lines, connecting the
two and sharing information using their own form of Protocols.

DDCP Message format are in three different types: data, control and
maintenance.  Data messages consist of user data.  Control messages return
acknowledgements and other control information to ensure data integrity and
error-free transmission.  Maintenance messages consist of information for
downline loading, upline dumping, link testing, or controlling a remotely
located, adjacent system.


$_DATA LINK PROTOCOLS

Currently (1984), there are three protocols residing in the DNA Data Link
layer:

Digital Data Communications Message Protocol (DDCMP)-a byte oriented
protocol.

Ethernet Protocol-Carrier Sense Multiple Access w/ Collision Detect
(CSMA/CD) w/ physical channel encoding and operating over a coaxial cable.

X.25 Levels 2 and 3-Operating over Level 1 of the CCITT X.25 recommendation,
which defines a standard interface between data terminal equipment(DTE),
such as a DECnet node,and the data circuit terminating equipment (DCE) of a
packet-switched data network.

$_DDCMP

DDCMP was designed in 1974 specifically for the Digital Network
Architecture.  DDCMP is functionally similar to HDLC-High Level Data Link
Control-which was adopted in 1975 by the Internation Standards
Organization.(HDLC is a BIT oriented protocol however)  Another type of data
link protocol that is commonly implemented is BISYNC, which is CHARACTER
oriented.

There are three general types of data link protocols: byte oriented,
character oriented, and bit oriented.  DDCMP is a byte oriented protocol.
Such protocol provides a count of the number of bytes that are sent in the
data portion of each message.  A character oriented protocol uses special
ASCII characters to indicate the beginning of a message and the end of a
block of text, and a bit oriented protocol uses flags to frame data sent in
undefined lengths.  Neither the character oriented nor the bit oriented
protocol contains provisions for checking whether all the transmitted data
has arrived at its destination.  The advantage of a byte count in a byte
oriented protocol is that it facilitates checking on the part of the
receiving node to see whether all transmitted data has been received.

DDCMP is a general purpose protocol.  It makes maximum use of channel
bandwidth and handles data transparency efficiently.

Data Transparency is the capaility of receiving, w/out misinterpretation,
data containing bit patters that resemble protocol control characters.

Character oriented protocols can not handle transparent data as efficiently
as byte or bit oriented protocols.

DDCMP transmits data grouped into phsyical blocks known as data messages and
provides a mechanism for exchanging error-free messages.  This mechanism
works in the following manner: DDCMP assigns a number to each data message,
beginning w/ the number one (after each initialization) and incremented by
one for each subsequent data message.  In addition, DDCMP places a 16-bit
cyclic redundancy check (CRC16) error detection polynominal at the end of
each data message transmitted.

The receiving DDCMP module checks for errors and, if there are none, returns
an acknowledgement that it has received the message.  Acknowledgement is
efficient since the receiving DDCMP module does not have to acknowledge each
message sent.  Acknowledgement of data messages n implies acknoledgement of
all data messages up to and including data message n.  If the receiving
DDCMP module detects an error, it uses time-outs and control messages to
resynchronize and trigger retransmission.


                                DATA MESSAGES

DDCMP formats all messages from the Routing Layer into a data message
format:

SOH COUNT FLAGS RESP NUM ADDR BLKCK1 DATA BLKCK2
 8   14     2    8    8   8     16    8n    16

SOH     = The numbered data message identifier
COUNT   = The byte count field
FLAGS   = The link flags
RESP    = The response number
NUM     = The transmit number
ADDR    = The station address field
BLCK1   = The block check on the numbered message header
DATA    = The n-byte data field, where 0 < n = COUNT < 2(14)
BLCK2   = The block check on the data field


                             MAINTENANCE MESSAGES

Maintenance Message is a DDCMP evenlope for data controlling downline
loading and upline dumping, and controlling unattended computer system.

DLE  COUNT  FLAGS  FILL  FILL  ADDR  BLKCK1  DATA  BLCKCK2
 8    14      2     8     8     8      16      8n     16

DLE     = The maintenance message identifier
COUNT   = The byte count field
FLAGS   = The link flags
FILL    = A fill byte with a value of 0
ADDR    = The tributary address field
BLCKCK1 = The header block check on fields DLE through ADDR
DATA    = The n-byte data field, where 0<n=COUNT<2 (14)
BLCKCK2 = The block check on the DATA field


                               DDCMP OPERATION

DDCMP Module has 3 functional components:

FRAIMING
LINK MANAGEMENT
MESSAGE EXCHANGE

                                   FRAIMING

Locates beginning and end of a message received from a transmitting DDCMP
module.  Process involves locating and locking onto, or by synchronous w/ a
certain bit, byte, or message and then receiving subsequent bits, bytes or
messages at the same rate they come in.

At the phsyical level modems/communications interface synchronize bits.
DDCMP fraiming component synchronizes bytes by locating a certain 8-bit
window in the bit stream.  Asynchronous links, DDCMP uses start/stop
transmission techniques to synchronize bytes.  Synchronous links, DDCMP
searches for a SYN character.  Byte synchronization is inherent in 8 bit
multiple parallel links.  DDCMP synchronizes messages by searching for one
of the three special starting bytes:

SOH - Data messages
ENQ - For control messages
DLE - For Maintenance messages

To maintain message synchronization, DDCMP counts out fixed length headers
and when required, counts out variable length data based on count field of
the header.


Definitions:

AREA            : Large Number of Nodes together ( 1023 makes one area ).
                  Maximum Areas are 63 each with a total of 1023 nodes ).
BISYNC          : Binary synchronous.
CLUSTER         : Group of VMS Systems organized to share processor/storage
                  resourses.
DCE             : Data circuit terminating equipment.
DDCMP           : Digital Data Communications Message Protocol.
DEC             : Digital Equipment Corporation.
DECNET          : The Network used by DIGITAL.
DNA             : Digital Network Archictecture or the framework of
                  specifications within which Digital designs its communications
                  products and the equipments/networks that it uses.
DTE             : Data terminal equipment.
ETHERNET        : Thin Cable Connecting DEC systems together can run as long
                  as 1.4 miles.
HDLC            : High Level Data Link Control.
LAN             : Local Area Network (withing the same area), systems that
                  are connected together.
NETWORK         : Entity of two or more computer systems that are connected by
                  physical links.
NODE(s)         : A a system that is on DECnet, each System is considered a
                  node.
SNA             : System Network Architecture. ( IBM ).
PSDN            : Packet-Switched Data Networks.
SYSTEM MANAGERS : Like Sysops that run a BBS, they run the Vax, Unix etc and
                  are in control of the system.  Assigning accunts, Times,
                  deletion of users, system security, etc...
VMS             : Virtual Memory System or the Operating System of a Vax.
WAN             : Wide Area Network, Systems(nodes) that span the Country
                  and the world.
X25 ROUTER      : Protocol to communicate with NON-DEC Operating Systems or
                  used to communicate with Packing Systems such as Telenet
                  or Tymnet.


==============================================================================

                           /                     /
                           /   File 2 / NIA068   /
                           /   Unix UUCP Files   /
                           /    Judge Dredd      /
                           /                     /


Well, this is a file that was in the uucp login dir on a unix system, to all
those of you that are experienced in hackin' unix, enjoy:


                            TABLE OF CONTENTS

	1. cu ---------------------------------- Page 1
        2. setuname ---------------------------- Page 1
	3. uname,uuname ------------------------ Page 1
	4. Sysfiles ---------------------------- Page 2
	5. Systems ----------------------------- Page 3
	6. Devices ----------------------------- Page 7
	7. Dialers ----------------------------- Page 9
	8. Dialcodes --------------------------- Page 10
	9. Permissions ------------------------- Page 11
       10. Maxuuscheds,Maxuuxqts --------------- Page 15
       11. remot.unkno ------------------------- Page 15
       12. Crontab ----------------------------- Page 16
       13. Poll -------------------------------- Page 16
       14. uugetty ----------------------------- Page 16
       15. uudemon.clup,uudemon.admin ---------- Page 17
       16. uudemon.hour,uudemon.poll ----------- Page 17
       17. XNS,Towernet ------------------------ Page 17
       18. uukick,Uutry ------------------------ Page 17
       19. Older uucp connections -------------- Page 18
       20. New feature ------------------------- Page 19

       This index only highlights major areas of the README
       file. 
       

       README Page 1


       NOTE** The following information is not intended to be a replacement
       for the uucp administrator reading the uucp section of the Superuser
       Guide.  If the uucp administrator is establishing a link to a system
       which is running the older version of uucp ( i.e. - does not support
       bidirectional communication ) then he/she should consult the uucp
       section of documentation for that system.


       New Features:
       =============

	Cu has also been modified to be more transparent to control sequences
	sent by the called system.  The local system is set for no expansion
        regardless of initial tab settings.  It is assumed that the called
        system will handle expansion.

        If cu is being used for a connection to a remote system which
        has crashed or is shut down and the connection appears to be
        locked up, performing a '~.' (tilde, dot) should disconnect
        the user in approximately 10 seconds, or a '~..' should disconnect
        sooner.
	
	NOTE** cu does not work over Towernet. Cu is usually used when
	using direct connection or over a modem.  For a connection over
	Towernet, the user should use rlogin if available.

	Since many applications, such as "vi", use control characters, cu's
	default setting does not follow DC1/DC3 protocol(i.e. -ixoff is not
	set on the local port). However, if it appears that data is being
	lost during a cu session, the user may opt to toggle the nostop
	option which will set ixoff on the local port. Please see the cu man
	page for more detail.
#
    IMPORTANT
    ---------
    Most of the essential programs, like uucico must run suid uucp and the
    uucp uid MUST be 6 and uucp gid MUST be 6 as well.  This is NOT the
    traditional SysV uucp uid and gid but it DOES correspond to current
    practice on Towers, so there should be no problem.

#
#
	(/usr/lib/uucp/setuname)
---

        An added feature is the program setuname that may be used to modify
        the nodename of a running kernel.  For uucp and related utilities to
        work properly it is important that the name used by uucp be the same as
        the nodename that the running kernel is using. Setuname can only
        be run by root.

        "uname -n" will give you the nodename of the running kernel.

        "uuname -l" will give you the name that uucp sees as its local
        name.


        README Page 2


	For uucp to be used correctly,  "uuname -l" must be the
        same as "uname -n".  Uucp must be using the nodename of the
        running kernel.

 	The program setuname will allow you to change the nodename of
        the running kernel(memory) and on disk.

        EXAMPLE SETUNAME COMMAND
        ========================
        setuname -k -n new_nodename

        where -k        - specifies to write the new utsname struct
                          into /dev/kmem01, all other /dev/kmem(s)
                          present in the system, and /unix.
        -n new_nodename - set new nodename to "new_nodename"

        NOTE*** The Administrator uses a file called /etc/NODENAME
                when making new kernels.  After a fresh base installation,
                /etc/NODENAME contains by default, a null value.  If
                setuname is used to change the nodename on disk, then
                the default name in /etc/NODENAME is changed by setuname
                to match the new nodename.

	Please see the setuname(1M) for more information.

#
#

        (/usr/lib/uucp/Sysfiles)
---

	There is a new control file "Sysfiles" which lets you specify,
        and separate, Systems, Devices, and Dialers file entries for
        uucico and cu.  Although use of Sysfiles is not necessary,
        it is useful for certain networks where, for example, requests
        for login service might be accepted on a different address than
        requests for uucico service (hence different Systems files), or
        where there are different chat scripts to request each service
        (hence different Dialers files).

	Another use of Sysfiles is to split large Systems files into
	smaller, more manageable files (e.g., local and global Systems
	files).

	FORMAT:

	service=<service name>	systems=<systems file list> \
				devices=<devices file list> \
				dialers=<dialers file list>

	Where service name is "uucico" or "cu".  Each file list is a list
	of colon-separated file names.  File names are relative to
	/usr/lib/uucp unless a full path name is given.  Files are searched
	in the order that they appear in the file list.
	The defaults are the usual uucp files: /usr/lib/uucp/Systems,


        README Page 3


	/usr/lib/uucp/Devices and /usr/lib/uucp/Dialers.

	EXAMPLE 1:
	This example uses different systems and dialers file to separate
	the uucico- and cu-specific information, with information that they
	use in common still in the "usual" Systems and Dialers files.

	service=uucico	systems=Systems.cico:Systems \
			dialers=Dialers.cico:Dialers
	service=cu	systems=Systems.cu:Systems \
			dialers=Dialers.cu:Dialers

	EXAMPLE 2:
	This example uses the same systems files for uucico and cu,
	but has split the Systems file into local, company-wide,
	and global files.

	service=uucico	systems=Systems.local:Systems.company:Systems
	service=cu	systems=Systems.local:Systems.company:Systems

#
#
#
    (/usr/lib/uucp/Systems)
    ---------------------------------------------------------------------------

    The Systems file (/usr/lib/uucp/Systems) corresponds to the old L.sys
    file.  Each line is used to describe a system and a way to get to that
    system, and how to login when the connection is established.  When
    calling out, uucp will try to use each line of this file, in order, until
    it can make a connection and tries to login.  If the login fails, the
    work is postponed.

    The format is six space-separated fields:

    NAME TIME TYPE CLASS PHONE LOGIN

    No leading white space.  Lines beginning with '#' are comments.

    The NAME is the system name of the remote system. The system name
    should contain NO slashes and may be up to eight characters which
    is the limit of the nodename structure in the kernel.  A system
    name of T32_600 is allowed while T32/600 causes errors and
    should not be used.

    Every system which you call should have at least one entry.
    It is possible to have anonymous (strangers) call in, but it is
    not desirable from a security point of view.  More on this
    later in the section about Permissions and remote.unkno.

    The TIME field indicates when this phone number/class may be used
    to establish a connection. This field has a day field, followed by
    an optional time-of-day field, followed by an optional retry field.
    There are no spaces separating subfields. The day string is a list of
    one or more day abbreviations:


    README Page 4


         Su Mo Tu We Th Fr Sa
    or:
    	Wk - meaning any weekday
    or:
    	Any - meaning any day
    or:
    	Never - for no calls out to this system, call in only

    The TIME field is optional (none means any time) and is a range such as:

    1730-0730 - which means 5:30 P.M.to 7:30 A.M.

    The RETRY field, if present, consists of a semicolon followed by the
    number of minutes to wait before retrying if the dial fails.  Otherwise
    the number is retried (once) almost immediately.

    The TYPE field is used to find a device or port to dial-out on.  It MUST
    match the FIRST field of a line in the Devices file.  The most common
    entry is "ACU", which is used for 801-type acus as well as smart modems.
    You may also use any other name for other types of connections.

    The CLASS field is used to further restrict the search for an available
    device.  It is also used to set the speed of the connection.  The class
    field may contain a letter as well as the speed:

    	D1200

    The above example will only match a Devices file line with Class
    Field of "D1200" or  "Any".  The CLASS field of the Systems file may
    also use the key word "Any" which will match with the Devices file of
    the same type.  If the match involves "Any", then in each file 1200
    bps is assumed.

    The fifth field is the "PHONE" field and is the phone number that will
    be sent to the dialing device.  There are two possibilities.  First,
    Phone can contain a phone number, with an optional alphabetic prefix
    that will be translated from the Dialcodes file.  In the string there
    are two other abbreviations: '=' and '-'.  The '=' indicates that the
    dialer should pause and wait for another dial tone.  A '-' means to pause
    for approximately four seconds.

    It is also possible to have other information in the Phone field to be
    used to connect through an intelligent switch to another system.  In
    this case the field can be sent untranslated.  Translation is controlled
    by the contents of the Devices file.

    The last field(s) are the "expect send" pairs that are typical of the
    login sequence. This field is not processed until the connection has
    been established. The first subfield is an expect subfield; to send first
    a null "expect" may be designated by "".   An "expect" may itself have
    subfields separated by '-':  expect1-send1-expect2-send2-expect3 and so
    on, ending with an expect.  Send fields may have certain abbreviations
    embedded in them:
    	\c - at the end of a send field indicate no newline is to be sent
    		otherwise a newline is sent by default
    	\r - send a carriage return


        README Page 5


    	\n - send a newline
    	\N - send a null
    	\b - send a backspace
    	\d - delay 2 seconds
    	\p - pause .25 to .5 seconds
    	\s - send a space character
    	\t - send a tab character
    	\\ - send the backslash
    	EOT- send an EOT (actually the EOT\n pair is sent twice)
    	BREAK - send a break
    	\nnn - convert the octal digits nnn to a character and send

    An example:

    xyz Any;2 ACU 1200 ACpa-555-6695 "" \n ogin--ogin-EOT-ogin--ogin-BREAK-ogin nuucp

    This line is for the remote system "xyz".
    We may dial at any time, wait two minutes in case of failure.  Uucp will
    normally try the same number twice.

    Uucp will use some kind of ACU or dialing modem. The first available
    line from the Devices file that has a first field with "ACU" will be
    used.  The system that this particular example comes from, uses a Hayes
    Smartmodem.

    The phone number passed to the dialing routine will be 555-6695 plus
    whatever ACpa is specified as in the Dialcodes file (probably 1-215, the
    area code for Southeastern Pa).  Pauses will be placed after the area
    code and also after the exchange number.

    After connection is established by the dialer, a newline will be sent.
    It will be sent without waiting because of the initial null expect
    field.  If the response comes back with "ogin" embedded in it, "nuucp"
    will be sent; if not, another newline is sent (the -- ).  If ogin is
    still not received EOT\n is sent twice.  If that doesn't do it another
    newline is sent. And if that doesn't work a break is sent.  If that
    fails to get "ogin" the login sequence is aborted and uucp gives up the
    attempt for the time being.

    MORE Systems file examples -----

    NAME TIME TYPE CLASS PHONE LOGIN

   # A direct connection
     kudzu Any kudzu 9600 - "" \r\d\r\d\r\d\r ogin: nuucp ssword: sniglet

     kudzu - the remote system's name
     Any    - call any time
     kudzu - matches the first field of a line in the Devices file


     README Page 6


     9600   - the speed
     "-"    - no phone number
     "" \r\d\r\d\r\d\r ogin: nuucp ssword: sniglet - the expect/send string.

---

   # Towernet connection - for systems that support Towernet
   #####NOTE -- A default Towernet line has already been added to the Devices
                file. If you do not have Towernet on your Tower 32, this
                line is ignored.
     zebra Any tnet,e Any -

     zebra   - the remote systems name
     Any     - call any time
     tnet,e  - is an arbitrary name that matches the first field in
               the Devices file and ,e means "use e protocol"
     Any     - CLASS field since uucp will be using Towernet, the word Any is
               sufficient.
     - 	     - acts as a null space holder for the phone field.

     It is recommended that either e or f protocol be used for Towernet
     uucp connections (SEE the Towernet section of this README file).
     The protocol selection is done either in the Systems file or may
     also be done in the Devices file or both.  The following are
     examples of ways that protocols can be selected for uucp file
     transfer :

     If the Systems file looks like :
     zebra Any tnet Any -

     and the Devices file looks like:
     tnet - - Any XNS

     THEN -- you will be using the default g protocol, which may cause
     the problem noted in the Towernet section of this README file.  Instead,
     use either the f or e protocols as follows :
---
     If the Systems file looks like :
     zebra Any tnet,e Any -

     and the Devices file looks like:
     tnet - - Any XNS

     then e protocol will be used.
---
     If the Systems file looks like :
     zebra Any tnet Any -

     and the Devices file looks like:
     tnet,e  - - Any XNS

     then e protocol will be used.
---
     If the Systems file looks like :
     zebra Any tnet,f Any -

     and the Devices file looks like:
     tnet,f  - - Any XNS

     then f protocol will be used.
---

     README Page 7


     Please refer to the uucp section of the Superuser Guide for more
     information on protocol selection.
---
     more Systems file examples

     #log in kudzu first try 2400 on both lines then try 1200 baud

     kudzu Any ACU 2400 =794-6666 "" \r\r@\d@\d@\d@\d@\d@\d@\d ogin-BREAK-ogin--ogin-BREAK-ogin-BREAK-ogin-BREAK-ogin nuucp

     kudzu Any ACU 2400 =794-6281 "" \r\r@\d@\d@\d@\d@\d@\d@\d ogin-BREAK-ogin--ogin-BREAK-ogin-BREAK-ogin-BREAK-ogin nuucp

     kudzu Any ACU 1200 =794-6666 "" \r\r@\d@\d@\d@\d@\d@\d@\d ogin-BREAK-ogin--ogin-BREAK-ogin-BREAK-ogin-BREAK-ogin nuucp

     kudzu Any ACU 1200 =794-6281 "" \r\r@\d@\d@\d@\d@\d@\d@\d ogin-BREAK-ogin--ogin-BREAK-ogin-BREAK-ogin-BREAK-ogin nuucp

     # direct to modem

       hayes12 Any hayes12 1200
       hayes24 Any hayes24 2400
#
#
#
    (/usr/lib/uucp/Devices)
    ----------------------------------------------------------------------------

    NOTE*** When you remove entries from the Devices file, you must
    remove the corresponding entry in the /etc/inittab file for proper
    construction of the Administrator terminal and printer
    lists.

    For information on modem settings refer to the Hardware Service
    Manual.

    The Devices file corresponds to the L-devices file of the old uucp.
    Each line describes a line and a use of that line to make a connection.
    Each line has the following format:

    TYPE LINE LINE2 CLASS DIALER TOKEN [DIALER TOKEN] ...

    Both type and class will be matched from a line in the Systems file.
    Comments beginning with '#' or white space are ignored.

    The TYPE field may be any name, but should match the third field of
    the Systems file.  For direct connections the TYPE field is usually
    the remote system's name. It is of importance to note that for cu
    connection, the TYPE field of the Devices file MUST have the
    word "Direct" with a capital "D". "ACU" is used for all lines that
    use either a dialable smart modem or a real acu.

    For Towernet connections, the TYPE field may be followed by ",e"
    or ",f" to specify the correct protocol.

    The LINE field should contain the name of the device through which the
    connection will be made.  For example, "ttya" will mean that the
    connection will be attempted through "/dev/ttya". For entries that
    use XNS ( for Towernet ) in the dialer field this should be "-".


    README Page 8


    The CLASS field has the same format and is matched to the class field of
    the line from the Systems file.

    The LINE2 (3rd) field should be "-" on most Tower 32 systems.  It is 
    the name of the auxiliary device port to which a good-old-fashioned 
    801-ACU is attached.

    The DIALER field is used to select the method of making the connection.
    The field must match either one of the builtin dialers, the first field
    of one line in the Dialers file.  The word "direct" can be used on
    direct connections and cu connections.  It matches a line in the Dialers
    file with a null script. The word "XNS" is used for Towernet connections.

    Current reserved names for builtins are:

    	"801"		801 ACU Dialer
    	"212"		801 ACU Dialer
    	"TCP"		4.2BSD sockets
    	"Unetserver"	3Com implementation of TCP
    	"DK",		Datakit Network
    	"XNS"		Towernet, XNS (xsp service)
        "direct"        direct RS232 connections

    Builtins are checked first and then the Dialers file for all
    remaining dialer fields.

    The last field is the string to be sent to the dialer.  If none is
    present or if only an \D or \T is present then the Phone field from the
    Systems file is processed.  \D ensures that the contents of the
    PHONE field of the Systems file will not be interpreted as a valid
    entry in the Dialcodes file, while \T ensures that it will.

    Multiple dialer-token pairs may be present.  Only the last token may be
    missing.

    Devices file EXAMPLES:

---

   Direct tty03 - 9600 direct

      A cu connection where :

       Direct    - specifies that this is to be used by cu
       tty03    - /dev/tty03 will be the port used by cu
       "-"       - no 801 ACU
       9600      - 9600 bps
       direct    - matches a null script in the Dialers file

---

NOTE ::: FOR SYSTEMS THAT SUPPORT TOWERNET

   tnet,e - - Any XNS

      A Towernet connection where:

      tnet        - matches third field in systems file


      README Page 9


      ,e          - e protocol for Towernet
      -           - no tty port
      -           - no 801 ACU
      Any         - speed is of no concern since it will be a Towernet
                    transmission
      XNS         - specifies Towernet connection

---

     more examples----
	ACU tty04 - 2400 hayes \T
	ACU tty05 - 1200 hayes \D

#
#
#
    (/usr/lib/uucp/Dialers)

---

    This file contains one line scripts that directs the handshaking that
    takes place between the system and various types of dialers.  The
    first field is the name of the dialer and is matched against the dialer
    field of the Devices file.

    Comment lines start with "#" or white space.

    The second field is a set of translations and may be null ("").  These
    translations usually are used to map "=" and "-" into the appropriate
    characters for the dialer.  Other translations may be specified.

    The remaining fields are expect-send strings.

    The escape sequence permitted in the send strings are:
    	
    	\p	- pause (.25 to .5 sec)
    	\d	- delay (approx. 2 sec.)
    	\D	- take Phone field from Systems file OR token from
    		  Devices file WITHOUT Dialcodes translation
    	\T	- same as \D but WITH Dialcodes translation
	\N	- null byte
    	\K	- send a Break
    	\E	- enable echo checking (send a char, wait 'til its
    		  received, send the next, wait ...) good if the device
    		  is slow and echos.
    	\e	- disable echo checking
    	\r	- send a carriage return
    	\c	- (at end of string) don't send a newline
    	\n	- send a newline
    	\nnn	- convert octal nnn to a character and send

    An example:

    	hayes	=,-,	"" \dAT\r\c OK\r \EATDT\T\r\c CONNECT

    	hayes	- matched against the Devices file dialer field, this
    		  field is usually the name of the dialer


        README Page 10


    	=,-,	- the "=" (wait for dial tone) is translated to ","
    		  (pause) since the Hayes Smartmodem 1200 does not have
    		  the ability to recognize dial tone; the standard pause
    		  character "-" is also translated to ","
    	
    	""	- expect nothing, i.e. send first

       \dAT\r\c	- wait 2 sec, send AT followed by a carriage return with
    		  no newline

    	OK\r	- expect OK followed by a carriage return

       \EATDT\T\r\c - turn on echo checking and send ATDT followed by the
    		  phone number as translated by the Dialcodes file,
    		  this is followed by a carriage return without a newline.

        CONNECT	- the script successfully completes if CONNECT is
    		  received

A SAMPLE Dialers file
---------------------

  penril	=W-P	"" \d > s\p9\c )-W\p\r\ds\p9\c-) y\c : \E\DP > 9\c OK
  ventel	=&-%	"" \r\p \r\p-\r\p-$ <K\D%%\r>\c ONLINE!
  rixon	=&-%	"" \r\p \r\p-\r\p-$ <K\D%%\r>\c ONLINE!
  vadic	=K-K	"" \005\p *-\005\p-*\005\p-* D\p BER? \E\D\e \r\c LINE
  develcon ""	"" \pr\ps\c est:\007 \D \007
  micom	""	"" \s\c NAME? \D\r\c GO
  hayes	=,-,	"" \dAT\r\c K\r \dAT\r\c K\r \EATDT\T\r\d\d\d\d\d\c CONNECT
  hayes24=,-,	"" \dAT\r\c K\r \dAT\r\c K\r \EATDT\T\r\d\d\d\d\d\c CONNECT
  bbox	=,-,	"" \dATB3\r\c K\r \dAT\r\c K\r \EATDT\T\r\d\d\d\d\d\c CONNECT
  direct
  XNS
---
#
#
#
    (/usr/lib/uucp/Dialcodes)
---

    The Dialcodes file is a list of abbreviations and their translations.
    Abbreviations are alpha strings and the corresponding translation is
    passed to the dialer.

    An example:

    	INRB 77=440-

    	INRB - an abbreviation meaning Internet-Rancho Bernardo is
    	translated to 77, wait for dial tone then send 440.

    From the code, it appears that the Dialcodes file has no formal
    mechanism for comments, any abbreviation that never matches will do, or
    the translation field may be followed by a comment.


    README Page 11


    (/usr/lib/uucp/Permissions)
---
    The Permissions file is the heart of security administration for uucp.
    Comment lines start with a '#'.  The format of the Permissions file is a
    sequence of logical lines of "option=value" assignments.  Logical lines
    may consist of multiple physical lines by escaping the newline with "\".

    There are two types of logical lines or entries in the Permissions file.
    These are LOGNAME entries and MACHINE entries.  These entries are
    composed of white space delimited "option=value" assignments.  No
    white space is permitted in these assignments. LOGNAME entries will have
    a LOGNAME assignment in it. Likewise MACHINE entries will have a MACHINE
    assignment.

    All login IDs used by remote systems to login for UUCP transfers MUST be
    specified in exactly one LOGNAME entry.  In the case of Towernet
    connections, where no actual login takes place, a LOGNAME entry must
    exist for the uid under which the server (/usr/bin/server) runs, usually
    root.

    REQUEST assignment
    ------------------
    "REQUEST=yes" or "REQUEST=no" : In a LOGNAME entry this specifies whether
    the local host will permit the remote to ask for files to be sent to the
    remote, when the remote calls in.

    In a MACHINE entry it specifies whether the remote may request files
    when the local host calls the remote.

    The default is REQUEST=no, the remote may not request files.

    SENDFILES assignment
    --------------------

    The SENDFILES assignment applies only to LOGNAME entries.
    "SENDFILES=yes" indicates that the local host will send files to the
    remote if the remote calls.  "SENDFILES=call" means to only send if the
    local host calls the remote.  The latter is more secure.  The default is
    "SENDFILES=call".  The yes option needs to be specified for passive
    relationships, i.e. the local machine never calls.

    READ and WRITE
    --------------

    The READ and WRITE assignments specify which SUBTREES of a system
    a remote machine may access.  The format of the value is a colon
    separated list of directory path names:

    	READ=/usr/news:/usr/spool/uucppublic

    The defaults are:

    	READ=/usr/spool/uucppublic
    	WRITE=/usr/spool/uucppublic

    The READ and WRITE assignments in the LOGNAME entry specify the


    README Page 12


    privileges of any machine that logs in with that user name.  This
    should be very restrictive for commonly used user names or user names
    without password protection.

    These assignments in a MACHINE entry specify the permissions when the
    local host calls the remote.

    	READ=/
    	WRITE=/

    is a wide-open machine.

    Specification of READ and WRITE replaces the defaults, it does not add
    to the defaults.


    NOREAD and NOWRITE
    ------------------

    Exceptions to the READ and WRITE access permissions may be specified in
    NOREAD and NOWRITE assignments.  These have the same format as the READ
    and WRITE assignments.

    	READ=/ NOREAD=/etc

    The above combination implies that the remote system may read any file
    on the system except those whose path names begin with "/etc".

    CALLBACK
    --------
    This option only applies to LOGNAME entries and indicates whether to
    accept ANY work from a remote, or whether to call back first.
    CALLBACK=yes means that no work will be done until the local host
    returns the call.  CALLBACK=no is the default.  If both machines specify
    CALLBACK=yes, nothing will get done, so assign this carefully.


    COMMANDS
    --------

    The COMMANDS assignment is a colon separated list of commands that a
    remote may specify.  This assignment only applies to the MACHINE entry.
    The default is "COMMANDS=rmail".  The command specified may be a
    filename or a path name.  If the path name is specified then all requests
    for the corresponding filename will use the specified path name.

    	COMMANDS=rmail:/usr/bin/ls:/usr/lbin/rnews

    This specifies that rmail, ls, and rnews may be "uux'd" from the remote.
    Furthermore the "ls" used will be /usr/bin/ls (regardless of search
    path) and rnews will come out of /usr/lbin.  The default search path for
    commands is "/bin:/usr/bin:/usr/lbin".  To permit full access, the
    assignment "COMMANDS=ALL" can be used.

    To allow forwarding specify "uucp" in the COMMANDS assignment.


    README Page 13


    VALIDATE
    --------

    The VALIDATE assignment applies only to LOGNAME entries but is a means
    of tying a particular machine to a particular user name.  The assignment
    is a colon separated list of machine names.  If a machine calls in and
    claims to be machine xxx, and VALIDATE=xxx is specified for a
    LOGNAME=Uxxx then the call will be terminated unless the caller logged
    in with user name "Uxxx".

    MACHINE
    -------
    A MACHINE assignment makes an entry a MACHINE entry.  The assignment is
    a colon separated list of machines (taken from the Systems file) or the
    keyword "OTHER".  The latter is used to specify a set of defaults for
    machines that are not listed in any entry.  All other assignments in the
    entry apply to each machine named in the MACHINE  assignment.
    For uux to work properly on the local system, there should be a MACHINE
    assignment entry for the local machine (ie. - MACHINE="local system name")
    in the local machines /usr/lib/uucp/Permissions file with the allowable
    commands defined.


    LOGNAME
    -------
    The LOGNAME assignment is a single user name by which a uucp connection
    can be initiated.

    A LOGNAME and MACHINE entry can be combined into a single entry.

    Example:
    --------
    LOGNAME=nuucp \
    	REQUEST=yes \
    	SENDFILES=yes \
    	READ=/usr/spool/uucppublic \


      README Page 14


    	WRITE=/usr/spool/uucppublic \
    	NOREAD= \
    	NOWRITE= \
    	CALLBACK=no 

    # Any machine that logs in as  nuucp can request files and we will send
    # files on the connection.  On requests by the remote to read or write
    # into /usr/spool/uucppublic or a subdirectory will be honored.  We call
    # the local machine "kudzu" for this connection.  A tilde in a request
    # is translated to "/usr/spool/uucppublic".

    LOGNAME=UncrsdX \
    	REQUEST=yes \
    	SENDFILES=yes \
    	READ=/usr/spool/uucppublic \
    	WRITE=/usr/spool/uucppublic \
    	NOREAD= \
    	NOWRITE= \
    	CALLBACK=no \
    	VALIDATE=ncr-sd 
    #
    # The VALIDATE command specifies that ncr-sd must log in as UncrsdX
    # any other user name used by ncr-sd would be considered an imposter
    #
    MACHINE=ncr-sd \
    	REQUEST=yes \
    	SENDFILES=yes \
    	READ=/usr/spool/uucppublic \
    	WRITE=/usr/spool/uucppublic \
    	NOREAD= \
    	NOWRITE= \
    	COMMANDS=ALL
    #
    # The COMMANDS=ALL means any uux request will be accepted. This is the
    # reason that the VALIDATE assignment is used in LOGNAME=UncrsdX to
    # ensure that more commonly known user names and passwords are not used
    # by an imposter posing as ncr-sd

    MACHINE=OTHER \
    	REQUEST=yes \
    	READ=/usr/spool/uucppublic \
    	WRITE=/usr/spool/uucppublic \
    	COMMANDS=rmail
#
#
#


        README Page 15


     LOGNAME=root \
	REQUEST=yes \
	SENDFILES=yes \
	READ=/usr/spool/uucppublic \
	WRITE=/usr/spool/uucppublic \
	CALLBACK=no 

        # The LOGNAME=root entry in the Permissions file is necessary
          for Towernet connections.

        MORE, yes more, /usr/lib/uucp/Permissions file EXAMPLES --

     MACHINE=bambi:doozer:grok:gollum:giggle \
   	REQUEST=yes \
   	READ=/usr/spool/uucppublic \
   	WRITE=/usr/spool/uucppublic \
	NOREAD= \
	NOWRITE= \
	COMMANDS=rmail:uucp:lp:lpr:help:print:who:ls:rnews:cunbatch

    MACHINE=OTHER \
   	REQUEST=yes \
   	READ=/usr/spool/uucppublic \
	WRITE=/usr/spool/uucppublic \
	COMMANDS=rmail 

NOTE** There should be a machine file entry for the local machine with
the appropriate commands so that uux will work on the local machine.
#
#
    (/usr/lib/uucp/Maxuuscheds and /usr/lib/uucp/Maxuuxqts)
---

    These two files contain a single line with the number of simultaneous
    uuxqts and simultaneous uuscheds that can be running. The number is
    given in ascii.  A value of 1 or 2 is common.  Note that processes
    such as news that assume that single threading is provided by uuxqt
    require a Maxuuxqts of 1.

#
#
#
    (/usr/lib/uucp/remote.unkno)
---

    If remote.unkno exists and is executable in /usr/lib/uucp then any
    system not listed in the Systems file will not be permitted to make a
    connection.  Moreover, remote.unkno is executed with its first (and
    only) argument, the name of the calling system.  This can be used to log
    the attempt in a log file or by mailing a message to the uucp
    administrator concerning the unknown system.


    README Page 16


#
#
#
    (/usr/lib/uucp/Crontab)
---

    A sample crontab for uucp is recorded in /usr/lib/uucp/Crontab.
    This crontab should also be present on your system as -
        /usr/spool/cron/crontabs/uucp.

    See crontab(1) for more information.

#
#
#
    (/usr/lib/uucp/Poll)

---

    Poll is a list of machines and the times at which they should be
    polled. The first field is a machine name, followed by a TAB followed
    by a space separated list of hours at which to call.

    EXAMPLE POLL FILE

    #  "system <tab> hour1 hour2 hour3 ..." lines for polling remote systems.
    #
    #   Lines starting with # are ignored.
    #   NOTE a tab must follow the machine name
    unit1	1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    unit2	9 16 23
    unit3	8 10 12 14 16
    unit6	8 10 12 14 16
    ncrcae	8 10 12 14 16 18 20 22

#
#
#
     (/usr/lib/uucp/uugetty)
---
    This is a version of getty that can be used on a port allowing both
    dial-in and dial-out connections.  Uugetty is identical to getty(1M)
    but changes have been made to support using the line for uucico,
    cu, and ct for bidirectional exchange of information.   Uugetty should
    not be used to call into a single direction getty.  More on this later
    when describing a direct connect to a unit which does not support the
    newer uucp.
    Please refer to the uugetty man page for more information.

#
#
#

    README Page 17

    (/usr/lib/uucp/uudemon.adm, /usr/lib/uucp/uudemon.clup,
    /usr/lib/uucp/uudemon.hour, /usr/lib/uucp/uudemon.poll)
---

    These are the demon scripts invoked by cron.  Change as you wish but be
    careful.
#
#
    XNS and Towernet considerations -- FOR SYSTEMS THAT SUPPORT TOWERNET
---

    As mentioned above, a uucp connection over Towernet initiated by a
    remote system requires a LOGNAME=root entry.

    /etc/service.db
    ---------------
    Put the following line in /etc/service.db:

    	1:uucp:xsp:444:/usr/lib/uucp/xnsuucico::

    /etc/towernet.db
    ----------------
    Put the following line in /etc/towernet.db:

    	uucp_socket:444

** On the Tower 32, these two lines should already exist in the files
   /etc/towernet.db and /etc/service.db if Towernet has been installed.

   One problem has been noted when using g protocol for file transfer over
   Towernet connections. The file transfer proceeds without fail, but either
   one or both sides of the connection will leave a process hanging.  On the
   slave side, the process "uucico -uroot" may be seen in the process table,
   but it will not be accumulating any more processor time.  Sometimes it
   may be possible to simply kill this process, but if it won't "die", then
   Towernet must be taken down and then restarted again. The master side, or
   the side that initiated the call ( and also the machine that determines
   what protocol will be used ) may not have a process hanging, or may have
   a uucico process hanging.  Again, go ahead and try to kill this process.

   The solution at this time, is to specify use of either the e or the f
   protocol for file transfer over Towernet in either the Systems file,
   the Devices file or both.  A default entry has been provided in the
   Devices file for Towernet connections.  When adding the corresponding
   Systems file entry, the administrator should use the type name(3rd field)
   "tnet" to utilize the correct Devices file entry. 

   The uucp section of the Superuser Guide has more detailed information on
   protocol selection.

#
#
#
	(/usr/lib/uucp/uukick, /usr/lib/uucp/Uutry
---
	The files uukick and Uutry, are shell scripts which
        enable the user to start the uucico daemon when retry time has
        not yet been reached.


        README Page 18


        The scripts are all variations on the same theme of removing the
        status file, and starting uucico.  Uukick will place the
        uucico in the background. Uutry will place the diagnostic output
        of uucico in a file called /tmp/systemname where systemname is
        the name of the remote system.

        To start uukick for the remote system pookey :

         uukick pookey

        Reference the Uutry man page for more information.

---

    Connection of a unit running the newer uucp(the uucp installed
    on the Tower32 is the newer uucp) and another using the older uucp.


	When you are faced with situation of establishing a link
        with a computer running the older version of uucp, then
        it must be established which system will be designated as 
	the calling unit (the master or active unit) and which will
	be the unit to be called (passive or slave unit).  If the
	system running the older version of uucp is the master unit,
	then either uugetty or getty can be used to receive the call
	on the system running the newer version of uucp.  However if
	the system running the newer uucp is the master unit,  then
	uugetty cannot be used to call.  The master unit must use a
	dialout only line to call the system running the older version
	of uucp.

	As an example, let us designate the system running the newer uucp
        as the master or calling unit.

        The /etc/inittab for the master unit will have the following
        entry :

        t01:1:off:/etc/getty tty01 9600 un

        The un designates "unknown" terminal type.  A terminal type
        is needed, as shown above, on the Tower32 (if acting as master)
        so that the Administrator's terminal listing is correct
        for the direct connection to a system with the old uucp.
        The line is acting as a raw line and no getty is being
        respawned.

        The Poll file on the master unit must be set up to poll
        the slave unit periodically to see if the slave unit has
        work queued for it.

        The master unit's Systems file example :

        slave_name Any slave_name 9600 - "" \r\d\r\d\r login: nuucp

        The master unit's Devices file example :

        slave_name tty01 - 9600 direct
---
        Since the slave unit must wait to be polled by the master
        unit, its'(the slave's) USERFILE file must be set-up
        to allow the master unit to take any work that the slave
        has queued for it. This can be accomplished by having the


        README Page 19


	USERFILE set up as follows :

        ,Master_unit /
        nuucp,       /

        This, of course, has no restrictions.


        *The slave unit's /etc/inittab file must respawn getty with
        an entry similar to the following in /etc/inittab :

        t02:1:respawn:/etc/getty tty02 9600


	*Slaves L-devices file should exist but with a length of zero.

	*Slaves L.sys file example

	Master_unit NONE Slave 9600 tty02

	The device, /dev/tty02 in this case, should have 0666 permissions.
		chmod 0666 /dev/tty02

	The owner of the line should be uucp.
		chown uucp /dev/tty02

        Please consult the appropriate superuser guide for further
        information on setting up the uucp files for the older version
        of uucp.


NEW FEATURES
============
	
	Uucp can now handle modems with full modem control.  This is
	indicated to uucico by a new syntax in the Devices file.
	If the line field of the active line of the Devices file has
	a ';N' termination, dialing will take place WITHOUT waiting
	for modem signals (like DCD or DSR).  Later in the same line
	a trailing ';C' on a dialer entry indicates when to expect
	carrier (et. al.)

	For example:

		ACU tty04;N - 1200 hayes;C \T
	
	This indicates that tty04 will not have carrier until the Hayes
        Smartmodem dialing sequence successfully completes.

	Cu and ct also support the new syntax in the Devices file.

	Note that no changes to the Devices file are required in order
	to operate as before.

=============================================================================

                        /                     /
                        /   File 3 / NIA068   /
                        /   Tekno DCS HELP    /
                        /    Judge Dredd      /
                        /                     /


 ABO[RT] [taskname][/PMD][/TERM=TTnn:]
 
 The ABORT command terminates execution of a specified task. 
 
 taskname     The name of the task to abort.  If taskname is not specified,
              the task started by a RUN command from the issuing terminal
              (task TTnn) is aborted. The variable nn is the octal unit
              number of the issuing terminal.
 
 /PMD         Forces a Postmortem Dump of the task.  See also HELP PMD.
 
 /TERM=TTnn:  (Privileged keyword.)  Aborts a task requested from the
              specified terminal. The variable TTnn: can be a logical
              name assigned to the terminal (such as MYTERM), or it can
              be a physical device name and unit number (such as TT17:).
 
 Nonprivileged users can abort tasks requested from the issuing terminal.
 Privileged users can abort any tasks.


 ALT[ER] taskname/keyword(s)
                 /PRI=n
                 /RPRI=n
                 /TERM=ttnn: 
 
 The ALTER command changes the static or running priority of an
 installed task.
 
 Parameters:
 
 taskname       Specifies the name of the task that is to have its running,
                or running and static priorities changed to n.  
 
 n              Specifies a priority in the range 1 to 250(decimal). 
                The system assumes the specified value is octal unless you
                append a period to the number.
 
 For more information on the ALTER command keywords, type HELP ALT keyword.

help brk

 BRK
 
 The BREAKPOINT TO XDT (BRK) command passes control to the Executive Deb
ugging
 Tool (XDT),  if it is currently loaded in your system.  If XDT has not 
been
 loaded, the BRK command has no effect.  
 
 If XDT is loaded in your system, all system activity halts and XDT 
 prints a message on the console terminal in the following form:
 
    BE:nnnnn
    XDT>
 
 To return control to your CLI, type P.  Proceeding from a breakpoint usually
 restores the system to the state that existed when you entered the BRK command.
 To enter the crash dump routine, type X at the XDT> prompt.
 
 The BRK command is privileged and must be issued from the console terminal.


 The CLI command establishes a command line interpreter other
 than MCR.  Except for the /SHOW keyword, the command is privileged.
 
 The format and valid keywords for the CLI command are:
 
        CLI (/keyword)
             /DISABLE=cliname
             /ELIM=cliname or ELIM=*
             /ENABLE=cliname
             /INIT
             /MESSAGE=cliname:"message-text"
             /SHOW
             /UNOVR
 
 For more information, type HELP CLI keyword.
 
 The CLI /INIT command also accepts subkeywords that set various
 characteristics for the CLI. For more information, type:
 HELP CLI INIT.


 DEV[ICES]        Displays information about all devices.
 
 DEV[ICES] dd:    Displays information about units of device type dd:.
 
 DEV[ICES] dev:   Displays information about the specified device. The
                  parameter dev: can be either a physical or a logical
                  device name (for example, DB3: or MYDEV).
 
 DEV[ICES] /LOG   Displays a list of all logged-in terminals.
 
 The DEVICES display includes the symbolic names of all devices, the names of
 all devices of a particular type, the name of a specific device, or all
 logged-in terminals.

help hello
 
 To log in on this system, you must have an account on the system. If 
 you do not have an account, ask your system manager to create one for 
 you.  In addition to your last name or account number, you will also 
 need to know the appropriate password.  Log in to the system by 
 typing HELLO (or LOGIN).
 
 Formats:
 
  HELLO                         System prompts for your name or
                                account and password.
 
  HELLO name[/password]         If you do not specify your 
                                password, the system prompts you 
                                for it.
 
  HELLO [grp,mem]/password      Displays system messages after 
                                login.
 
  HELLO [grp/mem]/password      Displays short form of system 
                                messages after login.
 
 The arguments g and m are the group and member numbers of your account 
 UIC.  The square brackets are optional.


 PAR[TITIONS]
 
 The PARTITION DEFINITIONS command displays on the entering terminal a 
 description of each memory partition in the system.
 
 For each partition in the system, the name, octal address of the 
 Partition Control Block, octal starting address, octal size, partition
 type, and description of partition occupant are displayed.


 
 LOA[D] dd:[/keyword(s)]         
            /CTB=cca[,b...]
            /EXP=expname
            /FLAGS
            /HIGH
            /PAR=parname
            /SIZE=parsize
            /VEC        
 
 The LOAD command reads a nonresident (loadable) device driver into memory.
 
 The parameter dd: represents a two-character ASCII loadable device driver name.
 For help on the LOAD command keywords, type HELP LOAD keyword.

help run
 
 The RUN command initiates the execution of a task. 
 
 The RUN command has five general forms, depending on the
 scheduling parameters and whether or not the task is installed.  The 
 five forms are as follows:
 
        1.  RUN immediately (HELP RUN NOW)
        2.  RUN at a time increment from now (HELP RUN LATER)
        3.  RUN at a time increment from clock unit synchronization
                (HELP RUN CLOCK)
        4.  RUN at an absolute time of day (HELP RUN ABSOLUTE)
        5.  Install, run immediately, and remove on exit (HELP RUN INSTALL)


 
 TAL [taskname]
 
 The  TAL command displays the names and status of all tasks or
 of a specific task installed in the system.
 
 If taskname is not specified, information is displayed for all tasks
 installed in the system. The display format is the same as that of the 
 ATL command.
 
 For more information, type HELP ATL.


 
 UNF[IX] taskname[/keyword]
                  /REG
                  /RON
        
 The UNFIX command frees a fixed task from memory, thus allowing tasks
 that are waiting for the partition in which the fixed task resides to compete
 for the partition. (If a fixed task exits or aborts, it still occupies the
 physical memory in the partition.)
 
 Keywords:
 
 /REG           Unfixes a common region.
 /RON           Unfixes the common, read-only segment of a multiuser task.
 
 The UNFIX command is the complement of the FIX command.


 
  ACD [function]
 
  The ANCILLARY CONTROL DRIVER (ACD) command loads and unloads character
  translation routines so that the terminal driver can translate between
  different character sets.  Character translation in the terminal driver
  allows terminals that conform to other standards to use the DIGITAL
  Multinational Character Set.
 
  Functions:
  
    INSTALL filename AS NUMBER ident [ASSIGN LOGICAL]   (Privileged function)
    REMOVE NUMBER ident                                 (Privileged function)
    LINK term TO NUMBER ident                        (Nonprivileged function)
    UNLINK term                                      (Nonprivileged function)

  For more information on these functions, type:
 
    HELP ACD INSTALL
    HELP ACD REMOVE
    HELP ACD LINK
    HELP ACD UNLINK



 The ASSIGN (ASN) command defines, deletes, or displays logical
 assignments on systems that select extended logical name
 support during system generation.  Logical device assignments
 associate logical names with physical devices, pseudo devices,
 or other logical devices.
 
 Formats:
        ASN ppnn:=ll[nn]:[/keyword(s)]  ! Creates assignments
        ASN [/keyword]                  ! Displays assignments
        ASN =[ll[nn]:][/keyword]        ! Deletes assignments
 
 Keywords:
        /ALL            /GR
        /TERM           /GBL or /SYSTEM
        /LOGIN          /FINAL
 
 The keywords are privileged options.  For more information on the keywords,
 type HELP ASN keyword. 
 
 For help on the ASN command formats, type: HELP ASN CREATE
                                            HELP ASN DISPLAY
                                            HELP ASN DELETE



 The BROADCAST command displays a specified message at one or more
 terminals.
 
 The general formats of the BROADCAST command are:
 
        BRO ttnn:message        ! Sends a message to one terminal
        BRO ALL:message         ! Sends a message to all terminals
        BRO LOG:message         ! Sends a message to logged-in terminals
        BRO user-name message   ! Sends a message to the user name of 
                                  the person to receive it. (Systems with
                                  Resource Accounting only)
        BRO @filespec           ! Sends a message contained in an indirect
                                  command file     
 
 ALL and LOG are privileged options.
 
 If an indirect command file is used, each line has one of the following
 formats:
 
        ttnn:message
        ALL:message
        LOG:message
        user-name message


 
 CLQ[UEUE]
 
 The CLOCK QUEUE command displays on the entering terminal information
 about tasks currently in the clock queue. The information consists of
 the task names, the next time each task is to be run, and each task's
 reschedule interval (if one was specified). 
 
 Any pending time-based schedule requests are displayed.

help dfl
 
 The DEFINE LOGICALS (DFL) command assigns, deletes, and displays
 logical name assignments.  Logical names can be assigned to devices,
 all or part of a file specification, and to other logical names.
 
 Formats:
   DFL =                       ! Deletes all local logical assignments 
   DFL ens=lns[/keyword(s)]    ! Creates logical name assignments
   DFL =[lns][/keyword]        ! Deletes logical name assignments
   DFL [/keyword(s)]           ! Displays logical name assignments
 
 Keywords (privileged options):
        /ALL            /GR
        /TERM           /GBL or /SYSTEM
        /LOGIN          /FINAL
 
 For more information on the keywords, type: HELP DFL keyword
 For help on the DFL command formats, type: HELP DFL CREATE
                                            HELP DFL DISPLAY
                                            HELP DFL DELETE

help login
 
 To log in on this system, you must have an account on the system. If 
 you do not have an account, ask your system manager to create one for 
 you.  In addition to your last name or account number, you will also 
 need to know the appropriate password.  Log in to the system by 
 typing LOGIN (or HELLO).
 
 Formats:
 
  LOGIN                        System prompts for name and password.
 
  LOGIN name[/password]        If you do not specify your password, 
                               the system prompts you for it.
 
  LOGIN [g,m]/password         Displays system messages after login. 
 
 
  LOGIN [g/m]/password         Displays short form of system messages 
                               after login.
 
 The arguments g and m are the group and member numbers of your account 
 UIC.  The square brackets are optional.



 REA[SSIGN] taskname lun ddnn:
 
 The REASSIGN command reassigns a task's logical unit numbers (LUNs)
 from one physical device unit to another.  

 Parameters:
 
 taskname    The name of the installed task whose static assignment is
             to be modified.
 
 lun         The logical unit number to be reassigned.
 
 ddnn:       The new device unit, which can be a physical, logical, or
             pseudo device name.


 
 SAV[E] [/keyword(s)]
         /WB
         /MOU="string"
         /SFILE="filespec"
         /CSR=x
 
 The SAVE command copies the current RSX-11M-PLUS system image (the contents
 of main memory) into the system image file from which the current image was
 booted. The command saves the image so that a hardware bootstrap or the BOOT
 command can later be used to reload and restart it.
 
 For help on the SAVE command keywords, type HELP SAVE keyword.


 
 TAS[KLIST] [taskname][/DEV=ddnn:]
 
 The TASKLIST  command displays a description of each installed task.
 
 taskname    The name of a specific task.
 
 /DEV=ddnn:  Displays the names and status of all tasks installed from 
             the specified device.
 
             If you specify both taskname and /DEV, the systems displays
             information about the task installed from that device.
 
 For information on the display contents, type HELP TAS CONTENTS.


 
 UNL[OAD] dd: [/keyword]
               /EXP=expname
               /VEC
 
 The UNLOAD command removes a loadable device driver or extended Executive
 partition (EXP) from memory. Note that loadable databases are not unloaded
 when a driver with a loadable database is unloaded.
 
 The parameter dd: represents the 2-character ASCII name of the device whose
 driver is to be unloaded.
 
 For information on the UNLOAD keywords, type HELP UNLOAD keyword.

help acs
 
 ACS ddnn:/BLKS=n
 
 The ALLOCATE CHECKPOINT SPACE (ACS) command allocates or discontinues
 a checkpoint file on disk for systems that support dynamic
 allocation of checkpoint space.  ACS is a privileged command.
 
 The variable n is the number of blocks to be allocated on device ddnn:.
 If n is zero, the use of the file is discontinued after all of the tasks
 checkpointed to it can be brought into memory and checkpointed elsewhere.



 ATL [taskname]
 
 The ACTIVE TASK LIST command displays on the entering terminal the
 names and status of all active tasks in the system, or the status of
 a particular task.
 
 If taskname is not specified, information is displayed for all active
 tasks in the system.  If taskname is specified, only information for
 that (active) task is displayed.
 
 For information on task status codes, type HELP ATL STATUS.


 
 BYE [/NOHOLD]
 
 The BYE command logs you out of the system and disconnects the line (if you are
 logged in via a remote or DECnet line).
 
 BYE /HOLD
 
 The BYE /HOLD command also logs you out of the system; however, if you are
 logged in via a remote or DECnet line, the system holds the line so that you
 can log into another account.
 
 When BYE logs you out of the system, devices allocated to you are deallocated
 and your privately mounted devices are dismounted.  All nonprivileged tasks and
 certain privileged tasks active on your terminal are aborted.
 
 If [1,2]SYSLOGOUT.CMD exists and a silent logout has not been requested,
 BYE executes the command file.

help dcl

 DCL command-line
 
 The DCL command allows you to  issue  DCL  commands from a  terminal 
 that is set to MCR.  Instead of MCR processing the command line, DCL
 processes it.
 
 Note that the command-line must follow DCL syntax rules.
 
 For more help on DCL, type HELP/DCL.


 
 DMO ddnn:[["]volume-label["]][/keyword(s)]
                               /DEV
                               /TERM=term:
                               /LOCK=option
 
 DMO /USER [/keyword(s)]
            /DEV
            /TERM=term:
            /LOCK=option
 
 The DISMOUNT command requests the file system to mark a volume for dismount and
 release its control blocks.  The DISMOUNT /USER command dismounts all volumes
 that you have mounted. 
 
 If you specify a volume-label, it is checked against the label on the volume
 to ensure that the proper volume is being dismounted.  Privileged users can
 dismount any volume.
 
 For more information on the DISMOUNT keywords, type HELP DISMOUNT keyword.


 
 LUN[S] taskname
 
 The LUN command displays the static logical unit number assignments for a
 specified task. The display consists of a list of physical device units in one
 column and their corresponding LUNs in an adjoining column.
 
 Taskname is the name of the task for which the assignments are to be displayed.
 
 If a task is initiated by the install-run-remove option of the RUN
 command, the task has no static LUN assignments. Also, when a task is running,
 the display does not necessarily reflect the running task's assignments. (For
 example, the Executive directive ALUN$ issued from within the task can alter
 the LUN assignments.)

help red
 
 RED[IRECT] nddnn:=oddnn:
 
 The REDIRECT command redirects all I/O requests previously directed to
 one physical device unit to another physical device unit.
 
 Parameters:
 
 nddnn:   The new device unit to which subsequent requests will go.
 
 oddnn:   The old device unit from which requests have been redirected.
 
 You can specify the logical names assigned to the devices or the physical
 device names and unit numbers (in the form ddnn:).

help set
 
 SET /keyword=values
 
 The SET command dynamically changes characteristics of and displays 
 information about the system, tasks, and devices.
 
 Only one keyword per command line is permitted. The valid keywords for the
 SET command are grouped according to the functions they perform, as follows:
 
 1. Setting Device Characteristics (Type HELP SET DEVICE)
 2. Establishing Directories (Type HELP SET DIRECTORY)
 3. Controlling I/O Operations (Type HELP SET MAXPKT)
 4. Modifying Memory Allocation (Type HELP SET MEMORY)
 5. Networking (Type HELP SET HOST)
 6. Using System Tasks and Utilities (Type HELP SET UTILITY)
 7. Ensuring System Protection (Type HELP SET PROTECT)
 8. Tuning the System (Type HELP SET SYSTEM)
 
 For help on individual keywords, type HELP SET keyword.


 
 TIM[E] [hrs:mins[:secs]] [m1/day/year]
        
 TIM[E] [hrs:mins[:secs]] [day-m2-year]
 
 The TIME command sets the current time of day, the current date, or both.
 If you do not specify a time or date, the system displays the current time and
 date on the entering terminal.
 
 For a description of the parameters for the TIME command, type:
 
        HELP TIME PARAMETERS


 
 UNS[TOP] [taskname][/TERM=TTnn:]
 
 The UNSTOP command continues execution of a task that has been stopped
 internally by the Executive.
 
 Parameters:
 
 taskname       The name of the task.  If taskname is not specified,
                the command unstops the task being run from the issuing
                terminal (task TTnn).
 
 /TERM=TTnn:    (Privileged keyword.)  Unstops the task requested from the
                specified terminal.

help active
  
 ACT[IVE] [/keyword]
           /ALL           
           /TERM=TTnn:
 
 The ACTIVE command displays at the entering terminal the names of
 all active tasks that have that terminal as their TI:. The display includes
 the octal number of the terminal that initiated each task.
  
 If you do not specify a keyword, the names of all active tasks for TI: 
 are displayed.
 
 For more information, type HELP ACT keyword.



 BLK  [taskname][/TERM=term:]
 
 The BLOCK command blocks an installed task, making it ineligible to
 execute or to compete for memory.
 
 taskname       The name of the task to be blocked. If taskname is not
                specified, the task started by a RUN command from the
                issuing terminal (task TTnn) is blocked.
 
 /TERM=term:    (Privileged keyword.) Blocks a task requested from the
                specified terminal. Term can be a logical name assigned
                to the terminal, or it can be a physical device and unit
                number for the terminal (in the form TTnn:).


 
 CAN[CEL] taskname
 
 The CANCEL command cancels time-based initiation requests for a task.
 These requests result from the Executive directive Run Task (RUN$) or any of
 the time-synchronized variations of the MCR command RUN that are placed in the
 clock queue.
 
 If any time-based schedule requests for the task exist, they are
 removed.  However, if the task is currently active, its execution is not
 affected.
 
 Only a privileged user can enter a CANCEL command for a task not initiated from
 the issuing terminal.


 
 DEA[LLOCATE] [ddnn:]
 
 The DEALLOCATE command releases a private (allocated) device, thereby allowing
 other users to access it. 
 
 The parameter ddnn: can be a logical name assigned to the device (such as
 MYDEV) or the physical device name and unit number.
 
 Privileged users may deallocate devices assigned to other than the issuing
 terminal.  If no device is specified, all devices allocated to the issuing
 terminal are deallocated.


 FIX taskname[/keyword]
              /REG=regionname           
              /RON=taskname
 
 The FIX command loads and locks a task into a partition in memory.
 
 The specified region or task must be installed, inactive, and not
 checkpointable. Fixed tasks remain physically in memory even after they exit.
 They do not have to be loaded when a request is made to run them.
 
 Keywords: 
 
 /REG=regionname                Fixes a common task region in memory.
 /RON=taskname                  Fixes a common, read-only segment of a 
                                multiuser task in memory.


 
 INI[TVOLUME] ddnn:["]volume-label["][/keyword(s)]
 
 Keywords:     /ACCESS         /BAD            /DENS           /EXT
               /FPRO           /INDX           /INF            /LRU
                /MXF           /OWNER          /POS            /PRO
                /SDI           /UIC            /VI             /WIN
 
 The INITIALIZE VOLUME command produces a Files-11 formatted volume.
 
 ddnn:          Specifies the device name and unit number of the volume to be
                initialized.
 
 volume-label   Specifies a name for the volume being initialized. This is a
                required parameter. Specify up to 12 characters for disks and
                DECtape and up to 6 characters for magnetic tapes.
                
 For a summary of the INI command keywords, type HELP INI SUMMARY.
 For a summary of default values, type HELP INI DEFAULTS.
 For additional help on individual keywords, type HELP INI keyword.

help mount
 
 The MOUNT command logically connects devices to Ancillary Control
 Processors (ACPs).  There are two forms of the MOUNT command,
 depending on the device being mounted.
 
 Files-11 Disk or  DECtape Format:
 
        MOU[NT] dev:[volume-label][/keyword(s)]  
 
 Files-11 (ANSI) Magnetic Tape Format:
 
        MOU[NT] device-list:[file-set-ID] [/keyword(s)]
 
 
 For more information on these formats, type:
 
        HELP MOUNT FILES11              ! For help on Files-11 format.
        HELP MOUNT MAGTAPE              ! For help on Magnetic Tape form at.
        HELP MOUNT EXAMPLE              ! For examples of command usage.



 REM[OVE] taskname              Deletes an entry (a task name) from the System
                                Task Directory (STD) and thereby removes the
                                task from the system.  
 
 REM[OVE] region-name/REG       Removes a region from the Common Block
                                Directory (CBD). 
 
 If a task is fixed in memory, the REMOVE command unfixes the task and
 then removes it. To remove a task that is currently executing, you must first
 abort the task.
 
 Note that a region cannot be removed if there are tasks installed in the
 system that reference that region.

 SSM message
 
 The SSM command inserts text into the Error Logging file (LB:[1,6]LOG.ERR).
 The text appears in the error log reports produced by the error log report
 generator. 
 
 The message is a text string up to a maximum of 79 characters.


 
 UFD ddnn:[volume-label][g,m][/keyword(s)]
                              /ALLOC=number
                              /DEL
                              /OWNER=[uic]
                              /PRO=[system,owner,group,world]
 
 The USER FILE DIRECTORY command creates a User File Directory on 
 a Files-11 volume and enters its name into the Master File Directory (MFD).
 Before creating a UFD, you must first initialize and mount the volume.
 
 ddnn:           Device unit containing the volume on which the UFD being
                 created will reside.  
 
 volume-label    If specified, the volume-label is compared to the label on the
                 volume.  If the names match, a UFD can be created.  
 
 [g,m]           The UIC for the UFD, which establishes the owner of the
                 UFD.  The variables g and m represent group and member
                 numbers, respectively, and can be in the range 1 to 377
(8).
                 The square brackets are required.  
 
 For information on the keywords, type HELP UFD keyword.

help boot

 BOO [filespec]
 
 (Privileged command.) The BOOT command bootstraps a system that exists as a
 task image file on a Files-11 volume. It provides a convenient means of
 terminating one system and initiating another, especially on minimum hardware
 configurations. 
 
 Note that the BOOT command immediately terminates the system currently in
 operation and destroys any work in progress on the system. Therefore, you
 should not enter this command unless you are certain that you want to stop
 using your current system.  
 
 The file specification (filespec) indicates where the bootstrappable system
 image resides.  If you do not include a file specification, the BOOT command
 bootstraps the current system.  For more information on the file specification
 format and default values, type:  HELP BOOT FILE

 CBD [common-region-name [/TASKS]]
 
 The COMMON BLOCK DIRECTORY command displays information about all
 entries or a specific entry in the Common Block Directory.  The
 directory is a table of all named common regions and libraries installed
 in the system.
 
 Parameters:
 
 common-region-name    The name of a specific common region in the Common
                       Block Directory.
 
 /TASKS                Displays the name of each task attached to a
                       specific common region and the number of times the
                       task has mapped to the region (mapping count).

 DEB[UG] [taskname]
 
 The DEBUG command forces a task to trap to a debugging aid by setting
 the T-bit in the task's Processor Status Word (PSW).  To debug a task,
 it must have been built with the /DA switch or have issued the Executive
 directive Specify SST Vector Table for Debugging Aid (SVDB$).
 
 Nonprivileged users can debug any nonprivileged task that was initiated
 from their own terminals (TI:).  Privileged users can debug any task.
 
 Parameter:
   
 taskname       Specifies the name of the task to be debugged.  If you do not
                specify a task name, DEBUG searches for the task currently
                running from the issuing terminal (task TTnn).


 FLA [[ggg]/keyword]
           /CRE
           /ELIM
 
 The  FLA  command creates,  eliminates,  or displays group global 
 event flags.
 
 If the  group number is omitted, the system defaults to the login 
 UIC  group number of the issuing terminal.  If you omit the group 
 number and  keyword  specification,  all the  group  global event 
 flags are displayed.
 
 For more information, type HELP FLA keyword.

help ins
 
 The INSTALL command makes a specified task known to the system.
 
 INS[TALL] [$]filespec[/keyword(s)] 
        
   filespec             ddnn:[g,m]filename.type;version
 
   $                    Indicates the system or library UIC
 
 The INSTALL command supports the following keywords:
 
 /AFF           /IOP            /ROPAR          /UIC
 /CKP           /PAR            /SEC            /WB
 /CLI           /PMD            /SLV            /XHR
 /DFB           /PRI            /SYNC
 /FMAP          /PRO            /TASK
 /INC           /RON            /TIME
 
 For a description of individual keywords, type HELP INSTALL keyword.


 OPE[N] memory-address [+ n] [/keyword]
 OPE[N] memory-address [- n] [/keyword]
 
 Keywords:      /AFF=[CPx,UBy]          /CPU=CPx             
                /DRV=dd:                /KNL
                /KNLD                   /KNLI
                /REG=region-name        /TASK=taskname       
                /TASKD                  /TASKI
 
 + or - n       One or more optional octal numbers to be added to or 
                subtracted from the memory address.
 
 The OPENREGISTER command allows you to examine and modify a word of memory.
 To open a location within a task, the task must be fixed in memory.  
 
 This is a privileged command.
 
 For information on the keywords, type HELP OPEN keyword.
 For help on the OPEN command display format, type HELP OPEN DISPLAY.


 RES[UME] taskname[/TERM=TTnn:]
 
 The RESUME command continues execution of a previously suspended task.
 
 Parameters:
 
 taskname       The name of the task that is to resume executing. If you omit
                the task name, the command attempts to resume task TTnn (where
                nn is the octal unit number of the issuing terminal).
 
 /TERM=term:    (Privileged keyword.)  Resumes a task initiated from the
                specified terminal. Term can be a logical name assigned to the
                terminal, or it can be the physical device and unit number for
                the terminal (in the form ttnn:).

help swr
 
 SWR             Displays the current value in the switch register. 
 
 SWR value       Deposits an octal number in the switch register. 
 
 SWR bitposition/keyword        
                /SET            Sets the bit in the specified bit position.
                /CLEAR          Clears the bit in the specified bit position.
                /DISPLAY        Displays the bit in the specified bit position.
 
 Diagnostic functions use the values in the switch register to interrupt
 diagnostic processing and to select specific diagnostics to execute.
 For processors that do not have a console switch register, the Executive
 directive Get Sense Switches (GSSW$) accesses the software switch register
 (SWR$) in the Executive module SYSCM. To allow a task to access or modify $SWR,
 use the SWR command.


 
 UNB[LOCK] [taskname][/TERM=term:]
 
 The UNBLOCK command continues the execution of a blocked task.
 UNBLOCK is the complement of the BLOCK command.
 
 A nonprivileged user can unblock only those tasks whose TI: is the same
 as the issuing terminal.  A privileged user can unblock any blocked task.
 
 Parameters:
 
 taskname       The name of the task to be unblocked.  If taskname is not
                specified, the command unblocks the task that was running
                from the issuing terminal (task TTnn).
 
 /TERM=term:    (Privileged keyword.)  Unblocks a task requested from the
                specified terminal. Term can be a logical name assigned to
                the terminal, or it can be the physical device and unit number
                for the terminal (in the form ttnn:).


 The OPR (or DCSOPR) task gives the System Manager or Operator an interface
 to the Data Communications Subsystem (DCS).  Through English-like commands,
 the user has the ability to display or modify line parameters, display any
 or all queues, or delete a specific queue entry.  Multiple copies of the
 task may be active at the same time.
 
 If the command is not entered on the same line as the task mnemonic,
 then the prompt "OPR>" will be displayed, and OPR will wait for further
 commands.  OPR will continue to prompt for and accept commands, until the
 user terminates the session with a control-Z.
 
 OPERATOR COMMANDS
 Following is a summary of commands available to the operator.  For detailed
 explanations of each command and/or its options, type
 HELP OPR <command>.  Most commands and keywords may be abbreviated to 3
 characters, both in this help facility and when issued to OPR.
 
 DISPLAY        Display information and parameters on all or selected lines
                or queues, or current supervisor parameters.
 
 MODIFY         Change line states and parameters, or supervisor parameters.
 
 CREATE         Create a queue.
 
 DELETE         Delete a queue or a queue entry.
 
 RESET          Reset all or selected scheduled polls.
 
 QUIET          Enable/Disable informative messages from OPR; does not affect
                error messages.  Options are QUIET ON or QUIET OFF.


 QUETST is a Tekno-developed debugging aid for use with VS: queue entries;
 it is intended for users with an intimate knowledge of the queue entry
 format(s) for your intended application.  With that warning in mind, it
 is a useful tool that allows the user to insert queue entries, examine
 queue entries in several formats, selectively delete queue entries, and
 purge individual queues.  You must know the name of the queue(s) you wish
 to manipulate before issuing any requests, however.
 
 Commands available under QUETST may be abbreviated to the first character;
 QUETST only examines the first character, but accepts any number following.
 
 Commands accepted by the current version of QUETST are:
 
 E     -     Examine a queue entry.  You will be prompted for the queue
             name and entry number; QUETST will then report information
             about the entry, and query you for the output format:
 
             A     -     ASCII interpretation of all bytes in the entry.
                         Bytes not within the printing ASCII sequence are
                         replaced by spaces.
 
             B     -     Octal byte representation, unsigned.
 
             D     -     Decimal word representation, unsigned.
 
             O     -     Octal word representation, unsigned.
 
             R     -     Radix-50 representation.
 
 L     -     List current queue entry.  This allows the re-display of an
             entry in another format; format selection is as for Examine.
 
 P     -     Purge all entries from the queue; QUETST will prompt for a queue
             name.
 
 R     -     Remove a selected queue entry.  QUETST will prompt for a queue
             name and entry number, and will display the deleted queue entry.
             This command is the only exception to the single-character command
             situation:  if it is issued as RF (Remove Force), the entry is
             simply deleted with no display.
                
 I     -     Insert a queue entry.  QUETST will prompt for the priority and
             entry size in bytes; these values are accepted in octal unless
             forced to decimal by a terminating period.  Thereafter, for as
             many bytes as specified, QUETST will accept input data.  Data
             must be entered in groups of two bytes; thus, for an odd-sized
             message, you will have to enter a pad byte.
 
 For information on data input formats and procedures, type HELP QUETST DATA.


 
 ALL[OCATE] dd[nn:] [=llnn:] [/keyword]
                              /TERM=term:
                              /TYPE=dev
 
 The ALLOCATE command establishes a specified device as your private device.
 
 Parameters:
 
         dd             The 2-letter device mnemonic.
 
         nn:            The unit number of the device (optional). If you omit
                        nn:, the system allocates the first available logical
                        unit of the dd-type device.
 
         llnn:          The name of a logical device, which the system
                        creates and assigns to the physical device being
                        allocated (optional). 
 
 For information on the ALLOCATE keywords, type HELP ALLOCATE keyword.

=============================================================================

                  /              File 4 / NIA068             /
                  /                                          /
                  /                  ______                  /
                  /                  DBEDIT                  /
                  /                                          /
                  /                ____ ______               /
                  /                User Manual               /
                  /                                          /
                  /                                          /
                  /                Submitted By:             /
                  /        Malefactor Of Organized Crime     /
 

 

 

                  Copyright 1984,1988, Robelle Consulting Ltd.

 

                             _______ __________ ____
                             Robelle Consulting Ltd.
                               8648 Armstrong Road
                                     R.R.#6
                                  Langley, B.C.
                                Canada   V3A 4P9
                             Phone:  (604) 888-3666
                                Telex:  04-352848

 

 
                                                               ___
           Permission is granted to reprint this document (but not for
                profit), provided that copyright notice is given.

 
                                           ___
                                   Version 1.3
                                 February, 1988


 

 
                                ________ _______
                                Database Editing

 

        Welcome  to  version  1.3  of  DBEDIT,  a module of SUPRTOOL that
        permits people to add, change, list, or delete individual records
        or  "chains"  of  records from an IMAGE/3000 database.  DBEDIT is
        useful  for  debugging  applications,  for  quickly   prototyping
        systems, and for the data entry of simple applications.

        The  functions  of  DBEDIT are similar to QUERY, but the commands
        and operations are more consistent and logical.   Because  DBEDIT
        is  a  part  of  SUPRTOOL,  you  can hold SUPRTOOL as a suspended
        process  from  within  other  software  (e.g.,  QEDIT)  with  the
        database  open.  This facilitates fast process switching when you
        need to examine a test database.

        You enter DBEDIT via the  EDIT  command  of  SUPRTOOL.   Once  in
        DBEDIT,  you  cannot use the SUPRTOOL commands (while in SUPRTOOL
        you cannot use the DBEDIT commands).  Certain  commands  are  the
        same  in  both  DBEDIT and SUPRTOOL (e.g., USE, BEFORE, and SET).
        The BEFORE command works independently and each  software  module
                  ___
        saves its own last command.

 
        ____________
        Restrictions

        1. Most  DBEDIT  commands require you to have opened the database
           using the BASE command of SUPRTOOL.  DBEDIT does  not  have  a
           BASE command.

        2. DBEDIT  does  not  work  with  any files other than IMAGE/3000
           datasets.

        3. You  cannot  switch  to  another  database  while  in  DBEDIT.
           Instead,  you  must  EXIT, do a BASE command in SUPRTOOL, then
           EDIT.

        4. The maximum size of any  individual  data  item  is  80  bytes
           (i.e., 5X80 is acceptable, but X100 is not).

        5. Only  datasets  whose search fields are compatible with DBEDIT
           can be accessed (i.e., no K5 search fields).

 
        _________ __ ______
        Functions of DBEDIT

        There are five major functions in DBEDIT:

        _________ __ ______
        Functions of DBEDIT                            DBEDIT User Manual

        ADD:       Add new entries to a dataset.
        CHANGE:    Change a master search value in all related datasets.
        DELETE:    Delete entries from a dataset.
        LIST:      List the value of entries in a dataset.
        MODIFY:    Modify specific fields of an entry from a dataset.

 
        ___________ __ ______
        Performance of DBEDIT

        SUPRTOOL was designed to be as fast as possible, while DBEDIT was
        designed  to  have  as many features as possible.  DBEDIT does no
        special optimizations.  It uses the standard IMAGE intrinsics  to
        do  all of the accesses to the database.  DBEDIT does not use the
        fast sequential access method of  SUPRTOOL,  but  DBEDIT  usually
        works only with a few records within your database at one time.

 
        ___________
        Field-Lists

        DBEDIT  arranges the list of fields in a dataset differently than
        QUERY or SUPRTOOL.  The QUERY ADD command prompts  for  the  each
        field in the dataset in the order they were declared in the IMAGE
        schema.  In DBEDIT, the order of field-lists is changed using the
        following algorithm:

        1. The   search-field   for  a  master  dataset  or  the  primary
           search-field for a detail dataset appear first.

        2. Any other detail search fields appear second.

        3. Any sort-fields appear third.

        4. All other non-search and non-sort fields that  are  compatible
           with DBEDIT appear last.

        Example:

        The  following  example  shows  the  difference between QUERY and
        DBEDIT.  We add an entry to the D-INVENTORY dataset of the  STORE
        database.   In  this dataset, SUPPLIER-NAME is the primary search
        field and PRODUCT-NO is another non-primary search field.

                QUERY/3000                   DBEDIT/SUPRTOOL

         ___                            ___
        >add d-inventory               #add d-inventory

                           ____                         ___________
        BIN-NO          =>>1201          SUPPLIER-NAME >STD Ribbons
                                                        _________
        LAST-SHIP-DATE  =>>                 PRODUCT-NO >2001001
                                                        ______
        OH-HAND-QTY     =>>                     BIN-NO >1201
                           _______                      __________
        PRODUCT-NO      =>>2001001      LAST-SHIP-DATE >
                           ___________                  ___________
        SUPPLIER-NAME   =>>STD Ribbons     ON-HAND-QTY >
                                                        ________
        UNIT-COST       =>>                  UNIT-COST >

                                                                  _______
        DBEDIT User Manual                                        Locking

        _______ __ _________
        Locking of Databases

        DBEDIT uses the following  locking  strategy.   The  ADD  command
        locks  one  dataset (using DBLOCK, Mode-3) after all of the field
        values have been entered.  The MODIFY and DELETE commands do  the
        following:

        1. After  all  of the field values have been entered, the dataset
           is locked.

        2. The records are re-read using DBGET,  Mode-4  for  details  or
           DBGET, Mode-7 for masters.

        3. The  re-read  record is compared with the original record.  If
           they are not the same, no update or delete is done.

        4. The record is updated or deleted.  When a search  field  or  a
           sort  field  is changed with the MODIFY command, the record is
           deleted and added again.

        5. The dataset is unlocked.

                                     ______
        The CHANGE command locks the entire database while all key values
        are   being   changed.    In   all  cases,  the  DBLOCK  is  done
        unconditionally.  This means that DBEDIT always waits  for  other
        locks to be released (possibly holding up your terminal).

 

 
                                 ______ ________
                                 DBEDIT Commands

 

        When you run DBEDIT, it prompts for commands on  STDLIST  with  a
        "#"  character  and  reads  command  lines  from  STDIN.   DBEDIT
        commands have a command name followed by one or  more  parameters
        separated  by semicolons, colons, and commas.  Semicolons are NOT
        used to combine several commands on the same line as in SUPRTOOL.

        You  may  shorten  command  names  to any substring that uniquely
        defines the command.  For example, ADD can be shortened as AD  or
        A,  since there are no other commands that start with "A".  SHOW,
        however, can be abbreviated only to SH, since there is also a SET
        command in DBEDIT.

             >base store.pub,5
             >edit
              _
             #l m-customer;all    {list}
              _
             #e                   {exit}

        You may enter letters in either upper-case or lower-case, because
        DBEDIT upshifts  everything  in  the  command  line.   These  two
        commands are identical:

        ________
        Commands                                       DBEDIT User Manual

              ____
             #LIST M-CUSTOMER
              ____
             #list m-customer

                      ________
        The  maximum  physical  command  line is 256 characters.  You may
        enter  commands  on  multiple  input  lines  by  putting  an  "&"
                                                                    _____
        continuation character at the end of the line.  The maximum total
        command length is 256 characters.  Multiple  commands  cannot  be
        placed  on  one  input line.  The separating semicolon, colon, or
        comma in commands is REQUIRED, not optional.

             :run suprtool.pub.robelle
             >base store.pub,5          {open the database in SUPRTOOL}
             >edit                      {enter DBEDIT}
             #list m-customer           {use all of the defaults}
             #list m-customer;all       {list all records in m-customer}
             #exit                      {return to SUPRTOOL}

        If you depress Control-Y during an operation, DBEDIT responds  by
        printing a blank line and stopping the current operation.

        DBEDIT  interprets any command line beginning with a colon (:) as
        an MPE command.  Only the commands that MPE allows in "break" are
        allowed  in  DBEDIT.  This feature can be used to establish :FILE
        commands for the SUPRLIST file, to show the time, and to  include
        :COMMENT lines.  For example:

              ________
             #:comment Modify M-CUSTOMER records
             #modify m-customer
             #exit

        Any command line beginning with an equal sign (=) is treated as a
        calculator expression.  You may use this feature to compute  data
        entry values without the need of an electronic calculator.

             =2745*1.33
             Result= 3650.85

        The  examples  in  this  manual  use  the  revised STORE database
                         __________ ________
        described in the IMAGE/3000 Handbook.

 
        _________ ___ ______ ________
        Prompting For Search Criteria

        In the CHANGE, DELETE, LIST and  MODIFY  commands,  DBEDIT  first
                           ______ ________
        prompts  you  for  search criteria and then processes the records
        you have selected.  Search criteria are any or all of the  search
        and  sort  fields  of the file.  DBEDIT asks for the value of the
        primary search  field  first,  unless  you  override  the  prompt
        ordering  with the KEY option.  For detail datasets, it then asks
        for match values for the other search  fields  and  sort  fields.
        You  may  hit  the Return key to any of these prompts to indicate
        that you don't care what values these fields have.

        When DBEDIT  finishes  processing  the  records  you  select,  it
        recycles  and  prompts  you  for the next set of search criteria.

                                                          ______ ________
        DBEDIT User Manual                                Search Criteria

        You may hit the Return key at this point to exit from the command
        and return to the # prompt.

 
        _______ __________
        Command Parameters

        The  major commands (FILE, LIST, ADD, DELETE, MODIFY, and CHANGE)
        have a similar parameter structure,  consisting  of  the  command
                                ____                      ______
        name,  then an optional file part and an optional option part.  A
                             ____
        space separates the  file  part  from  the  command  name  and  a
                                   ______                 ____
        semicolon  separates  the  option  part  from the file part.  The
        general format of these commands is:

                       ____    _______
             #command [file] [;options]

 
        ____ _________
        File Parameter

        The  file  parameter  consists  of  an  IMAGE/3000  dataset  name
                                                             ____
        followed by an optional list of field names.  If the file part is
        missing, DBEDIT uses the previous file.  The  general  format  of
        the file parameter is:

                       ____    __________
             #command [file] [:field-name,...]

        Even  when you use field-names, DBEDIT will add the search fields
        to the field list.  In the ADD command,  DBEDIT  assumes  default
        values  for non-critical fields that are missing, but will prompt
        for the search fields and sort fields (they are required).

                              ______
             #add d-inventory:bin-no {assume defaults for all but BIN-NO}

                                ___________
                SUPPLIER-NAME  >STD Ribbons
                                _________
                   PRODUCT-NO  >105391
                                ____
                       BIN-NO  >10

        In  this  case  you  will  not  be  prompted  for LAST-SHIP-DATE,
        ON-HAND-QTY, or UNIT-COST.

        In the MODIFY command, you can specify a set of fields to modify.
        DBEDIT  will  not prompt you for new values for any other fields.
        For example:

                              _________
             #mod d-inventory:unit-cost    {only modify UNIT-COST}

                                ___________
                SUPPLIER-NAME  >STD Ribbons {prompt for search value}
                                _________
                   PRODUCT-NO  >105391      {prompt for another one}

             Enter new values (or <return> to leave as is):
                SUPPLIER-NAME  >STD Ribbons {prints the search value}
                   PRODUCT-NO  >105391      {prints the other one}
                    UNIT-COST  >500         {prints existing value}
                                ________    {prompts for new value}

        In this case you will not be prompted for BIN-NO, ON-HAND-QTY, or

        ____ _________
        File Parameter                                    DBEDIT Commands

        LAST-SHIP-DATE.

        When working on a single dataset, it is only necessary to specify
        the dataset name in the first command.  For example:

                   ___________
             #list d-inventory

                                ___________
                SUPPLIER-NAME  >STD Ribbons

             #list          {use the previous file parameter}

                                ________________
                SUPPLIER-NAME  >//

 
        ______ _________
        Option Parameter

            ____                      _______
        The file parameter  and  the  options  must  be  separated  by  a
        semicolon.

                       ____    __________    ______
             #command [file] [:field-list] [;option,...]

                      _______
        The available options are:

             _____________
             numeric-value|ALL|KEY|LIMIT|RELATED|UNDER|UPDATEKEY

        These  options  qualify  the operation of the FILE, LIST, MODIFY,
        CHANGE, DELETE, and ADD commands.  Some options only apply to one
        command.   Options can be combined.  When more than one option is
        specified, each option must be separated by a semicolon.

                               ____________________
             #list d-inventory;key=product-no;under

                                _________
                    PRODUCT-NO >

        _____________ ______
        Numeric-value Option

        Commands normally cycle, prompting for new search values  or  new
        entries,  until  you  hit  Return  or Control-Y.  However, if you
                  _____________
        specify a numeric-value after the  semicolon,  the  command  only
                      _____________
        prompts  you  numeric-value number of times.  For example, if you
        only want to do one LIST function, you would enter:

                              _
            #list d-inventory;1  {only prompt for SUPPLIER-NAME once}

 
        ___ ______
        ALL Option

        The ALL option works  only  with  the  LIST,  MODIFY,  or  DELETE
        commands.   When  ALL is specified, every record in the specified
        file is processed sequentially.  You can stop the scan by hitting
        Control-Y.

                                                               ___ ______
        DBEDIT Commands                                        KEY Option

        ___ ______
        KEY Option

        The  KEY  option  overrides  the  primary  search  field.  DBEDIT
        prompts for the primary search field first.  Often, this  is  not
        the  value  that  you  know.  You can use the KEY option to force
        DBEDIT to prompt you for another search field.  For example:

             #list d-inventory                {use defaults}

                                ___________
                 SUPPLIER-NAME >STD Ribbons
                                _________
                    PRODUCT-NO >

                               ______________
             #list d-inventory;key=product-no {use PRODUCT-NO}

                                _________
                    PRODUCT-NO >105391
                                _______________
                 SUPPLIER-NAME >

 
        _____ ______
        LIMIT Option

        The LIMIT option controls the number of entries allowed  per  key
        value.   This  option is only useful for the ADD command.  DBEDIT
        limits the number of entries for the first  field  in  the  field
        list to the LIMIT value specified.  For example,

                              _______
             #add d-inventory;limit=2  {two records per supplier}

                              ______________________
             #add d-inventory;limit=2;key=product-no
                                       {two records per product}

 
        _______ ______
        RELATED Option

        The  RELATED option is for finding related records and it applies
        only to LIST.  If you use RELATED when  LISTing  an  entry  in  a
        master dataset, DBEDIT prints the specified master entry and then
               ___                                                    ___
        prints all detail entries with  the  same  search  value  in  all
        datasets  that  are  linked  to the master dataset by an explicit
        path.  If you use RELATED with a detail  dataset,  DBEDIT  prints
        the  specified detail entry, followed by the master entry of each
        search field in the detail.

        DBEDIT can only use explicitly-defined IMAGE  paths  to  navigate
        between  datasets.   User-defined  paths  are  not  supported  in
        DBEDIT.  The following example  shows  how  related  records  are
        listed from a master dataset to a detail dataset:

                             _______        _______
            #list m-supplier;related   {all related records}

                                ___________
                 SUPPLIER-NAME >STD Ribbons

                    The M-SUPPLIER record is listed here.

                    D-INVENTORY records with a SUPPLIER-NAME of
                    ___ _______
                    STD Ribbons are listed here.

                                        -7-

        _____ ______
        UNDER Option                                      DBEDIT Commands

 

        _____ ______
        UNDER Option

        When  DBEDIT  prompts for a value for a field, it prints a series
        of underlines.   These  underlines  indicate  the  maximum  field
        width.

        While  these  underlines  are  useful,  they  may not work on all
        terminals or they may become irritating.  When this happens,  you
        may  disable  underlining  by  using  SET  UNDERLINE  OFF.   Once
        underlining is turned off, you may wish to enable it  again,  but
        only  for  one  command.   The  UNDER  option  overrides  the SET
        UNDERLINE, but only for the current command.

 
        _________ ______
        UPDATEKEY Option

        The UPDATEKEY option allows the  MODIFY  command  to  change  the
        value   of  search  and  sort  fields  (i.e.,  critical  fields).
        Normally, MODIFY does not allow any changes to the search or sort
        fields.   Without the UPDATEKEY option, MODIFY does a DBUPDATE of
        the modified record.  If you specify UPDATEKEY and you  change  a
        critical  field,  MODIFY  must DBDELETE the existing record, then
        DBPUT the record with the new values.

 
        ____________
        Sub-Commands

        You may enter a sub-command anytime DBEDIT prompts for the  value
        of a field.  The available sub-commands are:

        // stops the current command immediately.

        \\ same as // (you may also use the Control-Y key).

        ?  describes the current field.

        <  goes back one field to the previous field in the list.

        <3 goes back three fields.

        << returns to the first field in the list.

        >  goes forward one field to the next field in the list.

        >3 goes forward three fields.

        >> skips  the rest of the fields in the list.  This is especially
           useful when DBEDIT is prompting you for  multiple  search  and
           sort fields and you only want to enter the first.

                                                             ____________
        DBEDIT Commands                                      Sub-Commands

        '  uses blanks for the field (useful in batch).

        *  uses the last value for this field.

        [  forces  what  follows the [ to be a value and not a subcommand
           (e.g., [*BOB ignores the *).

        Examples:

             #list m-supplier       {we'll stop immediately}

                                ________________
                 SUPPLIER-NAME >//

             #list m-supplier       {we will start again}

                                ________________
                 SUPPLIER-NAME >Standard Type
                                _________
                    PRODUCT-NO ><             {re-enter SUPPLIER-NAME}

                                ___________
                 SUPPLIER-NAME >STD Ribbons
                                _________
                    PRODUCT-NO >>>               {skips the rest}

             #list m-supplier

                                ___________
                 SUPPLIER-NAME >STD Ribbons
                                _________
                    PRODUCT-NO >[>575            {">575" is the part-no}

        The following sections describe the DBEDIT  commands  in  detail.
        The  commands  are  presented  in alphabetic order.  Each command
        name is centered, and following it, in brackets, is  the  minimal
        abbreviation for the command.  For example:  [S] for SET and [SH]
        for SHOW.

 

 

 
                                ___ _______  ___
                                Add Command  [A]

        Adds new entries to a dataset.

                  ____   _______
             ADD [file][;options]

        ______
        Notes:

                                                        ____
        If  no  field-list  is  entered  as part of the file, DBEDIT will
                                            ____
        prompt for all of the fields in the file.  You may use  the  ">n"
        or  ">>" sub-commands to navigate quickly through the field list,
        but you must enter values for all search and sort fields.

        The database password must give you write access  to  the  entire
        dataset.   The  ADD  command  will  stop  after  LIMIT= number of
        entries have been added for any one  key  value.   DBEDIT  checks
        each  search  field  value as it is entered.  For master datasets
        the search field value must not exist.  For detail  datasets  the

        ___
        Add                                               DBEDIT Commands

        search  field value must exist.  To add records from a disc file,
        see the >PUT command of SUPRTOOL.

 

 

 
                               ______ _______  ___
                               Before Command  [B]

        Re-executes the previous command line.

             BEFORE

        ______
        Notes:

        In  batch  mode,  SUPRTOOL prints a warning, but takes no action.
        In session mode, SUPRTOOL presents the previous command  line  to
        the  user  for  editing.  If there are no changes, you simply hit
        return.  If you wish to change any characters  within  the  line,
        the modify operators are the same as those used in QEDIT:

              * Any printing characters replace the ones above.

              * Control-D plus spaces deletes columns above.

              * Control-B puts you into "insert before" mode.

              * Control-A appends characters that follow to
                the end of the line.

              * Control-A, Control-D, plus spaces, deletes
                columns from the end of the line.

              * Control-T terminates the current mode, so that
                you can space over to another column to work.

              * Control-G recovers the original line.

              * Control-O specifies "overwrite" mode (useful
                when you want to replace with spaces).

 
        ________
        Example:

            #=20*15              {15 is incorrect, you meant 115}
            Result= 300.0
             ______
            #before
            =20*15               {DBEDIT prints the line}
                115              {you enter changes}
            =20*115              {result is shown}
                                 {you hit return}
            Result= 2300.0

                                                                   ______
        DBEDIT Commands                                            Change

                               ______ _______  ___
                               Change Command  [C]

        Changes all uses of a specific search field value in  all  detail
        datasets  related  to  a  master.   This  command only applies to
        master datasets.

                     ____   _______
             CHANGE [file][;options]

        ______
        Notes:

        This command changes the search field value in all related detail
        datasets.  DBEDIT can only change values in detail datasets where
        there is an explicit IMAGE path.  It is up to the user to  change
        any user-defined paths.

        Once  this command has started making changes to the database, it
        cannot be stopped.  Entering Control-Y  during  the  change  will
        have  no  effect.   DBEDIT  locks  the  entire database while all
        changes are taking place.  The database password  must  give  you
        write access to all related datasets that must be changed.

 

 

 
                               ______ _______  ___
                               Delete Command  [D]

        Removes entries from a dataset.

                     ____   _______
             DELETE [file][;options]

        ______
        Notes:

        If you are deleting entries from a master  dataset,  all  entries
        from  related  detail datasets must be removed first.  Before any
        record will actually be deleted, DELETE  prints  the  record  and
        asks  you  whether it is okay to delete it; the default answer is
        NO.

                              ____
        The field-list of the file specifies which fields to list  before
                                                                   ______
        prompting  for  verification  of  the  deletion.   The ALL option
        allows you to review all entries in a detail dataset  and  remove
        some  or  all of them.  The database password must give you write
        access to the entire  dataset.   ALL  does  not  work  on  master
        datasets; use the SUPRTOOL >DELETE command instead.

        ____
        Exit                                              DBEDIT Commands

                                ____ _______  ___
                                Exit Command  [E]

        Leaves DBEDIT and returns control to SUPRTOOL.

             EXIT

 

 

 
                                ____ _______  ___
                                File Command  [F]

        Establishes the current file, field list, and search field.

                   ____   _______
             FILE [file][;options]

        ______
        Notes:

        If  SET RESET is OFF, you can use the FILE command to specify the
                               ____
        KEY= for the specified file.   For example:

             #set reset off
                               ______________
             #file d-inventory;key=product-no

        will cause all subsequent commands to prompt for  the  PRODUCT-NO
                                                         ____
        before  the  SUPPLIER-NAME.   Specifing  a  new  file  or options
        parameter in the ADD, CHANGE, DELETE, LIST,  or  MODIFY  commands
                                           ____     ______
        overrides and replaces the current file and option values.

 

 

 
                                ____ _______  ___
                                Help Command  [H]

        Gives helpful instructions on the use of DBEDIT.

             HELP [command [keyword]]

                          (Default:  browse through the entire help file)

        The parameters have the following meaning:

             command:  explains the command and gives you a list
                       of subsidiary keywords to select from.

             command,keyword searches for keyword under command
                       and prints the information found (if any).

             command,@ prints everything about the command.

                                                                     ____
        DBEDIT Commands                                              Help

        _________
        Examples:

              ____
             #help        {start at the beginning, peruse help file}

              _
             #h add       {explain the ADD command and show sub-keywords}

              _
             #h add,@     {tell everything about ADD.  Comma is required}

        ______
        Notes:

        If no parameters are specified, HELP allows you to browse through
        the "help" file.  HELP works only if the DBEDIT  "help-file"  has
        been  installed  (:RESTORE  *ROBELLE;  DBEDIT.HELP.ROBELLE).  The
        HELP command uses the QHELP subsystem  to  allow  you  to  browse
        through   the  DBEDIT  in  the  file  DBEDIT.HELP.ROBELLE,  which
        contains most of the User Manual.  For "help in help",  type  "?"
        when you see the QHELP prompt character ("?").

        The  help  file  is  organized  into  levels.   To go back to the
        previous level, enter RETURN or ^ instead of a key name.  If  you
        type "^^^", you will exit three levels at once.

 

 

 
                                ____ _______  ___
                                List Command  [L]

        Displays entries from a dataset.

                   ____   _______
             LIST [file][;options]

        ______
        Notes:

                              ____
        The field-list of the file parameter specifies  which  fields  of
        the  entry  to  print (default of course is all of them).  Search
        field values are not listed, unless  they  are  included  in  the
                                ______
        field-list.   The  ALL  option lists all records in the specified
        ____                ______
        file.  The RELATED  option  prints  related  records  from  other
        datasets  as  well  as  the  records  you select.  The listing is
        printed to $STDLIST, unless you use SET LP ON to specify SUPRLIST
        as the output file.

        The SUPRTOOL >LIST command will also display selected records and
        has the option of dumping  totally  in  OCTAL/CHAR  format.   Use
        >LIST when you suspect that a dataset may contain bad data or you
        need to select from a large dataset (>LIST is faster than #LIST).

        ______
        Modify                                            DBEDIT Commands

                               ______ _______  ___
                               Modify Command  [M]

        Changes the values of any or all fields in a dataset entry.

                     ____   _______
             MODIFY [file][;options]

        ______
        Notes:

                              ____
        The field-list of the file  specifies  which  fields  to  modify.
                              ______
        When  the  UPDATEKEY  option  is specified, search and sort field
        values may be changed.

        The existing value of each field is printed before a new value is
        accepted.   Entering  a  carriage return preserves the old value.
        If a new value is entered, it replaces the old  value.   The  ALL
        ______
        option  allows  you  to review and modify all of the entries in a
        dataset in serial order.

 

 

 
                                 _ _______  ___
                                 Q Command  [Q]

        Prints a message on $STDLIST.

             Q  [ string ]

                                           (Default:  print a blank line)

        The string of up to 80 characters is printed  on  $STDLIST.   The
        string  should  not  be  enclosed  in  quotes unless you want the
        message printed in quotes.

        You can use Q to include instructions in USE files.  Use :COMMENT
        in USE files for a non-printing comment line.

 

 

 

                                ___ _______  ___
                                Set Command  [S]

        Changes certain operating options within DBEDIT.  Except for  LP,
        these  options are saved when you return to SUPRTOOL and restored
        if you enter DBEDIT again.

             SET [LP        ]  ON|OFF
                 [PROMPT    ]  character
                 [QUIET     ]  ON|OFF
                 [RESET     ]  ON|OFF
                 [UNDERLINE ]  ON|OFF


                                                                      ___
        DBEDIT Commands                                               Set

                 [VERIFY    ]  ON|OFF

 
        ___ __ __
        SET LP ON               (Default:  OFF)

        All output from the LIST command is normally  sent  to  $STDLIST.
        When  you turn SET LP to ON, DBEDIT opens the file SUPRLIST which
        defaults to the line printer.  Turning  SET  LP  OFF  closes  the
        SUPRLIST   file   and   releases   it  to  the  spooler.   DBEDIT
        automatically  closes  the  SUPRLIST  file  when  you  return  to
        SUPRTOOL.

 
        ___ ______ ____
        SET PROMPT char         (Default:  #)

        PROMPT  tells  DBEDIT to use a different character for prompting.
        Any special character can be used as the prompt  character.   For
        example:

             >edit
              ___
             #set prompt %
             %list m-customer

 
        ___ _____ __
        SET QUIET ON            (Default:  OFF)

        Turning  this  option  ON  causes  DBEDIT to reduce the number of
        helpful messages that are printed and to shorten other messages.

 
        ___ _____ ___
        SET RESET OFF           (Default:  ON)

        When you use the FILE, LIST, MODIFY, CHANGE, or  DELETE  commands
        you may override the default order that DBEDIT uses to prompt for
                                       ______
        search fields (using the KEY=  option).  With  RESET  ON,  DBEDIT
                                  ______
        always  resets  the  KEY= option to the default.  With RESET OFF,
        DBEDIT will continue to use the new order of search fields.

 
        ___ _________ ___
        SET UNDERLINE OFF       (Default:  ON)

        When DBEDIT prompts for field  values,  it  prints  a  series  of
        underlines  to show the field width.  field.  Using UNDERLINE OFF
        disables this feature.  Users with slow printing  terminals  will
                                                            ______
        find  DBEDIT  faster with UNDERLINE OFF.  The UNDER option may be
        used to temporarily enable underlining for a single command.

 
        ___ ______ ___
        SET VERIFY OFF          (Default:  ON)

        When you are adding new records to a dataset,  DBEDIT  lists  the
        contents  of  new records after you have entered all of the field
        values.  Turning VERIFY OFF causes DBEDIT  to  stop  listing  new
        records after they are added.

        ____
        Show                                              DBEDIT Commands

                               ____ _______  ____
                               Show Command  [SH]

        Displays the datasets in the current BASE, or the  items  in  the
        current BASE, or the fields in the current dataset.

             SHOW  [SETS|ITEMS|FIELDS]

                                         (Default:  sets in the database)

        If you request a SHOW SETS, SUPRTOOL prints the number of dataset
        entries  beside  each dataset name (e.g., M-CUSTOMER(15217)).  If
        you request a SHOW ITEMS or a  SHOW  FIELDS,  SUPRTOOL  prints  a
        description  of  the  item  or  field  beside  each  name  (e.g.,
        TOTAL-COSTS(5J2)).  This command is identical to the SHOW command
        of SUPRTOOL.

 

 

 
                                ___ _______  ___
                                Use Command  [U]

        Specifies a file of commands to be executed as a group.

             USE filename

        Examples:

        A USE file makes your task easier by allowing common commands  to
        be specified once in an external file.  USE files can also be set
        up for data entry functions such as adding a  new  customer  into
        the  database  (e.g., add one master entry, add one billto entry,
        add multiple shipto entries, and then list the master entry  plus
        RELATED  details).  For example, here is a USE file that uses the
        FILE command to define a dataset:

             >base store
             >edit              {enter DBEDIT}
              ___
             #use dinvent.use   {specify commands from the USE file}
             #file d-inventory;key=product-no;5 {key and limit}
             #:comment  You may use the List, Modify, or Delete
             #:comment  commands to modify inventory records. You
             #:comment  are restricted to at most five inventory
             #:comment  records per product number.
             #                  {DBEDIT prompts for commands}

        DBEDIT prints the lines in the USE file, including  the  :COMMENT
        lines.   This allows you to include instructions and reminders in
        the USE file.


                                                                      ___
        DBEDIT Commands                                               Use

        ______
        Notes:

        USE files cannot be nested in DBEDIT.  The USE  file  may  be  an
        EDITOR  /KEEP  file,UNN  or a QEDIT workfile, but no more than 80
        characters per record will be processed.

 

 

 
                               ______ _______  ___
                               Verify Command  [V]

        Displays the current status of DBEDIT conditions.

             VERIFY [ ALL | @ ]
                    [ BASE    ]
                    [ DSET    ]
                    [ SET     ]

                               (Default:  BASE, DSET, changed SET values)

        ______
        Notes:

        Only one item can be verified at  a  time.   The  format  of  the
        VERIFY   output  is  organized  into  columns.   VERIFY  with  no
        parameters prints the database and the current dataset.  It  also
        prints those SET options which are not currently at their default
        setting.

        _________
        Examples:

             ______
            #verify dset       {current dataset}
             ______
            #verify all        {print the status of everything}

=============================================================================


           /          File 5 / NIA068              /
           /  *LONG* Surveillance Expo '90 Report  /
           /               Thalx                   /


Well, Surveillance Expo '90 was touted to be twice the size
of Expo '89.  Maybe conference-wise it was, but the Exhibits 
area was pretty much the same as last year, if not a bit smaller
and lower-key.

I arrived at the Crystal City Hyatt Regency at about 7:45am,
after a fun little ride on the DC metro, and about a 3/4 mile
walk in blustery cold weather.  I had decided to wear a suit
this time...to match my longer-than-ever hair.  Last year, 
a number of people there were reluctant, or avoided, noticing
or talking to the crowd-o-misfits, in jeans, t-shirts, long
hair, tie-dye, etc.  (_H*, were you barefoot there?  I think 
you were...)

Anyway, to match the suit, are these shoes that, after about
a quarter mile, feel like your feet have been stuffed into
something about the size and shape as a 10-pack of floppy 
disks.  Luckily, I had brought my black sneakers, stuffed into
my knapsack, which I brought for stuffing full of literature that
the Exhibitors are more than happy to give away.

The Exhibits area didn't open until 9am, but there was a free
"Early Bird" conference at 8am, which I was interested in.

"Surveillance:  90's Style", had 4 people on the panel.  One was
Jim Ross himself, who puts together this Expo.  The other three
were people from industry, involved in various ways with Tempest
stuff.

For the non-hip, Tempest refers to the act(art?) of spying on someone
else, by receiving and using stray electromagnetic radiation from
devices they use.  Things like TV's, put out f*ckloads of stray
EM radiation.  Computers.  Fax machines.  Hi-tech telephones.

Tempest also is a 'rating system', or spec, used by the government.
If something is Tempest-rated, then it passes the govt. spec for
minimal stray EM radiation.  There are companies out there that 
take off-the-shelf equipment, and Tempest-harden it.

There were maybe 10 or 15 people attending the conference.  They
had planned to show a videotape, made and aired by the BBC, about
2 years ago.  However, it turns out that NSA goons came out and
said "Gimme gimme gimme", "We gotta review this material before we
say it's ok for you to tell to others!"  They were apparently 
nonplussed by the fact that the BBC aired it 2 years ago, and that
everything was public knowledge.

Anyway, the guy who planned to show it basically told us that what
it had was a demo of Tempest surveillance.  The BBC took a van, put
some equipment in it, and sent it out around town.  They would
just drive around the business section of town, until they picked up
something, anything.  They locked into what was displayed on a computer
screen in a lawyer's office (Well, the English equivalent), who 
was up on the 23rd floor of an office building.  The document was
something pertaining to an ongoing court case, or somesuch.  

They went up to the 23rd floor, and knocked on the lawyer's door.

"Could you come down to the street?  We have something to show you, that
we think you might be interested in."

Apparently the lawyer-type had a typical British reaction to seeing
his classified documents on some scumbag's screen in a van on the street.

The van people went around town, doing this, showing people how vulnerable
they were, etc....until they got bored with the whole thing.

---

At this point, there was some debate over some points.  

"Shouldn't this be illegal?  Shouldn't there be some law", said a woman.

(Shuffling, muttering, etc.)

Basically, there were a few people who want to slap down a law for anything
like this.  Then there's the rest, who realize that if you're broadcasting
your info, mayhap in a 'new, unexplored' form of data, well, then that's
*your* problem.

Apparently, the govt. has known about this sort of Tempest Surveillance
for quite a while.  Since the 50's.  And back in the 30's or 40's, they
did similar things, to pick up superheterodyne receivers, and could find
radio receivers of spies that way.  Without the spy transmitting.

People were pretty damned concerned, mostly about the govt, and banking,
and R&D.  Are govt. computers protected?  Banking computers?

---

Now, Mr. Ross talked to one of the panelists, and asked "If he could
bring his equipment down for a little demo".  The guy replied,

"Well, there's not many people here.  Why don't we all go upstairs?"

At this point, my eyes musta bugged out pretty far...

We all headed up to the 18th floor...

I walk into the hotel room.  Suite, actually.  There, on the far wall,
is a table with some equipment on it.  A monitor, displaying static 
and snow.  Four 'boxes', stacked...2 rack-mount, 2 smallerish.  Coax
interconnecting everything.

Then I notice a long piece of coax, running to an antennae, about 3 feet
high, with many elements sticking out in all directions.  It's sitting
kinda near two terminals, on a different table.  The terminals were
VT302's, or something similar.

"The terminal on the left is unmodified.  The one on the right has been
Tempest-hardened by my company."

Another guy sits down at the stack 'o' boxes.  He starts fiddling with
the knobs.  "Let's see what we can see."  He fiddles some more.  Something
appears on the monitor screen by the equipment.  He twiddles a different
knob.  

*Bingo!*  

Now, displayed on the equipment monitor, is a replica of what is displayed
on the unmodified terminal screen.

"Yea, but that's a pretty fancy-looking antennae ya got there."

"Oh, ok...we really don't need that."

At this point, the techie-guy unplugs the coax from the antenna, and
inserts an alligator clip into the coax.  "Uh, lesse...what's metal
around here?  Ah!  The table leg"...

He attaches the other end of the alligator clip to the table leg.

*Blam*  We get the screen back.

---

"Hey, waittasec...do you hear a TV on above us?  Let's see what they're
watching...", sez the techie.

He fiddles with the knobs again...until he's got another screen locked
into the monitor.  

"Hey, a movie!  I think I've seen this one!  It's really funny!"

---

So just *what* are those 4 boxes - equipment?  Obviously, I just *had*
to know...

Well, firstly, there's the monitor.  Just a regular old B&W monitor, 
which accepts seperate horizontal, vertical, and video-level signals.

The two top (smallerish) boxes were Wavetek function generators.  Ohe
had been modified with a 10-turn pot, for fine tuning.  One of the
larger rack-mount boxes was also a function generator.  This was a
high-precision function generator, which was used to do the horizontal
syncing of the monitor.  It fed thru one of the Waveteks, simply because
it didn't have a TTL-level output, while the one Wavetek was just being 
triggered, so's to use it's TTL-level output.

The other Wavetek was used to trigger the vertical sweep, and was
not as critical as the horizontal.  The horizontal, I believe, was
triggered around 30 khz, +/- .5 Hz.  This was why they had a large
rack-mount function generator.

The last box was a "VHF/UHF receiver".  You dial in one frequency,
your center frequency.  Then you select a range, your bandwidth.
Then, whatever signal you feed from it, it'll extract what it sees
as a video signal, at the frequency and bandwidth you dialed in.
The box also had several different modes and such that it can read,
but I'm not familiar with video equipment, so can't relate much about
this, except that the guy said it's an off-the-shelf, common, receiver.

The antenna feeds directly into the receiver.  The 3 signals out are fed
to the proper pins on the video monitor. 

Voila!  You're armed and ready to do some heavy Tempest surveillance,
at distances of 1000 feet and more!  (Depending on the type of antenna
of course...your mileage may vary.)

The antenna that they were using was a 20-db gain antenna, with a flat
response from 100 kHz to 1 GHz.  (Yea, fucking huge...I still don't quite
believe the guy.)  The antenna had knobs and switches and lights and 
little meters on it, and had to be plugged into the wall.  Not a CB antenna.

All you do is tune the receiver frequency around, until you notice something.
What you're picking off of, is harmonics generated from the CRT driver 
circuitry.  Them video levels are nearly square waves, which means that
they're rich in harmonics, so you can tune just about anywhere, and find
something.

And what the company does, in this case, is make a new video driver board,
but with slower risetimes, and more rounded signals.  Of course, the slower
the risetime, the more blurry the screen, and they try to optimize that.

---
Well, that's about that for Tempest.  This is the simplest type of
surveillance...the signal is *here*, *there*, *everywhere*.  Your data
is everyone's data.  

There are much more advanced types of Tempest surveillance, where they
can lock in onto a microprocessor's clock frequency (and phase), and
read off more harmonics from the data bits flowing across the busses
inside the computer, to printers, etc.  This requires some heavy analysis,
however.  Oh...one of the people on the talk this morning, apparently
either has, or makes, equipment which will distinguish between 20 different
devices in close proximity...so if you have 20 identical computers in a row,
they can lock in on each one, individually.  Apparently clock frequencies
are different by some small amount, and they can exploit that.

---

Well, at this point, it's time for me to head out and down to the Exhibits,
which just opened.  But I got caught up in a conversation with a guy who
turned out to be a ham (Then turned out to be a Lieutenant something or other
from the Pentagon) and some butthead with kinda stupid questions (reporter?)
and we basically commented on this stuff in general, and how people respond
in a certain way about interference from others, and how they'd respond very
differently if they were sending out this 'interference'.

If a ham transmits, and your equipment accepts (does not reject) the signal,
and you hear him on your stereo, chances are the typical person would whine
and yell at the ham for causing interference.  The ham wouldn't mind that 
you were 'eavesdropping', but would help clear up the interference.

If Joe Butthead was using a computer, and Joe Techie picked up his signal,
Joe Butthead would whine and yell that you were 'eavesdropping', while
ignoring the fact that he was basically broadcasting his data all over.
In a new, little-known format, perhaps...but broadcasted, regardless.  See
flamage about cellular phones and cordless phones elsewhere...

Ok, we finally are the last ones to leave the room...

---

The Exhibits!

The first booth I came across was Visual Methods, Inc.  From New Jersey.
They market all sorts of miniature cameras, placed in virtually anything
you could imagine...sprinkler heads, car-CB-antenna bases, neckties 
(the tie-tack is the CCD element, single-element lens), etc.  However,
the guy came across as kinda rude to me.  He isn't interested in 
showing off his neato devices, he only seems to want to talk to people who
are ready to spend buck$ for his devices.  "Tell me what you're interested
in, and we'll talk"..."What do you want to do?", etc.  Well, I just want
to find out more about what's out there, what's available.  I guess this
guy sees it as a threat to his business, and I can understand that.
His products have an implied "People won't think there's a camera in _this!_"
quality, and if he tells everyone about everything he makes, then it reduces
the 'suprise' quality.  However, this was a Surveillance Expo, and I really
think their public-relations people should be more friendly.  This is the
same guy that was at Expo '89, and perhaps he IS the company.  But enough said.

A number of empty booths were there...either people packed up early,
or didn't show at all.

There was an unmanned booth for Pulnix, which sells mini CCD color
cameras...niftly little cameras, some about the size of a 2" cube.

There was another nearby mini-camera booth, with a guy who seemed
bored, and eager to talk and spew his spiel.  Even after I told him
that I was an engineering student, and completely unlikely to buy
anything...he seemed proud of what he had to offer.  But it was just
more of the mini-camera fare...one neat one was about 1/2" in diameter,
and maybe 2 1/2" long.  I have the data sheets from this booth, but there
isn't a company name on it *anywhere*... go figure.

Fiber optics...Closed Circuit TV systems..one booth had for sale, wireless
CCTV units, where you didn't need to run coax.  Just plug this box (and
it's antenna) to the back of the camera, place the camera remotely.
Plug this other box into your monitor, and you're set.  

A couple rows over from this guy, were some 'bug-detector' people, with
spectrum analyzers.  Of course, they tune into this "Really strong signal,
I think it's around 900 MHz...".  Gee, wouldn't happen to be this guy a 
couple of rows back, could it?  You could watch the video signal change,
as people walked by the table with the wireless CCTV system.

Another table, "Advanced Resonant Technologies", had a 6-million candlepower
flashlight.  Portable.  This was really nifty...nice adjustable spot/flood.

In the fully-lit convention center, the guy aimed it at a wall 30 feet away.
The beam was less than 1 foot in diameter...note that the reflector was
about 6 inches in diameter... the flashlight has a short-arc xenon lamp,
and some exotic metal reflector...gallium over nickel, or some such.  It
reflected IR, so you could pop on an IR filter, and use it as an IR source.
The beam is advertised to be useful at over one mile.  Weight:  3.2 pounds,
and I think the 12-volt pack lasts 1.5 hours.  Microprocessor controlled.
Also at this table was a nice, compact Starlight scope.  Fit nicely
into one's hand, about 4 inches long, and 1.5 inches in diameter.  40 
degree field of view, so what you see is basically 1:1.  I really liked
this item, and if I had a spare $4k, I might consider picking one up.

NCSA (National Computer Security Association) was there.  The guy there
said they basically just want to advocate responsible computing practices.
MGrant talked to him, and we shortly discovered that this guy was not
from NCSA, but some random advertising agency.  So he knew lotsa key
phrases and such, but seemed utterly useless for real info, aside from
more handouts.  But I wasn't really following the conversation, so I 
could be way off.

There was a booth at the corner of "TRW ELectronic Products Inc", and
as MGrant and I approached, there was a mournful "Your not gonna make
us stand up, are you" from behind the table. 

"No, please, stay sitting....but spill your spiel, anyway!"

They were advertising "Fax Encryptors", boxes that go at each end of
fax communications.  The boxes handshake, and use DES, so you can't
have a third box listen in, and decipher.  The guys spilling their
spiel had apparently been out late drinking, and were fighting hangovers,
or were just incredibly bored and lame or something.  But they were pretty
amusing..."First, you insert the key.  That's your 'boot up sequence'.  WHen
the display says 'Ready', that means it's ready for use.  Your I/O
ports are in the rear...your phone line plugs into this connector, and
another cable goes from this one, to your fax machine"  Of course, they
alternate sentences...while one talks, the other holds his head, apparently
in pain...

---

There was also, on a general info table, a stack of papers by Jim Ross,
on "Calling Number ID:  A Position Paper in Favor of Universal Service
Without Per-Call Blocking"

Basically, he says that with universally offered CNID, then phone
calls that are harassing, obscene, etc. will virtually stop.  Also
anonymous bomb threats will be greatly reduced.  Hackers dialing
in will be _more_ traceable, same for voice-mail intrusions, and
"hang-up" calls.

For those wanting blocking...(battered wives, undercover police, 
psychotherapists) there's always a pay phone, or, he suggests
getting another line under a pseudonym, with no address, and use that
as an *incoming* line.  Make all calls out, on your regular line, but
disable the ringer on that phone.  You'll never be disturbed...

Also, if you place a call thru an operator, your number will not be
forwarded.  (Dunno about this, but Mr. Ross says so.)

There was a study done out in North Dakota...with the phone number in
CNID, they also displayed the name under which the phone line is 
subscribed, and the residential subscribers had a preference for
seeing the name along with the number.  Starting next spring, this
service is planned to be offered in the Boise, Idaho area by US West.

During the test, name blocking was offered, and out of 1 million
calls, it was used a total of 145 times.

{Ok, that's all from Jim Ross' paper.  It's 10 pages long, and has
points defended much more than I'm willing to type in.}

Well, that about wraps it up for Surveillance Expo '90.  It was 
kinda fun, kinda lame.  I am very glad I got to go, if solely 
for the Tempest demo.

					-Thalx
==============================================================================

        /                                                             /
        /                    File 6 / NIA068                          /
        /   TIME-TRIP: 1985 MOG-UR CC Charges Against Tom Ttcimpidis  /
        /                                                             /


---
Wee Hours of the AM, Februrary 10, 1985...

I plucked this off of USENET, the national network of UNIX systems.  I think
all of you will be interested in this, especially those of you out there who
are sysops on your own systems.  Please, Please, PLEASE download this and post
it on every BBS and AE you can find.  To coin a phrase:

WE HAVE WON!!!!!!!!!

/\/oo\/\  Count Nibble /\/oo\/\

Future Sysop, >The Planet 10 AE<

---

7AM, 02/07/85:

Pursuant to a telephone discussion w/ Reginald Dunn, head of the Criminal
Division of the LA City Attorney's Office, I was informed that the prosecution
believes it has insufficient evidence to continue the prosecution of Tom
Tcimpidis, Sysop of MOG-UR.  This determination was made after I requested a
review of the case on 1/11/85 after the departure of city attorney IRA Reiner
to become DA and while the City Attorney's office is being run by the Civil
Service staff pending election of a new City Attorney.  Mr. Dunn has given me
his word that the people will seek dismissal of the charges against Tom under
California Penal Code Section 1385, I.E., Dismissal In The Interests Of
Justice.  Under California law, such a dismissal is "w/ prejudice" and the
people cannot refile the case subsequently.  To put it succinctly, a dismissal
will terminate the presecution permanently.

As the members know, the City Attorney's office has previously reneged on
representations made to me regarding dismissal of the charges....I wish to
assure everyone that I have known Mr. Dunn for 10 years, and I trust his word
completely.  If he says the case will be dismissed, I am statisfied that such
an action will occur.

We win.  Win....win....win....win....My thanks to everyone who contributed to
supporting Tom and I in the defense of this matter.  I consider this to be a
major victory for the rights of free speech over the "Big Brother"
machinations of the phone company.

I would be grateful if you would download this message and place it on other
systems throughout the country.....This is a very big victory, and the BBS and
Modem Communities should know about it.

Again, thanks for the support. Best wishes to all,
Chuck Lindner Attorney for sysop Tom Tcimpidis

8PM, 02/07/85:
The case of People V. Tcimpidis, aka use of a modem, go to jail, was dismissed
in the "Interests Of Justice" this morning, 02/07/85.  As noted earlier, this
dismissal is w/ prejudice, and Tom is now free of the pactel scourge.  Another
small step for something resmbling justice.

Chuck.

---

[For those of you unaware of the case, Tom Tcimpidis had his system confiscated
after the Shock Troops of PacTel found "illegally obtained" telephone credit
card number(s) on his BBS and was subsequently jerked around by the LA City
Attorney, who first promised that he was not going to be prosecuted, then
changed his mind and (I guess) decided to file charges.  Now the case has
supposedly been dropped, permanently.  I'm no lawyer, but I think the gist of
this is that you sysops out there probably have little to worry about when it
comes to being prosecuted for leaving something illegal on your board.  NOW
will you get rid of those silly disclaimers? -CN]


=============================================================================

           /                  File 7 / NIA068                    /
           /  DEPARTMENT OF THE ARMY FIELD MANUAL Part 01 of 02  /
           /           Explosives and Demolitions                /
           /                    extract.                         /
           /       HEADQUATERS, DEPARTMENT OF THE ARMY           /
           /                  February 1971                      /
           /                                                     /
           /            Typed by: Death Jester                   /
           /            Date Typed In: 01DEC90


                                Chaper 2
                             FIRING SYSTEMS

                  Section I. NONELECTRIC FIRING SYSTEMS

2-1. Introduction

Two types of systems for firing explosives are in general use--electric and
nonelectric.  Both have their individual priming methods and materials.  In
addition, detonating cord may be used with both systems to make them more
efficient and effective, as described in paragraphs 2-10 through 2-16.

2-2. System Components and Assembly for Detonation

A nonelectric system is one in which an explosive charge is prepared for
detonation by means of a nonelectric blasting cap.  The basic priming
materials consist of a nonelectric blasting cap, which provides the shock
adequate to detonate the explosives, and the time blasting fuse, which
transmits the plame that fires the blasting cap.  If more than one charge
must be detonated simultaneously, the nonelectric system must be combined
with a detonating cord (para 2-10 - 2-12) to insure simultaneous firing.
The assembly of a basic nonelectric system follows.

   a. Cut and discard a 6-inch length from the free end of the time blasting
fuse to prevent a misfire caused by the exposed powder absorbing moisture
from the air (A, fig 2-1).  Then cut off a three foot length of time
blasting fuse to check the burning rate.  Split the end of the fuse, insert
a match head into the split, light the match with another match and note
the time it takes for the fuse to burn.  Then compute the burning rate
per foot by dividing the time in seconds by the length in feet.

   b. Cut the time blasting fuse long enough to enough permit the person
detonating the charge to reach a safe distance by walking at a normal
pace before the eplosion.  This cut should be made squarely across the
time fuse.

   c. Take on blasting cap from the cap box, inspect it by looking into
the open end.  If any foreign matter or dirt is present, hold it with
the open end down, and shake it gently or bump the hand holding it
against the other hand. IF FOREIGN MATTER DOES NOT COME OUT, DISCARD
CAP.  NEVER TAP THE CAP WITH A HARD OBJECT OR AGAINST A HARD OBJECT.
NEVER BLOW INTO THE CAP.  DO NOT INSERT ANYTHING INTO THE CAP TO REMOVE
AND DIRT OR FOREIGN MATERIAL.

   d. Hold the time blasting fuse vertically with the square cut end up
and SLIP TH BLASTING CAP GENTLY DOWN OVER IT SO THAT THE FLASH CHARGE IN
THE CAP IS IN CONTACT WITH THE END OF THE TIME FUSE; IF NOT IN CONTACT,
IT MAY MISFIRE.  NEVER FORCE THE TIME FUSE INTO THE BLASTING CAP BY
TWISTING OR ANY OTHER METHOD.  If the end is flattened or it is too
large to enter the blasting cap freely, roll it between the thumb and
fingers until the size is reduced to permit free entry.
   e. After th blasting cap has been seated, grasp the time blasting
fuse between the thumb and third finger of the left hand and extend the
forefinger over the end of the cap to hold it firmly against the end of
the time fuse.  Keep a slight pressure on the closed end of the cap with
the forefinger (B, fig 2-1).

   f. Slide the second finger down the outer edge of the blasting cap to
guide the crimpers (B, fig 2-1), and thus obtain accurate crimping, even
in darkness.

   g. Crimp the blasting cap at a point 1/8 to 1/4 of an inch from the
open end.  A CRIMP TOO NEAR THE EXPLOSIVE IN THE BLASTING CAP MAY CAUSE
DETONATION.  POINT THE CAP OUT AND AWAY FROM THE BODY DURING CRIMPING
(fig 2-2).
     Note.  If the blasting cap should remain in place several days
before firing, protect the joint between the cap and the time blasting
fuse with a coating of a sealing compound or some similar substance.
(As this sealing compound (para 1-50), a standard issue, does not make a
waterproof seal, submerged charges should be fired immediately.)

   h. Pass the end of the time blasting fuse through the priming
adapter.  (The time fuse should move through the adapter easily.)  Then
pull the cap into the adapter until it stops, instert into the cap well
of the the explosive, and screw the adapter in place.  If no priming
adapter is available, insert the blasting cap into the cap well and tie
it in place with a string or fasten it with adhesive tape or some other
available material.  (For details of nonelectric priming of demolition
blocks, see para 2-18).
     Note.  For long lengths of time blasting fuse it may be more
conveinent to pass the end of the fuse through the priming adapter
before crimping the cap onto the the time fuse.

   i. Attach M60 weatherproof fuse igniter (para 1-57n) as follows:
      (1) Unscrew the fuse holder cap two or three turns but do not
remove.  Press the shipping plug into the igniter to release the split
collet (fig 1-47), and rotate the plug as it is removed.
      (2) Insert the free end of the time fuse in place of the plug
until it rests against the primer.
      (3) Tighten the cap sufficiently to hold the fuse in place and
thus weatherproof the joint.
      (4) To fire, remove the saftey pin, hold the barrel in one hand,
and pull on the pull ring with the other, taking up the slack before
making the final strong pull.  In the event of a misfire, the M60 can be
reset quickly without disassembly by pushing the plunger all the way in
and attempting to fire as before.  (It cannot be reset underwater
however, because water can enter the interior of the nylon case through
the holes in the pull rod.  The fuse igniter is reusable if the primer
is replaced.)
     Note. The M2 weatherproof fuse igniter (fig 1-46) may be attached
by sliding the fuse retainer over the end of the fuse, firmly seating
it, and applying sealing compound at the joint betwwen the time blasting
fuse and the igniter to protect the open end of the fuse from moisture.
In firing, hold the barrel in one hand and pull on the other ring with
the other.

   j. If a fuse igniter is not abailable, light th time blasting fuse
with a match by splitting the fuse at the end (fig 2-3), placing the
head of an unlighted match in the powder train, and then light the
inserted match head with a flaming match or by rubbing the abrasive on
the match box against it.

2-3. Nonelectric Misfires

   a. PREVENTION.  Working on or near a misfire is the most hazardous of
all blasting operations.  A misfire should be extremely rare if these
procedures are followed closely:
     (1) Prepare all primers properly.
     (2) Load charges carefully.
     (3) Place primer properly.
     (4) Perform any tamping operation with care to avoid damage to an
otherwise carefully prepared charge.
     (5) Fire the charge according to the proper technique.
     (6) If possible, use dual firing systems (para 2-13 - 2-16).  If
both systems are properly assembled, the possibility of a misfire is
reduced to a minimum.
     (7) Do not use blasting caps underground; use detonating cord.
   b. THE CLEARING OF NONELECTRIC MISFIRES.  Occasionally, despite all
painstaking efforts, a nonelectric misfire will occur.  Investigation
and correction should be undertaken only by the man that placed the
charge.  For a charge primed with a nonelectric cap and time blasting
fuse, the procedure is as follows:
     (1) Delay the investigation of the misfire at least 30 minutes
after the expected time of detonation.  This should be ample time for
any delayed explosion to take place because of a defective powder train
in the fuse.  Under certain combat conditions, however, immediate
investigation may be necessary.
     (2) If the misfired charge is not tamped, lay a primed one-pound
charge at the side of the charge, without moving or disturbing it, and
fire.
     (3) If the misfired charge has no more than a foot of tamping,
attempt to explode it by detonating a new 2-pound charge placed on top.
     (4) If the misfired charge is located in a tamped borehole, or if
the tamped charge is so situated as to make method (3) above
impractical, carefully remove the tamping by means of wooden or
nonmetallic tools.  Avoid accidentally digging into the charge.  Also,
the tamping may be blown out by means of a stream of compressed air or
water if either is abailable.  Constant checking of the depth of the
borehole from the ground surface to the top of the charge during digging
will minimize the danger of striking the charge.  When the charge has
been uncovered within 1 foor, insert and detonate a new 2-pound primer.
Whenever possible, detonating cord should be used to prime underground
charges and the blasting cap located above ground (see para 2-10 -
2-12).
     (5) An alternate method of reaching a deep misfire charge is to
drill a new hole withing one foot of the old one and to the same depth a
new 2-pound primed charge is then placed in the new hole to detonate the
misfired charge.  Extreme care is required in drilling the new hole to
avoid striking the old misfired charge or placing the new charge too far
away to induce detonation.

                Section II.  ELECTRIC FIRING SYSTEMS

2-4. Components and Assembly for Detonation

An electric firing system is one in which electricity is used to fire
the primary initiating element.  An electric impulse supplied from a
power source, usually an electric blasting machine, travels through the
firing wire and cap lead wires to fire an electric blasting cap.  The
chief components of the system are the electric blasting cap, firing
wire, and the blasting machine.  Detailed information about electric
blasting equipment is contained in TM 9-1375-203-15.  The preparation of
the explosive charge for detonation by electric means is called electric
priming.  The proper methods and sequence of operations of electric
priming are described below.

   a. Place Charges.  Prepare and place all explosive charges as
prescribed by the methods in chapter 3.  (Details of preparing
demolition blocks for electric priming are given in para 2-18.)

   b. Lay Out Firing Wire.
      (1) After locating a firing position a safe distance away from the
charges, lay out the firing wire from the charges to the firing
position.
      (2) Test the free ends of the firing wire together to prevent an
electric charge from building up in the firing wire.
      (3) Twist the free ends of the firing wire together to prevent an
electric charge from building up in the firing wire.

   c. Test Blasting Caps.
      (1) Test each blasting cap to be used in the electric firing
system as described in paragraph 2-7.
      (2) After each cap has been tested, twist the free ends of the cap
lead wire together or shunt them with the short circuit shunt provided
to prevent an electric charge from building up in the cap lead wires.

   d. Connect Service Circuit.
      (1) If two or more electric blasting caps are used, connect their
lead wires into one of the two series circuits described in paragraph
2-6.
      (2) If more than 10 blasting caps are used in the series circuit,
or if the circuit is complicated, it should be tested with the test set
or galvanometer (para 2-7).
      (3) Splice the free cap lead wire to the firing wire.

   e. Insert Caps Into Charges.  Place the blasting caps into the
explosive charges and fasten the caps securely to the charges (fig 2-4).
(For details of electric priming of demolition blocks see para 2-18).

   f. Test Entire Circuit.
      (1) Move to the firing position and test the entire firing circuit
with the test set or galvanometer as described in paragraph 2-7.
      (2) Twist the free ends of the firing wire together.

   g. Test Blasting Machine.  Test operate the blasting machine several
times as outlined in TM 9-1375-203-15 to insure that it operates
properly.

   h. Connect Blasting Machine.
      (1) Untwist the free ends of the firing wire and fasten them to
the two posts of the blasting machine.
      (2) Operate the blasting machine to fire the charges.

   i. Precautions.
      (1) TWO OR MORE CAPS. If two or more electric blasting caps are
connected in the same circuit, be sure that they are of the same type
and made by the same manufacturer.  This is essential to prevent
misfires, as blasting caps of different manufacturers have different
electrical characteristics which can result in some caps in the circuit
not firing because others fire more quickly and thus break the circuit
before the slower caps have received enough electricity to fire.  This
is not true, however, of the M6 special electric blasting caps--all of
which are made according to the same specifications.  Blasting caps of
the same manufacturer may be identical by the label, color of the cap,
or shape of the shunt.
      (2) FIRING THE CIRCUIT.  For safety reasons, only one individual
should be detailed to connect the blasting machine to the firing circuit
and to fire the circuit.  He should be responsible for the care and
security of the blasting machine at all times during blasting
activities.  He also should either connect the blasting wires in the
circuit or check their connection by on-the-spot visual examination.

2-5. Splicing Electric Wires

Insulated wires, before splicing must have the insulating material
stripped from the ends.  Expose about 3 inches of bare wire (fig 2-5),
and remove any foreign matter such as enamel by carefully scraping the
wire with the back of a knife blade or other suitable tools.  The wires
should not be nicked, cut, or weakened when the wires are bared, and
multiple strand wires should be twisted lightly after scraping.

   a. SPLICING METHOD.  Two wires, which have been prepared as described
above, may be spliced as shown in figure 2-5.  THis is called the
Western Union "pigtail" splice.  Two pairs of wires are spliced in the
same manner as the two wire splice above.  One wire of one pair is
spliced to one wire of the other pair, and the process is repeated for
the other two wires.

   b. PRECAUTIONS FOR SPLICING.  A short circuit may ovvur very easliy
at a splice if certain precautions are not observed.  If pairs or wires
are spliced, stagger the two separate splices and tie with twine or tape
as in (1), figure 2-6.  An alternate method of preventing a short
circuit at the point of splice is shown in (2), figure 2-6.  The splices
are separated, not staggered, in the alternate method.  Whenever
possible insulate splices from the ground or other conductors by
wrapping them with friction tape or othe electric insulating tape.  This
is particularly necessary when splices are place under wet tamping.
Circuit splices, not taped or insulated, should not lie on moist ground.
The splices should be supported on rocks, blocks, or sticks so that only
the insulated portions of the wires touch the ground.  THey may also be
protected by inserting them to hold the splice firmly inside.  Splices
may be protected from damage from pull by tying the ends in an overhand
or square knot, allowing sufficient length for each splice ((1), fig
2-5).

2-6. Series Circuits

   a. COMMON SERIES.  This is used for connecting two or more charges
fired electrically by a single blasting machine (A, fig 2-7).  A common
series circuit is prepared by connecting one blasting cap lead wire from
the first charge to the once lead wire in the second charge and so on
until only two end wires are free, then connecting the free ends of the
cap lead wires to the ends of the firing.  Connecting wires (usually
annunciator wire) are used when the distance between blasting caps is
greater than the length of the usual cap lead wires.

   b. "LEAPFROG" SERIES.  The "leapfrog" method of connecting caps in
series (B, fig 2-7) is useful for firing ditching charges or any long
line of charges.  It consists of ommitting alternate charges on the way
and then connecting them to form a return path for the electric impulse
to reach the other lead of the firing wire.  This brings both end wires
out at the same end of the line of charges, and thus eliminates laying a
long return lead from the far end of the line charges back to the firing
wire.

2-7. Testing Electric Wires, Blasting Caps and Circuits

   a. FIRING WIRE MAY BE TESTED AS FOLLOWS:
      (1) When using M51 blasting cap test set:
        (a) Check test set by connecting the posts with a piece of bare
wire (para 1-54)(fig 2-8).  Th indicator lamp should flash when the
handle is squeezed.
        (b) Separate the firing wire conductors at bothe ends, and
connect these at one end to the test set binding posts.  Actuate test
set.  The indicator lamp should not flash.  If it does, the firing wire
has a short circuit (fig 2-9).
        (c) Twist the wires together at one end and connect those at the
other end to the test set posts.  Actuate test set.  The indicator lamp
should flash.  If it does not flash, the firing wire has a break.
      (2) When using the blasting galanometer:
        (a) Check galvanometer by holding a piece of metal across its
terminals (para 1-53, fig 2-8).  If the batter is good, this should show
a wide deflection of the needle, approximately 25 units (zero ohms).
        (b) Separate the firing wire conductors at bothe ends, and touch
those at one end to the galvanometer posts.  The needle should not move.
If it does, the firing wire has a short circuit (fig 2-9).
        (c) Twist the wires together at one end and touch those at the
other end to the galvanometer posts.  This should cause a wide
deflection of the needle (about 6.5 ohms or 23 to 24 units for a
500-foot length).  (See note at end of d(2), below.)  No movement
indicates a point of break; a slight movement indicates a point of high
resistance whcih may be cause by a dirty wire, loos wire connections, or
wires with several strands broken off at connections.
        Note. Firing wire may be tested on the reel, but should be
tested again after unreeling, which may separates broken wires unnoticed
when reeled.

   b. Electric Blasting Caps May be Tested as Follows:
      (1) When using the M51 blasting cap test set:
        (a) Check the test set as described above.
        (b) Remove the short circuit shunt from the lead wires of the
electric blasting cap.
        (c) Attach one cap lead wire to one binding post and tie other
cap lead wire to the other post, and squeeze the test set handle.  If
the indicator lamp flashes, the blasting cap is satisfactory.  If it
does not flash, the cap is defective and should not be used.  During the
tes, ALWAYS POINT THE EXPLOSIVE END OF THE BLASTING CAP AWAY FROM THE
BODY.
      (2) When using the blasting galvanometer:
        (a) Check the galvanomter as described above.
        (b) Remove the short circuit shunt.
        (c) Touch one cap lead wire to one galvanometer post and the
cap lead wire to the other.  If the galvanometer's needle deflects
slightly less than it did when instrument was tested ((a) above) the
blasting cap is satisfactory; if not, the cap is defective and should
not be used.  During the test, ALWAYS POINT THE EXPLOSIVE END OF THE CAP
AWAY FROM THE BODY.
         Note. If the battery is fresh, the galvanometer should read 25
units (zero ohms) when the instrument is tested and about 24 units
(about 2 ohms) when a good blasting cap is tested.

   c. Series Circuits May Be Tested as Follows:
      (1) Connect charges as shown in figure 208 (either method).
      (2) When using the M51 blasting cap test set, connect the free
ends of the blasting caps lead wires to the test set binding posts.  THe
indicator lamp should flash.
      (3) When using the blasting galvanometer, touch the free ends of
the blasting cap lead wires to the galvanomter posts.  This should cause
a wide deflection of the needle.

   d. The Entire Circuit May be Tested as Follows:
      (1) Splice firing wires to series circuit and move to firing
position.
      (2) When using the blasting cap test set connect the free ends of
the firing wire to the binding posts.  The indicatior lamp should flash.
If the lamp does not flash, the circuit is defective.
       Note. Since the M51 test set cannot discriminate between a firing
circuit that is properly set up and once with a short in it, special
care must be taken in wiring the circuit to avoid shorting.
      (3) When using the galvanometer touch the free ends of the firing
wire to the galvanometer posts.  This should cause a wide deflectction
of the needle.  The magnitude of the deflection depends upon the number
of caps and the length of the firing wire.  If there is no deflection,
the circuit is defective.  See appendix E for calculation of circuit
resistance.
       Note. To get a "wide deflection of the needle" the galvanometer
battery should be in good condition (para 1-53).
      (4) If the firing circuit is defective, shunt wires,  Then go down
range and recheck the circuit, repeating a and b above.  If a splice is
found defective, resplice the wires.  If a cap is found defective,
replace it.  Continue to test all caps and wire in the circuit, then
test the entire circuit again to make sure that all breaks have been
located before attempting to fire the charge.

2-8.  Electric Misfires

   a. PREVENTION OF ELECTRIC MISFIRES.  In order to prevent misfires,
make one individual responsible for all electrical wiring in a
demolition circuit.  He should do all splicing to be sure that--
      (1) All blasting caps are included int the firing circuit.
      (2) All connections between blasting cap wires, connecting wires,
and firing wires are properly made.
      (3) Short circuits are avoided.
      (4) Grounds are avoided.
      (5) The number of blasting caps in any circuit does not exceed the
rated capacity of the power source on hand.

   b. CAUSE OF ELECTRIC MISFIRES. Common specific causes of electric
misfires include--
      (1) Inoperative or weak blasting machine or power source.
      (2) Improperly-operated blasting machine or power source.
      (3) Defective and damaged connections causing either a short
circuit, a break in the circuit, or high resistance with resulting low
current.
      (4) Faulty blasting cap.
      (5) The use in the SAME CIRCUIT of blasting caps (other than M6)
made by different manufacturers.
      (6) The use of more blasting caps than the power source rating
permits.

   c. CLEARING ELECTRIC MISFIRES.  Because of the hazards of burning
charges and delayed explosions, electric misfire must be cleared with
extreme caution.  A burning charge may occur with the use of electric as
well as nonelectric caps.  Misfires of charges primed with detonating
cord fired by electric blasting caps are cleared as described in
paragraph 2-12.  If the charge is dual-primed electrically and below
ground, wait 30 minutes before investigating to make sure that the
charge is not burning; or if dual-primed above ground, wat 30 minutes
before investigation because a burning charge can set off the second cap
causing the main charge to detonate.  On the other hand, if the
electric misfire is above ground and the charge is not dual-primed,
investigate immediately.  If the system is below ground and not dual
primed, proceed as follows--
      (1) Check the firing wire connection to the blasting machine or
power source terminals to be sure the contacts are good.
      (2) Make two or three more attempts to fire the circuits.
      (3) Attempt to fire again, using another blasting machine or power
source.
      (4) Disconnect the blasting machine firing wire and wait 30
minutes before further investigation.  Before moving on to the charge
site, be sure that the firing wires at the power source end of the
circuit are shunted to aboid any posible static electric detonation.
      (5) Check the entire circuit, including the firing wire, for
breaks and short circuits.
      (6) If the faul is not above ground, remove the tamping material
very carefully from the borehole to avoid striking the electric blasting
cap.
      (7) Make not attempt to remove either the primer or the charge.
      (8) If the fault is not located by the removal of the tamping
material to withing 1 foot of the charge, place a new electric primer
and 2 pounds of explosive at this point.
      (9) Disconnect the blasting cap wires of the original primer from
the circuit, and short the cap's lead wires.
      (10) Connect the wires of the new primer in their place.
      (11) Replace the tamping material.
      (12) Initiate detonation.  Detonation of the new primer will fire
the original primer.
        Note. In some cases it may be more desirable or expedient to
drill a new hole withing a foot of the old one at the same depth to
avoid accidental detonations of the old charge and then place and prime
a new 2-pound charge.

2-9 Premature Detonation by Induced Currents and Lightning

   a. INDUCED CURRENTS.  The premature detonation of electric blasting
caps by induced curret from radio frequency signals is possibl.  Table
2-1 showing the minimum safe distance in respect to transmitter power,
indicates the distance beyond which it is safe to conduct electrical
blasting even under the most adverse conditions.  This table applies to
operating radio, radar, and television transmitting equipment.  Mobile
type transmitters and portable transmitters are prohibited within 50
meters of any elctrical blasting caps or electrical firing system.  If
blasting distances are less than those shown in table 2-1, the only safe
procedure is to use a nonelectric system, which cannot be prematurely
detonated by RF currents.  If however the use of the electric systme is
necessary, follow precautions given in TM 9-1300-206.  See also AR
385-63.
   Caution. If electric blasting caps are to be transported near
operating transmitters or in vehicles (including helicopters) in which a
transmitter is to be operated, the caps will be placed in a metal can,
the cover of which must be snug fitting and lap over the body of the can
to a minimum depth of one-half inch.  Caps will not be removed from
container in proximity to operating transmitter unless the hazard has
been evaluated and estimated to be acceptable.

   b. LIGHTNING.  Lightning is a hazard to both electric and nonelectric
blasting charges.  A strike or a nearby miss is almost certain to
initiate either type of system.  Lightning strikes, even at remote
locations, may cause extremely high local earth currents.  The effects
of remote lightning strikes are multiplied by proximity to conducting
elements, such as those found in buildings, fences, railroads, bridges,
streams, and underground cables or conduct.  Thus, the only safe
procedure is to suspend all blasting activities during electrical storms
and when one is impending.

   c. ELECTRIC POWER LINES.  Electric firing should not be performed
within 155 meters of energised power transmission lines.  When it is
necassary to conduct blasting operations at distances closer than 155
meters to electrical power lines, nonelectric fire systems should be
under or the power lines deenergized (AR 385-63).

table 2-1:
         ______________________________________________________________
                Average or peak         !         Minimum distance
              transmitting power        !    to transmitter(meters)
         ______________________________________________________________
                                        !
                     0-30               !              30
                    30-50               !              50
                    50-100              !             110
                   100-250              !             160
                   250-500              !             230
                   500-1000             !             305
                  1000-3000             !             480
                  3000-5000             !             610
                  5000-20000            !             915
                 20000-50000            !            1530
                 50000-100000           !            3050
         _______________________________!______________________________



2-10.  Methods of Use

Of all firing systems for explosives, a detonating cord firing system is
probably the most versatile and in many cases the most easily installed.
It is especially applicable for underwater and underground blasting
because the blasting cap of the initiating system may remain above the
water or ground.

   a. An electric system consisting of an electric blasting cap,
initiated by a blasting machine or other power source, or a nonelectric
blasting cap initiated by a fuse igniter and a length of time blasting
fuse, is used to detonate the cord.

   b. The blasting cap, electric or nonelectric, is attached to a point
6 inches from the free end of the detonating cord by numerous wraps of
string, wire, cloth, or tape.

2-11.  Detonating Cord Connections

A detonating cord clip (fig 1-33) or square knot pulled tight is used to
splice the ends of detonating cord.  At least a 6-inch length should be
left free at both sides of the knot (fig 2-10).  When fabric is used to
cover the detonating cord, the fabric must not be removed.  The knot may
be placed in water or in the ground but the cord must be detonated from
a dry end.

   a. BRANCH LINE CONNECTIONS.  A branch line is fastened to a main line
by means of a clip (fig 1-33) or a girth hitch with one extra turn (fig
2-11).  The angle formed by the branch line and the cap end of the main
line should not be less than 90 degrees from the direction from which
the blast is coming; at a smaller angle, the branch may be blown off the
main line without being detonated.  At least 6 inches of the running end
of the branch line is left free beyond the tie.

   b. RING MAIN. A ring main is made by bringing the main line back in
the form of a loop and attaching it to itself with a girth hitch with
one extra turn (fig 2-12).  This will detonate an almost unlimited
number of charges.  The ring main makes the detonation of all charges
more postitive because the detonating wave approaches the branch lines
from both directions and the charges will be detonated even when there
is one break in the ring main.  Branch line connections should be made
perpendicular to the ring main.  Kinks in lines should be avoided, and
curves and angles should not be sharp.  Any number of branch lines may
be connected to the ring main, but a branch line is never connected at
apoint where the ring main is spliced.  In making detonating cord branch
line connections, avoid crossing lines.  However, if this is necessary,
be sure to have at least one foot of clearance at all points between the
detonating cords; otherwise, the cords will cut each other and destroy
the firing system.

2-12.  Detonating Cord Misfires

   a. FAILURE OF NONELECTRIC BLASTING CAP.  If a nonelectric blasting
cap attached to detonating cord fails to function, delay the
investigation for at least 30 minutes.  Then cut the detonating cord
main line between the blasting cap and the charge, and fasten a new
blasting cap on the detonating cord.

   b. FAILURE OF ELECTRIC BLASTING CAP.  If an exposed electric blasting
cap fastened to detonating cord fails to fire, disconnect the blasting
machine immediately and investigate.  Test the blasting circuit for any
breaks or short circuit.  Short the firing wire leads before leaving
firing position to correct the problem.  If necessary, replace the
original blasting cap.

   c. FAILURE OF DETONATING CORD.  If detonating cord fails to function
at the explosion of an exposed electric or nonelectric blasting cap,
investigate immediately.  Attach a new blasting cap to the detonating
cord, taking care to fasten it properly.

   d. FAILURE OF BRANCH LINE.  If the detonating cord main line
detonates but a branch line fails, fasten a blasting cap to the branch
line and fire it seperately.

   e. FAILURE OF CHARGE TO EXPLODE.  If the charge is above ground, and
the detonating cord leading to a charge detonates but the charge fails
to explode, delay the investigation until it is certain that the charge
is not burning.  If the charge is intact, insert a new primer.  If the
charge is scattered by the detonation of the original charge as
possible, place a new charge if necessary, and reprime.  Make every
attempt possible to recover all explosives scattered by misfire,
particularly those used in training exercises.

                    Section IV.  DUAL FIRING SYSTEMS


2-13.  Introduction

There is always a certain amount of danger to personnel investigating
misfires.  Since dual priming increases greatly the probability of
successful, firing, it should be used whenever possible.  Dual priming
consists of two complete systems independent of each other, and each
capable of firing the same charge.  It can be two electric systems, two
nonelectric systems.  Or an electric and nonelectric system.

2-14.  Nonelectric Dual Firing Systems

This consists of two independent nonelectric systems for firing a single
charge or set of charges.  If two or more charges are to be fired
simultaneously, two detonating cord ring mains are laid out, and abranch
line from each charge is tied into each ring main.  Figure 2-13 shows
the layout for a nonelectric dual firing system.

2-15.  Electric Dual Firing System

This dual firing system consists of two independent electric circuits,
each with an electric blasting cap in each charge, so that the firing of
either circuit will detonate all charges.  The correct layout is shown
in figure 2-14.  The firing wires of the two circuits should be kept
separated so that both will not be cut by a single bullet or a single
shell fragment.  The firing points also should be at two separate
locations.

2-16.  Combination Dual Firing System

The combination dual firing system uses an electric and nonelectric
firing system (fig 2-15).  Each charge is primed electrically and
nonelectrically.  Both the electric and nonelectric systems must be
entirely independent of each other.  The nonelectric system must be
fired first.

                         Section V.  PRIMING CHARGES

2-17.  Introduction

This section will show nonelectric, electric, and detonating cord
methods of priming most basic explosives.  Certain terminology should be
clarified since it will appear frequently in this section.

   a. NONELECTRIC FIRING SYSTEM.  A nonelectric firing system consists
of a fuse igniter, a length of time blasting fuse, and a nonelectric
blasting cap.  (A, fig 2-16).

   b. ELECTRIC FIRING SYSTEM.  An electric firing system consists of a
blasting machine or some other means of producing current, the necessary
number of reels of firing wire, and electric blasting cap(s) (B, fig
2-16).

   c. DETONATING CORD.  Detonating cord can be used to fire several
charges simultaneously.  Charges in several locations can be detonated
by a single blasting cap wehn detonating cord ring mains are used and
the charges are primed with detonating cord (para 2-10 - 2-12).

2-18.  Priming Demolition Blocks

   a. NONELECTRIC PRIMING.  Demolition blocks may or may not have
threaded cap wells.  Priming adapters should be used, if available, to
secure the nonelectric blasting cap and time blasting fuse to demolition
blocks with threaded cap wells (fig 2-17, para 1-45 and 2-2).
      (1) If priming adapters are not available but the blocks have
threaded cap wells, they are primed as follows:(method 1, fig 2-18)
        (a) Wrap a string tightly around the block and tie it securely
leaving about 6 inches of loose string on each end after making the tie.
        (b) Insert a blasting cap with fuse attached into the cap well.
        (c) Tie the loose string around the fuse to prevent the blasting
cap from being separated from the block.
          Note. Do not tie the string so tight that powder train is
broken in the fuse.
      (2) If the demolition block does not have a cap well, proceed as
follows:
        (a) Make a hole in the end of the block with a pointed
nonsparking instrument or the pointed handle on the M2 crimpers large
enough to contain the blasting cap (method 2, fig 2-18).
        (b) Using string, wrap several turns around the explosive and
tie any knot.  Position the tie so it will be at the top of the hole
when the fused cap is inserted.
        (c) Insert fused cap into hole.
          Note. Never try to force a cap into an expedient cap well that
is too small to admit it easily.  Remove and enlarge hole.
        (d) Tie string around the time fuse at top of hole with two half
hitches.

   b. ELECTRIC PRIMING. Here again demolition blocks may or may not have
threaded cap wells.  If the blocks have threaded cap wells, priming
adapters should be used if available.  Proceed as follows:
      (1) Untwist the free ends of the lead wire and fasten them to the
firing wire (para 2-4).
      (2) Pass the lead wires through the slot of the adapter and pull
the cap into place in the adapter (fig 2-19).
      (3) Insert the cap into the capwell of the explosive and screw the
adapter into place.

   c. If a priming adapter is not available do the following:
      (1) If the block does not have a cap well, make one in the manner
described in paragraph 2-18a and figure 2-18.
      (2) Untwist the free ends of the lead wire and fasten them to the
firing wire.
      (3) Insert the electric cap into the cap well and tie the lead
wires around the block by two half hitches or a girth hitch (fig 2-20).
Allow some slack in the wires between the blasting cap and the tie to
prevent any pull on the blasting cap.

   d. DETONATING CORD PRIMING.  Demolition blocks may be primed with
detonating cord in several ways.
      (1) The method which offers the greatest assurance of detonation
is to affix a nonelectric blasting cap to the end of the detonating cord
and place it in the demolation block similar to nonelectric priming
methods (para 2-19a).  The system is then intitiated by a nonelectric or
electric assembly.
      (2) The common method (A, fig 2-21) lays one end of a 4-foot
length of detonating cord at an angle across the explosive.  The running
end is tehn given three wraps around the block and the end laid at an
angle.  On the fourth wrap, slip the running end under all wraps
parallel to the other end and draw tight.  Initiate by an electric or
nonelectric system.
      (3) Alternate method No. 1 is shown in B, figure 2-21.  Tie the
detonating cord around the explosive block (on top of the booster, if
present) with a clove hitch with two extra turns.  The cord must fit
snugly against the blocks and the loops must be pushed close together.
Use an electric or nonelectric firing system to initiate the charte.
      (4) Alternate method No. 2 places a loop of detonating cord on the
explosive with four wraps around the block and loop.  The running end is
pulled through the eye of the loop and tightened (C, fig 2-21).  This
method is also initiated by an electric or nonelectric system.
        Note. Alternate method No. 2 is more applicable to short than to
long detonation cord branch lines or primers.

2-19.  Composition C4 and C3 Demolition Blocks

   a. NONELECTRIC AND ELECTRIC PRIMING.  When ever whole blocks or
portions of blocks of plastic explosives (Composition C4 and C3) are
used, prime similarly to demolition blocks without cap wells (para
2-18).  Plastic explosives can be cut with a knife and then formed into
almost any shape.

   b. DETONATING CORD PRIMING.  To prime plastic explosives with
detonating cord, form either of the two knots shown in figure 2-22.
Then inser the knot into a block of explosive or a molded piece of
explosive as shown.  In either case, insure that there is at least 1/2
inch of explosive on all sides of the knot.

2-20.  Sheet Explosive (M118 and M186 Demolition Charges)

   a. NONELECTRIC AND ELECTRIC PRIMING.  M118 and M186 demolition
charges may be primed in the following ways:
      (1) Attach blasting cap holder M8 (para 1-46) to one end or side
of sheet explosive.  The blasting cap holder M8 (fig 1-25) is
self-securing to sheet explosive by means of three slanted, protruding
teeth which prevent withdrawl.  Two dimpled spring arms firmly hold the
blasting cap in the M8 holder (fig 2-23).
        Note. This holder is supplied in each M118 and M186 demolition
charge of recent manufacture.  It is also available as a separate item
of issue in quantities of 4,000.
      (2) Cut notch approximately 1.5-inches long and 1/4 inch wide in
sheet explosive and insert blasting cap to limit of notch; secure
blasting cap with string, tape or strip of sheet explosive (fig 2-23).
      (3) Place blasting cap on top of sheet explosive and sevure with a
strip of sheet explosive at least 3" x 3".
      (4) Insert end of blasting cap 1.5 inches between two sheets of
the explosive.

   b. DETONATING CORD PRIMING.  M118 and M186 demolition charge sheet
explosive may be primed with detonating cord by attaching a nonelectric
blasting cap to the end of the detonating cord and following the methods
outlined in A above.  The detonating cord is then attached to a
nonelectric or electric initiating system.

2-21.  Dynamite

Dynamite can be primed at either end or the side.  End priming is used
when a whole case is fired or when the charges pclaced require no
tamping.  Side priming is used when the charge is placed in a tamped
borehole to prevent damage to the prime during placement and tamping.

   a. NONELECTRIC PRIMING.
      (1) END PRIMING METHOD (A, fig 2-24).
        (a) Using the cap crimpers, make a cap well in the end of the
dynamite cartridge.
        (b) Insert a fused blasting cap.
        (c) Tie the cap and fuse securely in the cartridge with string.
      (2) WEATHERPROOF END PRIMING METHOD.  This method helps
weatherproof the primed charge (B, fig 2-24).
        (a) Unfold the wrapping at the folded end of the dynamite
cartridge.
        (b) Use the cap crimpers and make a cap well in the exposed
dynamite.
        (c) Insert a fused blasting cap into the cap well.
        (d) Close the wrapping around th fuse and fasted securely with
string or tape.
        (e) Apply weatherproof sealing compound to the tie.
      (3) SIDE PRIMING METHOD. (fig 2-25).
        (a) Use the cap crimpers and make a cap well about 1.5 inches
from one end of the dynamite cartridge.  Slant the cap well so that the
blasting cap, when insterted, will be nearly parallel with the side of
the cartridge and the explosive end of the cap will be at a point at
about the middle of the cartridge.
        (b) Insert a fused blasting cap into the hole.
        (c) Tie a string securely around the fuse and then wrap it
tightly around the cartridge making two or three turns before tying it.
        (d) The primed cartridge may be weatherproofed by wrapping a
string closely around the cartridge, extending it an inch or so on each
side of the hold to cover it completely.  Then cover the string with
weatherproof sealing compound.

   b. ELECTRIC PRIMING.
      (1) END PRIMING METHOD (A, fig 2-26).
        (a) Use the cap crimpers and make a cap well in the end of the
cartridge and insert an electric blasting cap as shown in a(1) above.
        (b) Tie the lead wires around the cartridge with two half
hitches or a girth hitch.
      (2) SIDE PRIMING METHOD (B, fig 2-26).
        (a) Make a cap well in the side of the cartridge and insert an
electric blasting cap as outlined a(3) above.
        (b) Tie the lead wire around the cartridge with a girth hitch or
two half hitches or fasten with string or tape.

   c. DETONATING CORD PRIMING.  Dynamite cartridges may be primed with
detonating cord by attaching a nonelectric blasting cap to the end of
the detonating cord and following any of the methods for nonelectric
priming outlined in A above.  Dynamite may also be primed by lacing the
detonating cord through it.  This is used chiefly in boreholes,
ditching, or removal of stumps.  Punch four equally-spaced holes through
the dynamite cartridge and lace the detonating cord through them as
shown in figure 2-27.

2-22.  40-Pound Ammonium Nitrate Cratering Charge

   a. NONELECTRIC PRIMING (fig, 2-28).
      (1) Place a fused nonelectric blasting cap in the cap well on the
side of the container.
      (2) Tie a string around the fuse and then around the cleat above
the cap well.
      (3) Dual prime as outlined in D below.

   b. ELECTRIC PRIMING. (fig 2-28).
      (1) Place an electric blasting cap in the cap well on the side of
the container.
      (2) Tie the lead wires around the cleat above the cap well.
      (3) Dual prime as outlined in D below.

   c. DETONATING CORD PRIMING (A, fig 2-29).
      (1) Pass the end of the detonating cord through the tunnel on the
side of the can.
      (2) Tie an overhand knot on the portion passed through at least
6-inches from the end.
      (3) Dual prime as outlined in D below.

   d. DUAL PRIMING (B, fig 2-29).  To insure positive detonation of the
ammonium nitrate cratering charge all charges should be dual primed with
a 1-pound brick of explosive taped to the side of the charge near the
cap well or detonating cord tunnel to detonate the TNT booster in the
center of the charge.  This demolition block may be primed by the same
method the cratering charge is primed.  Both charges should be primed to
detonate simultaneously.

   e. PRECAUTIONS. As ammonium nitrate is hygroscopic and becomes
ineffective if it has absorbed moisture (para 1-33), the metal container
must be carefully inspected for damage or rusting that would indicate
that the ammonium nitrate had absorbed moisture.  Damaged or rusted
charges should not be used.  For safety in priming use detonating cord
whenever charges are placed underground.

2-23.  Shaped Charges

   a. NONELECTRIC AND ELECTRIC PRIMING.  The M2A3, M2A4, M3 and M3A1
shaped charges have a threaded cap well at the top of the rear cone.
They may be primed by means of a blasting cap and priming adapter as
shown in figure 2-30.  If a priming adapter is not available, the primer
may be held in the cap well with string, piece of cloth or tape.

   b. DETONATING CORD PRIMING.  Shaped charges are primed with
detonating cord by attaching a nonelectric blasting cap to the end of
the detonating cord and following the procedure in A above.

   c. DUAL-PRIMING.  As shaped charges must be detonated from the center
of the rear of the cone for maximum effectiveness, conventional methods
of dual priming are not applicable to shaped charges.

2-24.  Bangalore Torpedo

   a. NONELECTRIC PRIMING.  The bangalore torpedo may be primed by
assembling alength of time blasting fuse and a nonelectric blasting cap
in a priming adapter and screwing the assembly into the cap well of a
torpedo section (A, fig 2-31).  A section may also be primed
nonelectrically by a pull type firing device, with a nonelectric
blasting cap crimped on the base, screwed into the cap well (B, 2-31).

   b. ELECTRIC PRIMING. The bangalore torpedo may be primed electrically
by assembling a blasting cap and priming adapter and screwing the
assembly into the cap well of a torpedo section (C, fig 2-31).


                              CHAPTER 3

                CALCULATION AND PLACEMENT OF CHARGES


                      Section I.  INTRODUCTION

3-1.  Critical Factors in Charge Calculations

The amount of explosive used in any demolition project is determined by
formula calculations based on the critical factors listed below.

   a. TYPE AND STRENGTH OF MATERIAL.  A demolition target may be
constructed of timber, steel, concrete or some other material.
Concrete may reinforced with steel thereby increasing its strength.
Formulas for computing specific charges for timber, steel, concrete, and
so on, are given in succeeding sections of this chapter.

   b. SIZE AND SHAPE OF TARGET.  Consideration must be given to the size
and shape of the target.  For example, large targets, such as concreter
piers, and oddly shaped targets, such as steel I-beams, may be more
economically attacked by multiple charges than a single charge.

   c. DESIRED DEMOLITION EFFECT.  The extent of demolition desired and
other effects, such as direction of falling trees to construct an
abatis, must be considered.

   d. TYPE OF EXPLOSIVE.  The particular characteristics of each type of
explosive make it applicable to certain demolition projects, in
preference to others.  The relative effectiveness of each type of
explosive must be considered in each formula calculation.  Explosive
Charges used in military operation and their relative effectiveness
factors are shown in table 1-2.

   e. SIZE AND SHAPE OF CHARGE.  The amount of explosive is calculated
by each demolition formula, but, in the absence of special placement
techniques, when external charges are used, a flat square charge with a
thickness to width ratio of 1 to 3 or more will give acceptable results.
In general, charges less than 5 pounds should be 1 inch thick (one M112
demolition block; charges 5 pounds to 40 pounds should be 2 inches thick
(one M5A1 demolition block); and charges 40 pounds or more should be 4
inches thick (one M-183 demolition assembly).  A more detailed
discussion of charge thickness is found in paragraph 3-2b.

   f. CHARGE PLACEMENT.
      (1) Charges should be placed at the position that will provide
maximum effectiveness.  For cratering, they are place in holes in the
ground; for breaking or collapsing stone or concrete, they are properly
located on the surface or in boreholes; for cutting timber they may be
tied on the outside or placed in boreholes, whichever is the more
practical.
      (2) Charges are fastened to the target by wire, adhesive compound,
tape, or string; propped against the target by means of a wooden or
metal frame made of scrap or other available materials; or placed in
boreholes.  Special accessories are issued for this purpose--adhesive
compound, the rivet-punching powder-actuated driver, the earth auger,
and pneumatic tools (para 1-58).

   g. METHOD OF INITIATION.  Generally the method of initiation is not
critical unless the demolition charge is of a special type such as a
shaped charge or diamond charge.

   h. TAMPING.  The detonation of an explosive produces pressure in all
directions.  If the charge is not completely sealed in or confined or if
the material surrounding the explosive is not equally strong on all
sides, the explosive force breaks through the weakest spot and part of
the destructive force is lost.  To retain as much of this explosive
force as possible, material is packed around the charge.  This material
is called tamping material or tamping, and the process, tamping.  On the
other hand, an internal charge (one placed in the target to be
destroyed) is confined by packing material in the borehole on top of the
charge as is done in quarrying and cratering.  This is called stemming.

3-2.  Principles of Demolition

   a.  EFFECTS OF DETONATION.  When a high explosive detonates, the
explosive changes violently into compressed gas at extremely high
pressure.  The rate of change is determined among other things by the
type of explosive and the density, confinement, and dimensions of the
charge.  Thus the detonation releases tremendous pressure in the form of
a compressive shock wave which, although it exist for only a few
micro-seconds at any given point, may shatter and displace objects in
its path as it proceeds from its point of origin.  This shock wave is
transmitted directly to any substance in contact with the charge, other
characteristics being equal.  A high explosive charge detonated in
direct contact with a solid object produces three different easily
detectable destructive effects.
      (1) CRATERING.  The surface of the object directly under the
explosive charge will be cratered.  On a concrete surface the high
pressure of the compressive shock wave crumbles that material in the
immediate vicinity of the charge, forming the crater.  On a steel target
an indentation or depression with an are about the size of the contact
area of the charge is made in the surface of the plate.
      (2) SPALLING.  Providing that the charge is of sufficient size,
the opposite side of the object will be spalled.  The strong compressive
shock wave transmitted into the material expands spherically losing
energy as it moves through the material.  If the target has a free
surface on the side opposite the charge, the compressive shock wave will
be reflected as a tensile shock wave from that free surface because of
the difference in density between the target and the air.  Reflection of
the compressive shock wave as a tensile shock wave causes spalling of
the target free surface, wherein a portion of the material is literally
torn from the free surface.  On a concrete wall, depending upon the
relative size of the charge and thickness of the wall, the crater and
spalls meet and form a hole through the wall.  On a steel plate, usually
only one spall, approximately the shape of the explosive charge, is
thrown from the plate.
      (3) CRACKING.  If the explosive charge is of sufficient size the
high pressure gases from the explosive charge will create a pressure
load on the object that will crack and displace the material beyond the
extent of the crater and spall.  These cracks will radiate from the
charge position.  On concrete walls, this craking may be extensive
enough to break the wall into a large number of chunks which are
projected away from the charge position.  On steel plates, the material
may be bent away from the charge position.

   b. SIGNIFICANCE OF CHARGE DIMENSIONS.  The force of an explosion is
proportional to the quantity and power of the explosive, but the
destructitve effect depends, in part, on the manner that the explosive
force is directed at the target.  An optimum relation must exist between
the area of the charge in contact with the target and charge thickness
in order to transmit the greatest shock.  If any given wight of
explosive, calculated to cut a given target, is spread too thinly, there
will be insufficient space for the shock wave to attain full velocity
before striking the target.  The shock wave will tend to travel more
nearly parallel than normal to the surface over much of the area, and
the volume of the target will be excessive for the strength of the shock
wave.  On the other extreme, a thick charge with a small contact area
will transmit the shock wave over too little of the target with
excessive lateral loss of energy.  Test results have demonstrated that
the optimum ratio of charge thickness to charge width is about 1:3 for
contact steel cutting charges on structural steel 3 inches or less, and
ranges from about 1:6 to 1:14 for rectangualar external untamped
breaching charges for reinforced concrete from 1 to 7 feet thick.

   c. SIGNIFICANCE OF CHARGE PLACEMENT.  The destructive effect of an
explosive charge is also dependent upon the contact between the
explosive and the target and the location of the charge in relation to
target size and shape.
      (1) For the maximum destructive effect an explosive charge with a
configuration and deimensions optimum for the size and shape of the
target must be detonated in intimate contact with the target.  Any
significant air or water gap between the target and the explosive will
not transmit the complete force of the shock wave into the target.
Certain explosives, such as sheet explosive or plastic explosives, are
more desirable for certain targets because they may be cut or molded to
fit odd shaped targets.
      (2) Explosive charges are placed to act through the least
dimension of the target whenever possible.  In terms of the maximum
destructive effect for the least amount of explosive, internal charges
are the best.  The tamping of external charges increases their
destructive effect.

3-3.  Types of Charges

   a. INTERNAL CHARGES.  Internal charges are charges placed in
boreholes in the target.  These are confined by tightly packing sand,
wet clay, or other material (stemming) into the opening.  This is tamped
and packed against the explosive to fill the hole all the way to the
surface.  In drill holes, the explosive (usually dynamite) is tamped as
it is loaded into the hole.  Refer to TM 5-332 for details of quarry
practice.

   b. EXTERNAL CHARGES.  These charges are placed on the surface of the
target.  They are tamped by covering them with tightly packed sand, clay
or other dense material.  Tamping may be in sandbags or loose.  For
maximum effectiveness the thickness of the tamping should at least equal
the breaching radius.  Small breaching charges on horizontal surfaces
are sometimes tamped by packing several inches of wet clay or mud around
them.  This process is called mudcapping.

3-4.  Charge Selection and Calculation

   a. CHARGE SELECTION.  The selection of the optimum explosive charge
for successful demolition operations is a balance between the important
factors listed above and the practical aspects of the type of target,
the type and amount of explosives available, the amount and type of
material (such as sandbags) and equipment available, the amount of
manpower available, and, probably most important, the time available to
accomplish the mission.  Formulas for computing specific charges and
methods of their placement are given below.  Formulas based on metric
measurements are given in appendix B.

   b. CHARGE CALCULATION.  The formulas in this chapter give the weight
of explosive required for a demolition task P in pounds of TNT.  If
explosives other than TNT are used, the value of P must be adjusted
according to the strength of these other explosives.  The adjusted value
of P corrected weight of explosive required, is computed by dividing the
P value of TNT by the relative effectiveness factor for the explosive
to be used.

   c. ROUNDING OFF RULE.  When using explosives, NEVER use less than the
calculated amount.  Some explosives like plastic explosive (C4) and
sheet explosive (M118 and M186) can be cut to the desired amount, while
with other explosives the ability to size explosives is limited.  For
charges calculated by formula, use the following rounding off method:
      (1) Claculate the weight of a single charge for TNT using the
selected demolition formula to at least two decimals.
      (2) Divide by the relative effectiveness factor, if required.
      (3) Round up answer for single charge to next package size.
      (4) Multiply answer for single charge by the number of charges to
obtain the total amount of explosive required.

                    Section II.   TIMBER-CUTTING CHARGES

3-5.  Size and Placement of Charge

   a. TYPE OF EXPLOSIVE USED.  For tamped internal charges in boreholes,
dynamite is generally used, as it is the most convenient to place
because of the size of the cartridge and is powerful enough because it
is confined.  For untamped concentrated external charges, block
explosive (TNT, Tetrytol, and Composition C4) is used, as it is easily
tied or fastened on its effectiveness in relation to that of TNT
(relative effectiveness factor).  For untamped external ring charges,
plastic explosive (Composition C4) or sheet explosive (M118 or M186) is
used, as it is easily fastened to the target and molded around the
target.  It is impractical to attempt to cut all kinds of timber with
charges of a size calculated from a single formula.  THere is too much
variation in different kinds of timber from locality to locality.
Accordingly, test shots must be made to determine the size of the charge
to cut a specific type of timber.  Formulas for the calculation of these
test shots are provided for tamped internal charges, and untamped
external charges.  They are as follows:

   b. FORMULA FOR TAMPED INTERNAL CHARGES.  Tamped internal cutting
charges may be calculated by the following formula:
       P = Dı/250 or P = .004 Dı where,
       P = Pounds of TNT required,
       D = diameter or least dimension of dressed timber, in inches, and
       1/250 = .004 = constant
   The amount of explosive required to cut a 15-inch diameter tree,
using tamped internal charges is determined as follows:
       P = Dı/250 = 225/250 = .9 of 1 pound of TNT
    Note.  See rounding off rule, paragraph 3-4c.

   c. INTERNAL CHARGE PLACEMENT.  The charge is placed in a borehole
parallel to the greatest dimension of cross section and tightly tamped
with moist earth.  If the charge is too large to be placed in one
borehole, bore two holes side by side in dimensional timber.  On round
timber, bore two holes at approximately right angles to each other, but
do not intersect (fig 3-1).  Both boreholes are tamped and the charges
are fired simultaneously.

   d. FORMULA FOR UNTAMPED EXTERNAL CHARGES.  For cutting trees, piles,
posts, beams or other timber members using explosives as an untamped
external charge, the following formula is used:
       P =  Dı/40 or P = .025 Dı where,
       P = pounds of TNT required,
       D = diameter of round timber, or least dimension of dressed
       timber, in inches, and
       1/40 = .025 = constant.
Adjustment for explosive other than TNT will be made by dividing by the
relative effectiveness factor (table 1-2) that pertains to the
particular explosive being used.  The amount of explosive required to
cut a round timber 30 inches in diameter using an untamped external
charge is determined as follows:
       P = Dı/40
       P = (30)ı/40 = 900/40 = 22.50 pounds of TNT.

   e. CONCENTRATED EXTERNAL CHARGE PLACEMENT.  For maximum destructive
effect concentrated charges should be of rectangular configuration, 1 to
2 inches thick and approximately twice as wide as they are high.
Charges are placed as close as possible to the surface of the timber
(fig 3-2).  Frequently it is desirable to notch the tree or timber to
hold the explosive in place.  If the tree or timber is not round and the
direction of fall is of no concern, the explosive is placed on the
widest face so that the cut will be through the least thickness.  The
tree will fall toward the side where the explosive is placed, unless
influenced by lean or wind.  Charges on rectangular or square dressed
timber are placed as shown in figure 3-3.

   f. RING CHARGE PLACEMENT.  The ring charge (fig 3-4) is placed as a
band of explosive completely circling the tree.  The width of the
explosive band should be as wide as possible, and a minimum of 1/2 inch
thick for small diameter trees, and 1 inch thick for medium- and large-
diameter trees up to 30 inches.  This technique is used when the
direction of fall is not important and the elimination of stumps is
important, e.g., explosive clearing for a helicopter landing zone.  The
amount of explosive is calculated by the external charge formula.

3-6.  Abatis

   a. FORMULA FOR PARTIALLY CUTTING TREES TO CREATE AN OBSTACLE OR
ABATIS.  When cutting trees and leaving them attached to the stumps to
create an obstacle, the formula P = Dı/ro or P = .02Dı is used to
compute the amount of TNT required for the test shot.  The result of the
test shot will determine the need for increasing or decreasing the
amount of explosives required for subsequent shots.

   b. PLACEMENT OF ABATIS CHARGE.  Charges for making fallen-tree
obstacles are placed as a concentrated external charge the same as in
paragraph 3-5c, except that they are placed approximately 5 feet above
ground level.  The tree will fall toward the side where the explosive is
placed, unless influenced by lean or wind.  To make the direction of
fall more certain, a "kicker charge", a one pound block of explosive,
placed about two-thirds of the distance up the tree on the opposite side
may be used (fig 3-2).

   c. SPECIAL CONSIDERATIONS.  To be effective these obstacles should be
at least 75 meters in depth and the felled trees should extend at a 45
degree angle toward the enemy.  The trees on one side of the road should
not be cut simultaneously, followed by the cutting of the trees on the
other side of the road.  Delayed blasting of the second row of trees is
necessary to provide time for the trees in the first row to fall and
thereby eliminate the possibility of trees deflecting one another from
their desired direction of fall.  Likewise, in selection of trees to
blast for abatis obstacles, the trees in a row should be selected
spacing great enough to allow the trees to fall without interference
from other falling trees in the same row.  To make the obstacles more
difficult to remove, they should be mined, boobytrapped, entangled with
barbed wire or concertina, and covered by fire.

=============================================================================

                      /         File 8 / NIA068          /
                      /     Comments From The Editors    /
                      /  Guardian Of Time & Judge Dredd  /

  Hello, with HoHoCon (XmasCon) '90 around the corner we hope to meet most
of you all there.
  Some of our requests for subscriptions have been lost due to system failure.
If you did not get this issue of NIA through the Internet and did send us mail
to be on the list please re-do so.  Also, if you wish to subscribe to NIA
through the Internet (or most any WAN) leave mail at elisem@nuchat.sccsi.com,
thanks.
  We are currently looking for submissions, if you do have a piece that you
would like to see printed in upcoming NIA issues, mail us at Face2Face or
elisem@nuchcat.sccsi.com
  You might have noticed the TIME-TRIP portion of the file, that we will do
occasionally to bring back memories...
  Any back issues can be picked up from the CuD ftp site or from Face2Face
BBS.  If these two ways are NOT possible, then write to us.
  Look for the new Phrack soon, from our insight on the pieces in it, it looks
like a gem.
  To get your name off the Lotus marketplace database, call 1.800.343.5414,
when you hear the voice mail, press 3, then press 2.  Wait till the person
answers and give your name and address.
  EFF newsletter one came out and it is pretty good, take a look at it.
  If you have any questions or comments, please make them, and send in feedback
on this new format of NIA.  Thank You.
  Issues of NIA can be gotten off of Face2Face (Refer: 713.242.6853),
CuD ftp archives (Refer: CuD 2.15) or Unholy Temple (Refer: 408.PRI.VATE),
and other boards around the country.
  From GOT "Get to know yourself, if you can't, call the FBI!"
  Oh, and just remember: "No matter how *good* looking she is
                          someone
                          somewhere
                          is sick of her shit."
GOT & JD
NIA. Ignorance, There's No Excuse.
=============================================================================
