<HTML>

<title>The Jargon File - Section v</title>
<h1>The Jargon File</h1><hr><a href=jargon.htm>The Jargon File</a><br>
<a href=intro.htm>Introduction</a><br>
<a href=howwork.htm>How Jargon Works</a><br>
<a href=howuse.htm>How to Use the Lexicon</a><p>
<a href=a.htm>A</a>   <a href=b.htm>B</a>   <a href=c.htm>C</a>   <a href=d.htm>D</a>   <a href=e.htm>E</a>
<a href=f.htm>F</a>   <a href=g.htm>G</a>   <a href=h.htm>H</a>   <a href=i.htm>I</a>   <a href=j.htm>J</a>
<a href=k.htm>K</a>   <a href=l.htm>L</a>   <a href=m.htm>M</a>   <a href=n.htm>N</a>   <a href=o.htm>O</a>
<a href=p.htm>P</a>   <a href=q.htm>Q</a>   <a href=r.htm>R</a>   <a href=s.htm>S</a>   <a href=t.htm>T</a>
<a href=u.htm>U</a>   <a href=v.htm>V</a>   <a href=w.htm>W</a>   <a href=x.htm>X</a>   <a href=y.htm>Y</a>
<a href=z.htm>Z</a>   <a href=notaz.htm>[^a-zA-Z]</a><p>
<a href=appa.htm>Appendix A</a> --- 
<a href=appb.htm>Appendix B</a> --- 
<a href=appc.htm>Appendix C</a>
<h1><a name="v7">V7</a></h1><pre> n.  See <a href="v.htm#version_7">Version_7</a>.

</pre><p>
<h1><a name="vadding">vadding</a></h1><pre> /vad'ing/ n.  [from VAD, a permutation of ADV
   (i.e., <a href="a.htm#advent">ADVENT</a>), used to avoid a particular <a href="a.htm#admin">admin</a>'s
   continual search-and-destroy sweeps for the game] A leisure-time
   activity of certain hackers involving the covert exploration of the
   `secret' parts of large buildings -- basements, roofs, freight
   elevators, maintenance crawlways, steam tunnels, and the like.  A
   few go so far as to learn locksmithing in order to synthesize
   vadding keys.  The verb is `to vad' (compare <a href="p.htm#phreaking">phreaking</a>; see
   also <a href="h.htm#hack">hack</a>, sense 9).  This term dates from the late 1970s,
   before which such activity was simply called `hacking'; the older
   usage is still prevalent at MIT.

   The most extreme and dangerous form of vadding is `elevator
   rodeo', a.k.a. `elevator surfing', a sport played by wrasslin'
   down a thousand-pound elevator car with a 3-foot piece of
   string, and then exploiting this mastery in various stimulating
   ways (such as elevator hopping, shaft exploration, rat-racing, and
   the ever-popular drop experiments).  Kids, don't try this at home!
   See also <a href="h.htm#hobbit">hobbit</a> (sense 2).

</pre><p>
<h1><a name="vanilla">vanilla</a></h1><pre> adj.  [from the default flavor of ice cream in the
   U.S.]  Ordinary <a href="f.htm#flavor">flavor</a>, standard.  When used of food, very
   often does not mean that the food is flavored with vanilla extract!
   For example, `vanilla wonton soup' means ordinary wonton soup, as
   opposed to hot-and-sour wonton soup.  Applied to hardware and
   software, as in "Vanilla Version 7 UNIX can't run on a vanilla
   11/34."  Also used to orthogonalize chip nomenclature; for
   instance, a 74V00 means what TI calls a 7400, as distinct from a
   74LS00, etc.  This word differs from <a href="c.htm#canonical">canonical</a> in that the
   latter means `default', whereas vanilla simply means
   `ordinary'.  For example, when hackers go on a <a href="g.htm#great-wall">great-wall</a>,
   hot-and-sour soup is the <a href="c.htm#canonical">canonical</a> soup to get (because that
   is what most of them usually order) even though it isn't the
   vanilla (wonton) soup.

</pre><p>
<h1><a name="vannevar">vannevar</a></h1><pre> /van'*-var/ n.  A bogus technological prediction
   or a foredoomed engineering concept, esp. one that fails by
   implicitly assuming that technologies develop linearly,
   incrementally, and in isolation from one another when in fact the
   learning curve tends to be highly nonlinear, revolutions are
   common, and competition is the rule.  The prototype was Vannevar
   Bush's prediction of `electronic brains' the size of the Empire
   State Building with a Niagara-Falls-equivalent cooling system for
   their tubes and relays, a prediction made at a time when the
   semiconductor effect had already been demonstrated.  Other famous
   vannevars have included magnetic-bubble memory, LISP machines,
   <a href="v.htm#videotex">videotex</a>, and a paper from the late 1970s that computed a
   purported ultimate limit on areal density for ICs that was in fact
   less than the routine densities of 5 years later.

</pre><p>
<h1><a name="vaporware">vaporware</a></h1><pre> /vay'pr-weir/ n.  Products announced far in
   advance of any release (which may or may not actually take place).
   See also <a href="b.htm#brochureware">brochureware</a>.

</pre><p>
<h1><a name="var">var</a></h1><pre> /veir/ or /var/ n.  Short for `variable'.
   Compare <a href="a.htm#arg">arg</a>, <a href="p.htm#param">param</a>.

</pre><p>
<h1><a name="vax">VAX</a></h1><pre> /vaks/ n.  1. [from Virtual Address eXtension] The
   most successful minicomputer design in industry history, possibly
   excepting its immediate ancestor, the PDP-11.  Between its release
   in 1978 and its eclipse by <a href="k.htm#killer_micro">killer_micro</a>s after about 1986, the
   VAX was probably the hacker's favorite machine of them all, esp.
   after the 1982 release of 4.2 BSD UNIX (see <a href="b.htm#bsd">BSD</a>).  Esp.
   noted for its large, assembler-programmer-friendly instruction set
   -- an asset that became a liability after the RISC revolution.
   2. A major brand of vacuum cleaner in Britain.  Cited here because
   its alleged sales pitch, "Nothing sucks like a VAX!" became a
   sort of battle-cry of RISC partisans.  It is even sometimes claimed
   that DEC actually entered a cross-licensing deal with the
   vacuum-Vax people that allowed them to market VAX computers in the
   U.K. in return for not challenging the vacuum cleaner trademark in
   the U.S.

   It is sometimes claimed that this slogan was *not* actually
   used by the Vax vacuum-cleaner people, but was actually that of a
   rival brand called Electrolux (as in "Nothing sucks
   like...").  It has been reliably confirmed that Electrolux (a
   Swedish company) actually did use this slogan in the late 1960s; it
   has apparently become a classic example (used in textbooks) of the
   perils of not knowing the local idiom.

   It appears, however, that the Vax people thought the slogan a
   sufficiently good idea to copy it.  Several British hackers report
   that their promotions used it in 1986--1987, and we have one report
   from a New Zealander that the infamous slogan surfaced there in TV
   ads for the product as recently as 1992!

</pre><p>
<h1><a name="vaxectomy">VAXectomy</a></h1><pre> /vak-sek't*-mee/ n.  [by analogy with
   `vasectomy'] A VAX removal.  DEC's Microvaxen, especially, are
   much slower than newer RISC-based workstations such as the SPARC.
   Thus, if one knows one has a replacement coming, VAX removal can be
   cause for celebration.

</pre><p>
<h1><a name="vaxen">VAXen</a></h1><pre> /vak'sn/ n.  [from `oxen', perhaps influenced by
   `vixen'] (alt. `vaxen') The plural canonically used among
   hackers for the DEC VAX computers.  "Our installation has four
   PDP-10s and twenty vaxen."  See <a href="b.htm#boxen">boxen</a>.

</pre><p>
<h1><a name="vaxherd">vaxherd</a></h1><pre> n.  /vaks'herd/ [from `oxherd'] A VAX operator.

</pre><p>
<h1><a name="vaxism">vaxism</a></h1><pre> /vak'sizm/ n.  A piece of code that exhibits
   <a href="v.htm#vaxocentrism">vaxocentrism</a> in critical areas.  Compare <a href="p.htm#pc-ism">PC-ism</a>,
   <a href="u.htm#unixism">unixism</a>.

</pre><p>
<h1><a name="vaxocentrism">vaxocentrism</a></h1><pre> /vak`soh-sen'trizm/ n.  [analogy with
   `ethnocentrism'] A notional disease said to afflict C programmers
   who persist in coding according to certain assumptions that are
   valid (esp. under UNIX) on <a href="v.htm#vaxen">VAXen</a> but false elsewhere. Among
   these are:

  1. The assumption that dereferencing a null pointer is safe because
     it is all bits 0, and location 0 is readable and 0.  Problem:
     this may instead cause an illegal-address trap on non-VAXen, and
     even on VAXen under OSes other than BSD UNIX.  Usually this is an
     implicit assumption of sloppy code (forgetting to check the
     pointer before using it), rather than deliberate exploitation of
     a misfeature.

  2. The assumption that characters are signed.

  3. The assumption that a pointer to any one type can freely be cast
     into a pointer to any other type.  A stronger form of this is the
     assumption that all pointers are the same size and format, which
     means you don't have to worry about getting the casts or types
     correct in calls.  Problem: this fails on word-oriented machines
     or others with multiple pointer formats.

  4. The assumption that the parameters of a routine are stored in
     memory, on a stack, contiguously, and in strictly ascending or
     descending order.  Problem: this fails on many RISC
     architectures.

  5. The assumption that pointer and integer types are the same size,
     and that pointers can be stuffed into integer variables (and
     vice-versa) and drawn back out without being truncated or
     mangled.  Problem: this fails on segmented architectures or
     word-oriented machines with funny pointer formats.

  6. The assumption that a data type of any size may begin at any byte
     address in memory (for example, that you can freely construct and
     dereference a pointer to a word- or greater-sized object at an
     odd char address).  Problem: this fails on many (esp. RISC)
     architectures better optimized for <a href="h.htm#hll">HLL</a> execution speed, and can
     cause an illegal address fault or bus error.

  7. The (related) assumption that there is no padding at the end of
     types and that in an array you can thus step right from the last
     byte of a previous component to the first byte of the next one.
     This is not only machine- but compiler-dependent.

  8. The assumption that memory address space is globally flat and
     that the array reference `foo[-1]' is necessarily valid.
     Problem: this fails at 0, or other places on segment-addressed
     machines like Intel chips (yes, segmentation is universally
     considered a <a href="b.htm#brain-damaged">brain-damaged</a> way to design machines (see <a href="m.htm#moby">moby</a>),
     but that is a separate issue).

  9. The assumption that objects can be arbitrarily large with no
     special considerations.  Problem: this fails on segmented
     architectures and under non-virtual-addressing environments.

 10. The assumption that the stack can be as large as memory.
     Problem: this fails on segmented architectures or almost anything
     else without virtual addressing and a paged stack.

 11. The assumption that bits and addressable units within an object
     are ordered in the same way and that this order is a constant of
     nature.  Problem: this fails on <a href="b.htm#big-endian">big-endian</a> machines.

 12. The assumption that it is meaningful to compare pointers to
     different objects not located within the same array, or to
     objects of different types.  Problem: the former fails on
     segmented architectures, the latter on word-oriented machines or
     others with multiple pointer formats.

 13. The assumption that an `int' is 32 bits, or (nearly equivalently)
     the assumption that `sizeof(int) == sizeof(long)'.  Problem: this
     fails on PDP-11s, 286-based systems and even on 386 and 68000
     systems under some compilers.

 14. The assumption that `argv[]' is writable.  Problem: this fails in
     many embedded-systems C environments and even under a few flavors
     of UNIX.

   Note that a programmer can validly be accused of vaxocentrism
   even if he or she has never seen a VAX.  Some of these assumptions
   (esp. 2--5) were valid on the PDP-11, the original C machine, and
   became endemic years before the VAX.  The terms `vaxocentricity'
   and `all-the-world's-a-VAX syndrome' have been used synonymously.

</pre><p>
<h1><a name="vdiff">vdiff</a></h1><pre> /vee'dif/ v.,n.  Visual diff.  The operation of
   finding differences between two files by <a href="e.htm#eyeball_search">eyeball_search</a>.  The
   term `optical diff' has also been reported, and is sometimes more
   specifically used for the act of superimposing two nearly identical
   printouts on one another and holding them up to a light to spot
   differences.  Though this method is poor for detecting omissions in
   the `rear' file, it can also be used with printouts of graphics, a
   claim few if any diff programs can make.  See <a href="d.htm#diff">diff</a>.

</pre><p>
<h1><a name="veeblefester">veeblefester</a></h1><pre> /vee'b*l-fes`tr/ n.  [from the "Born
   Loser" comix via Commodore; prob. originally from "Mad"
   Magazine's `Veeblefeetzer' parodies ca. 1960] Any obnoxious person
   engaged in the (alleged) professions of marketing or management.
   Antonym of <a href="h.htm#hacker">hacker</a>.  Compare <a href="s.htm#suit">suit</a>, <a href="m.htm#marketroid">marketroid</a>.

</pre><p>
<h1><a name="ventilator_card">ventilator card</a></h1><pre> n.  Syn. <a href="l.htm#lace_card">lace_card</a>.

</pre><p>
<h1><a name="venus_flytrap">Venus flytrap</a></h1><pre> n.  [after the insect-eating plant] See
   <a href="f.htm#firewall_machine">firewall_machine</a>.

</pre><p>
<h1><a name="verbage">verbage</a></h1><pre> /ver'b*j/ n.  A deliberate misspelling and
   mispronunciation of <a href="v.htm#verbiage">verbiage</a> that assimilates it to the word
   `garbage'.  Compare <a href="c.htm#content-free">content-free</a>.  More pejorative than
   `verbiage'.

</pre><p>
<h1><a name="verbiage">verbiage</a></h1><pre> n.  When the context involves a software or
   hardware system, this refers to <a href="d.htm#documentation">documentation</a>.  This term
   borrows the connotations of mainstream `verbiage' to suggest that
   the documentation is of marginal utility and that the motives
   behind its production have little to do with the ostensible
   subject.

</pre><p>
<h1><a name="version_7">Version 7</a></h1><pre> alt. V7 /vee' se'vn/ n.  The first widely
   distributed version of <a href="u.htm#unix">UNIX</a>, released unsupported by Bell Labs
   in 1978.  The term is used adjectivally to describe UNIX features
   and programs that date from that release, and are thus guaranteed
   to be present and portable in all UNIX versions (this was the
   standard gauge of portability before the POSIX and IEEE 1003
   standards).  Note that this usage does *not* derive from the
   release being the "seventh version of <a href="u.htm#unix">UNIX</a>"; research
   <a href="u.htm#unix">UNIX</a> at Bell Labs has traditionally been numbered according to
   the edition of the associated documentation.  Indeed, only the
   widely-distributed Sixth and Seventh Editions are widely known as
   V[67]; the OS that might today be known as `V10' is instead known
   in full as "Tenth Edition Research Unix" or just "Tenth
   Edition" for short.  For this reason, "V7" is often read by
   cognoscenti as "Seventh Edition".  See <a href="b.htm#bsd">BSD</a>, <a href="u.htm#usg_unix">USG_UNIX</a>,
   <a href="u.htm#unix">UNIX</a>.  Some old-timers impatient with commercialization and
   kernel bloat still maintain that V7 was the Last True UNIX.

</pre><p>
<h1><a name="vgrep">vgrep</a></h1><pre> /vee'grep/ v.,n.  Visual grep.  The operation of
   finding patterns in a file optically rather than digitally (also
   called an `optical grep').  See <a href="g.htm#grep">grep</a>; compare <a href="v.htm#vdiff">vdiff</a>.

</pre><p>
<h1><a name="vi">vi</a></h1><pre> /V-I/, *not* /vi:/ and *never* /siks/ n. 
   [from `Visual Interface'] A screen editor crufted together by Bill
   Joy for an early <a href="b.htm#bsd">BSD</a> release.  Became the de facto
   standard UNIX editor and a nearly undisputed hacker favorite
   outside of MIT until the rise of <a href="e.htm#emacs">EMACS</a> after about 1984.
   Tends to frustrate new users no end, as it will neither take
   commands while expecting input text nor vice versa, and the default
   setup provides no indication of which mode the editor is in (one
   correspondent accordingly reports that he has often heard the
   editor's name pronounced /vi:l/).  Nevertheless it is still
   widely used (about half the respondents in a 1991 Usenet poll
   preferred it), and even EMACS fans often resort to it as a mail
   editor and for small editing jobs (mainly because it starts up
   faster than the bulkier versions of EMACS).  See <a href="h.htm#holy_wars">holy_wars</a>.

</pre><p>
<h1><a name="videotex">videotex</a></h1><pre> n.,obs.  An electronic service offering people the
   privilege of paying to read the weather on their television screens
   instead of having somebody read it to them for free while they
   brush their teeth.  The idea bombed everywhere it wasn't
   government-subsidized, because by the time videotex was practical
   the installed base of personal computers could hook up to
   timesharing services and do the things for which videotex might
   have been worthwhile better and cheaper.  Videotex planners badly
   overestimated both the appeal of getting information from a
   computer and the cost of local intelligence at the user's end.
   Like the <a href="g.htm#gorilla_arm">gorilla_arm</a> effect, this has been a cautionary tale
   to hackers ever since.  See also <a href="v.htm#vannevar">vannevar</a>.

</pre><p>
<h1><a name="virgin">virgin</a></h1><pre> adj.  Unused; pristine; in a known initial state.
   "Let's bring up a virgin system and see if it crashes again."
   (Esp. useful after contracting a <a href="v.htm#virus">virus</a> through <a href="s.htm#sex">SEX</a>.)
   Also, by extension, buffers and the like within a program that have
   not yet been used.

</pre><p>
<h1><a name="virtual">virtual</a></h1><pre> adj.  [via the technical term `virtual memory',
   prob. from the term `virtual image' in optics] 1. Common
   alternative to <a href="l.htm#logical">logical</a>; often used to refer to the artificial
   objects (like addressable virtual memory larger than physical
   memory) created by a computer system to help the system control
   access to shared resources.  2. Simulated; performing the functions
   of something that isn't really there.  An imaginative child's doll
   may be a virtual playmate.  Oppose <a href="r.htm#real">real</a>.

</pre><p>
<h1><a name="virtual_friday">virtual Friday</a></h1><pre> n.  (also `logical Friday') The last day
   before an extended weekend, if that day is not a `real' Friday.
   For example, the U.S. holiday Thanksgiving is always on a Thursday.
   The next day is often also a holiday or taken as an extra day off,
   in which case Wednesday of that week is a virtual Friday (and
   Thursday is a virtual Saturday, as is Friday).  There are also
   `virtual Mondays' that are actually Tuesdays, after the three-day
   weekends associated with many national holidays in the U.S.

</pre><p>
<h1><a name="virtual_reality">virtual reality</a></h1><pre> n.  1. Computer simulations that use 3-D
   graphics and devices such as the Dataglove to allow the user to
   interact with the simulation.  See <a href="c.htm#cyberspace">cyberspace</a>.  2. A form of
   network interaction incorporating aspects of role-playing games,
   interactive theater, improvisational comedy, and `true
   confessions' magazines.  In a virtual reality forum (such as
   Usenet's alt.callahans newsgroup or the <a href="m.htm#mud">MUD</a> experiments on
   Internet), interaction between the participants is written like a
   shared novel complete with scenery, `foreground characters' that
   may be personae utterly unlike the people who write them, and
   common `background characters' manipulable by all parties.  The
   one iron law is that you may not write irreversible changes to a
   character without the consent of the person who `owns' it.
   Otherwise anything goes.  See <a href="b.htm#bamf">bamf</a>, <a href="c.htm#cyberspace">cyberspace</a>,
   <a href="t.htm#teledildonics">teledildonics</a>.

</pre><p>
<h1><a name="virtual_shredder">virtual shredder</a></h1><pre> n.  The jargonic equivalent of the <a href="b.htm#bit_bucket">bit_bucket</a>
    at shops using IBM's VM/CMS operating system.  VM/CMS
   officially supports a whole bestiary of virtual card readers,
   virtual printers, and other phantom devices; these are used to
   supply some of the same capabilities UNIX gets from pipes and I/O
   redirection.

</pre><p>
<h1><a name="virus">virus</a></h1><pre> n.  [from the obvious analogy with biological viruses,
   via SF] A cracker program that searches out other programs and
   `infects' them by embedding a copy of itself in them, so that
   they become <a href="t.htm#trojan_horse">Trojan_horse</a>s.  When these programs are executed,
   the embedded virus is executed too, thus propagating the
   `infection'.  This normally happens invisibly to the user.
   Unlike a <a href="w.htm#worm">worm</a>, a virus cannot infect other computers without
   assistance.  It is propagated by vectors such as humans trading
   programs with their friends (see <a href="s.htm#sex">SEX</a>).  The virus may do
   nothing but propagate itself and then allow the program to run
   normally.  Usually, however, after propagating silently for a
   while, it starts doing things like writing cute messages on the
   terminal or playing strange tricks with the display (some viruses
   include nice <a href="d.htm#display_hack">display_hack</a>s).  Many nasty viruses, written by
   particularly perversely minded <a href="c.htm#cracker">cracker</a>s, do irreversible
   damage, like nuking all the user's files.

   In the 1990s, viruses have become a serious problem, especially
   among IBM PC and Macintosh users (the lack of security on these
   machines enables viruses to spread easily, even infecting the
   operating system).  The production of special anti-virus software
   has become an industry, and a number of exaggerated media reports
   have caused outbreaks of near hysteria among users; many
   <a href="l.htm#luser">luser</a>s tend to blame *everything* that doesn't work as
   they had expected on virus attacks.  Accordingly, this sense of
   `virus' has passed not only into techspeak but into also popular
   usage (where it is often incorrectly used to denote a <a href="w.htm#worm">worm</a> or
   even a <a href="t.htm#trojan_horse">Trojan_horse</a>).  See <a href="p.htm#phage">phage</a>; compare <a href="b.htm#back_door">back_door</a>;
   see also <a href="u.htm#unix_conspiracy">UNIX_conspiracy</a>.

</pre><p>
<h1><a name="visionary">visionary</a></h1><pre> n.  1. One who hacks vision, in the sense of an
   Artificial Intelligence researcher working on the problem of
   getting computers to `see' things using TV cameras.  (There
   isn't any problem in sending information from a TV camera to a
   computer.  The problem is, how can the computer be programmed to
   make use of the camera information?  See <a href="s.htm#smop">SMOP</a>,
   <a href="a.htm#ai-complete">AI-complete</a>.)  2. [IBM] One who reads the outside literature.
   At IBM, apparently, such a penchant is viewed with awe and wonder.

</pre><p>
<h1><a name="vms">VMS</a></h1><pre> /V-M-S/ n.  DEC's proprietary operating system for its
   VAX minicomputer; one of the seven or so environments that loom
   largest in hacker folklore.  Many UNIX fans generously concede that
   VMS would probably be the hacker's favorite commercial OS if UNIX
   didn't exist; though true, this makes VMS fans furious.  One major
   hacker gripe with VMS concerns its slowness -- thus the following
   limerick:

        There once was a system called VMS
        Of cycles by no means abstemious.
             It's chock-full of hacks
             And runs on a VAX
        And makes my poor stomach all squeamious.
                                         -- The Great Quux

   See also <a href="v.htm#vax">VAX</a>, <a href="t.htm#tops-10">TOPS-10</a>, <a href="t.htm#tops-20">TOPS-20</a>, <a href="u.htm#unix">UNIX</a>, <a href="r.htm#runic">runic</a>.

</pre><p>
<h1><a name="voice">voice</a></h1><pre> vt.  To phone someone, as opposed to emailing them or
   connecting in <a href="t.htm#talk_mode">talk_mode</a>.  "I'm busy now; I'll voice you
   later."

</pre><p>
<h1><a name="voice-net">voice-net</a></h1><pre> n.  Hackish way of referring to the telephone
   system, analogizing it to a digital network.  Usenet <a href="s.htm#sig_block">sig_block</a>
   s not uncommonly include the sender's phone next to a
   "Voice:" or "Voice-Net:" header; common variants of this are
   "Voicenet" and "V-Net".  Compare <a href="p.htm#paper-net">paper-net</a>,
   <a href="s.htm#snail-mail">snail-mail</a>.

</pre><p>
<h1><a name="voodoo_programming">voodoo programming</a></h1><pre> n.  [from George Bush's "voodoo
   economics"] The use by guess or cookbook of an <a href="o.htm#obscure">obscure</a> or
   <a href="h.htm#hairy">hairy</a> system, feature, or algorithm that one does not truly
   understand.  The implication is that the technique may not work,
   and if it doesn't, one will never know why.  Almost synonymous with
   <a href="b.htm#black_magic">black_magic</a>, except that black magic typically isn't
   documented and *nobody* understands it.  Compare <a href="m.htm#magic">magic</a>,
   <a href="d.htm#deep_magic">deep_magic</a>, <a href="h.htm#heavy_wizardry">heavy_wizardry</a>, <a href="r.htm#rain_dance">rain_dance</a>, <a href="c.htm#cargo_cult_programming">cargo_cult_programming</a>
   , <a href="w.htm#wave_a_dead_chicken">wave_a_dead_chicken</a>.

</pre><p>
<h1><a name="vr">VR</a></h1><pre> // [MUD] n.  On-line abbrev for <a href="v.htm#virtual_reality">virtual_reality</a>,
   as opposed to <a href="r.htm#rl">RL</a>.

</pre><p>
<h1><a name="vulcan_nerve_pinch">Vulcan nerve pinch</a></h1><pre> n.  [from the old "Star Trek" TV
   series via Commodore Amiga hackers] The keyboard combination that
   forces a soft-boot or jump to ROM monitor (on machines that support
   such a feature).  On many micros this is Ctrl-Alt-Del; on Suns,
   L1-A; on some Macintoshes, it is &ltCmd&gt-&ltPower switch&gt!  Also called
   <a href="t.htm#three-finger_salute">three-finger_salute</a>.  Compare <a href="q.htm#quadruple_bucky">quadruple_bucky</a>.

</pre><p>
<h1><a name="vulture_capitalist">vulture capitalist</a></h1><pre> n.  Pejorative hackerism for `venture
   capitalist', deriving from the common practice of pushing contracts
   that deprive inventors of control over their own innovations and
   most of the money they ought to have made from them.

</pre><p>
<hr><a href=jargon.htm>The Jargon File</a><br>
<a href=intro.htm>Introduction</a><br>
<a href=howwork.htm>How Jargon Works</a><br>
<a href=howuse.htm>How to Use the Lexicon</a><p>
<a href=a.htm>A</a>   <a href=b.htm>B</a>   <a href=c.htm>C</a>   <a href=d.htm>D</a>   <a href=e.htm>E</a>
<a href=f.htm>F</a>   <a href=g.htm>G</a>   <a href=h.htm>H</a>   <a href=i.htm>I</a>   <a href=j.htm>J</a>
<a href=k.htm>K</a>   <a href=l.htm>L</a>   <a href=m.htm>M</a>   <a href=n.htm>N</a>   <a href=o.htm>O</a>
<a href=p.htm>P</a>   <a href=q.htm>Q</a>   <a href=r.htm>R</a>   <a href=s.htm>S</a>   <a href=t.htm>T</a>
<a href=u.htm>U</a>   <a href=v.htm>V</a>   <a href=w.htm>W</a>   <a href=x.htm>X</a>   <a href=y.htm>Y</a>
<a href=z.htm>Z</a>   <a href=notaz.htm>[^a-zA-Z]</a><p>
<a href=appa.htm>Appendix A</a> --- 
<a href=appb.htm>Appendix B</a> --- 
<a href=appc.htm>Appendix C</a>

</HTML>
